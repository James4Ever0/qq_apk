package com.tencent.mobileqq.config.splashlogo;

import SecurityAccountServer.RespondQueryQQBindingStat;
import abss;
import abst;
import absu;
import absv;
import absw;
import absx;
import absz;
import abta;
import abtc;
import abtd;
import abte;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Build.VERSION;
import android.preference.PreferenceManager;
import android.text.TextUtils;
import android.util.Xml;
import com.qq.im.poi.LbsPackConfig;
import com.tencent.av.business.manager.EffectConfigBase;
import com.tencent.av.gameplay.QavGPDownloader;
import com.tencent.av.opengl.effects.EffectBeautyTools;
import com.tencent.av.redpacket.config.AVRedPacketConfigManager;
import com.tencent.av.service.AVRedPacketConfig;
import com.tencent.av.ui.AIOTopRightButtonConfig;
import com.tencent.av.ui.VoiceChangeData;
import com.tencent.av.utils.SignalStrengthReport;
import com.tencent.biz.now.NowLiveManager;
import com.tencent.biz.pubaccount.ecshopassit.EcShopAssistantManager;
import com.tencent.biz.pubaccount.readinjoy.common.ReadInJoyReportManyApps;
import com.tencent.biz.pubaccount.readinjoy.common.ReadInJoyUtils;
import com.tencent.biz.pubaccount.readinjoy.engine.KandianHBManager;
import com.tencent.biz.pubaccount.readinjoy.engine.KandianMergeManager;
import com.tencent.biz.pubaccount.readinjoy.engine.SPEventReportSwitch;
import com.tencent.biz.pubaccount.readinjoy.logic.FeManager;
import com.tencent.biz.pubaccount.readinjoy.logic.SMRM;
import com.tencent.biz.pubaccount.subscript.SubscriptRecommendController;
import com.tencent.biz.pubaccount.util.PublicAccountConfigUtil;
import com.tencent.biz.qqstory.base.QQStoryManager;
import com.tencent.biz.qqstory.boundaries.StoryApi;
import com.tencent.biz.qqstory.takevideo.artfilter.ArtFilterManager;
import com.tencent.biz.qqstory.troop.TroopDynamicConfig;
import com.tencent.biz.qqstory.troop.TroopStoryManager;
import com.tencent.common.app.BaseApplicationImpl;
import com.tencent.common.config.AppSetting;
import com.tencent.device.qfind.QFindConfigUtil;
import com.tencent.hotpatch.PatchFileManager;
import com.tencent.hotpatch.config.PatchConfigManager;
import com.tencent.hotpatch.utils.PatchReporter;
import com.tencent.hotpatch.utils.PatchSharedPreUtil;
import com.tencent.mobileqq.activity.JumpActivity;
import com.tencent.mobileqq.activity.aio.AIOConfigManager;
import com.tencent.mobileqq.activity.aio.AppGuideTipsManager;
import com.tencent.mobileqq.activity.aio.HotReactiveHelper;
import com.tencent.mobileqq.activity.aio.item.TroopPobingItemBuilder;
import com.tencent.mobileqq.activity.aio.photo.PhotoListConfigManager;
import com.tencent.mobileqq.activity.aio.tim.TIMUserManager;
import com.tencent.mobileqq.activity.aio.zhitu.ZhituManager;
import com.tencent.mobileqq.activity.qwallet.PasswdRedBagManager;
import com.tencent.mobileqq.activity.qwallet.preload.PreloadManager;
import com.tencent.mobileqq.activity.richmedia.subtitles.RDConfigServletProxy;
import com.tencent.mobileqq.activity.shortvideo.ProgressiveUtils;
import com.tencent.mobileqq.apollo.ApolloManager;
import com.tencent.mobileqq.apollo.utils.ApolloConfigUtils;
import com.tencent.mobileqq.apollo.utils.ApolloConstant;
import com.tencent.mobileqq.app.BabyQHandler;
import com.tencent.mobileqq.app.ConfigHandler;
import com.tencent.mobileqq.app.DeviceProfileManager;
import com.tencent.mobileqq.app.HotChatManager;
import com.tencent.mobileqq.app.MayknowRecommendManager;
import com.tencent.mobileqq.app.NearbyFlowerManager;
import com.tencent.mobileqq.app.NearbyGrayTipsManager;
import com.tencent.mobileqq.app.PhoneContactManagerImp;
import com.tencent.mobileqq.app.PhoneUnityBannerData;
import com.tencent.mobileqq.app.PhoneUnityManager;
import com.tencent.mobileqq.app.QQAppInterface;
import com.tencent.mobileqq.app.ThreadManager;
import com.tencent.mobileqq.app.TroopManager;
import com.tencent.mobileqq.app.msgnotify.MsgNotifyPushDialog;
import com.tencent.mobileqq.app.soso.LbsInfoReportManager;
import com.tencent.mobileqq.app.upgrade.UpgradeTIMManager;
import com.tencent.mobileqq.app.utils.BatchAddFriendForTroopConfig;
import com.tencent.mobileqq.app.utils.ClassicHeadActivityManager;
import com.tencent.mobileqq.ar.ARGlobalConfigManager;
import com.tencent.mobileqq.ar.ArConfigUtils;
import com.tencent.mobileqq.ar.ArResourceManager;
import com.tencent.mobileqq.ar.FaceScanDownloadManager;
import com.tencent.mobileqq.ar.aidl.ArConfigInfo;
import com.tencent.mobileqq.ar.aidl.ArEffectConfig;
import com.tencent.mobileqq.ark.ArkAiAppCenter;
import com.tencent.mobileqq.ark.ArkAppCenter;
import com.tencent.mobileqq.armap.config.ARMapConfig;
import com.tencent.mobileqq.armap.config.ARMapConfigManager;
import com.tencent.mobileqq.businessCard.BusinessCardManager;
import com.tencent.mobileqq.camera.utils.CameraUtils;
import com.tencent.mobileqq.confess.ConfessConfig;
import com.tencent.mobileqq.confess.ConfessHandler;
import com.tencent.mobileqq.confess.ConfessManager;
import com.tencent.mobileqq.config.Config;
import com.tencent.mobileqq.config.ConfigParser;
import com.tencent.mobileqq.config.operation.QQOperationViopTipTask;
import com.tencent.mobileqq.config.struct.NearbyBannerManager;
import com.tencent.mobileqq.config.struct.PicAndAdConf;
import com.tencent.mobileqq.config.struct.splashproto.ConfigurationService.Config;
import com.tencent.mobileqq.config.struct.splashproto.ConfigurationService.ConfigSeq;
import com.tencent.mobileqq.config.struct.splashproto.ConfigurationService.Content;
import com.tencent.mobileqq.config.struct.splashproto.ConfigurationService.DeviceInfo;
import com.tencent.mobileqq.config.struct.splashproto.ConfigurationService.OS;
import com.tencent.mobileqq.config.struct.splashproto.ConfigurationService.ReqGetConfig;
import com.tencent.mobileqq.config.struct.splashproto.ConfigurationService.RespGetConfig;
import com.tencent.mobileqq.config.struct.splashproto.ConfigurationService.Screen;
import com.tencent.mobileqq.cooperation.ApkUtils;
import com.tencent.mobileqq.data.AppGuideTipsConfig;
import com.tencent.mobileqq.data.Card;
import com.tencent.mobileqq.data.ExpiredPushBanner;
import com.tencent.mobileqq.data.MessageForFoldMsgGrayTips;
import com.tencent.mobileqq.data.ReportedBanner;
import com.tencent.mobileqq.doutu.DoutuManager;
import com.tencent.mobileqq.extendfriend.ExtendFriendManager;
import com.tencent.mobileqq.flashchat.FlashChatManager;
import com.tencent.mobileqq.hotpic.HotPicManager;
import com.tencent.mobileqq.intervideo.now.NowDownloadEngineManager;
import com.tencent.mobileqq.jumplightalk.AIOJumpLightalkConfig;
import com.tencent.mobileqq.jumplightalk.CLJumpLightalkConfig;
import com.tencent.mobileqq.jumplightalk.CallTabLightalkConfig;
import com.tencent.mobileqq.jumplightalk.PCJumpLightalkConfig;
import com.tencent.mobileqq.jumplightalk.QQCallLightalkConfig;
import com.tencent.mobileqq.leba.LebaGridManager;
import com.tencent.mobileqq.lightReply.LightReplyMenuManager;
import com.tencent.mobileqq.lovelanguage.LoveLanguageManager;
import com.tencent.mobileqq.managers.CUOpenCardGuideMng;
import com.tencent.mobileqq.managers.TimUpgradeHongdianManager;
import com.tencent.mobileqq.medalwall.MedalWallMng;
import com.tencent.mobileqq.model.PhoneContactManager;
import com.tencent.mobileqq.msf.sdk.MsfSdkUtils;
import com.tencent.mobileqq.msf.sdk.SettingCloneUtil;
import com.tencent.mobileqq.multimsg.LongTextMsgManager;
import com.tencent.mobileqq.nearby.NearbyFlowerUtil;
import com.tencent.mobileqq.nearby.NearbySPUtil;
import com.tencent.mobileqq.nearby.NearbyUtils;
import com.tencent.mobileqq.nearby.NearbyVideoUtils;
import com.tencent.mobileqq.ocr.OCRManager;
import com.tencent.mobileqq.ocr.data.OcrConfig;
import com.tencent.mobileqq.olympic.OlympicActConfig;
import com.tencent.mobileqq.olympic.OlympicManager;
import com.tencent.mobileqq.olympic.OlympicServlet;
import com.tencent.mobileqq.olympic.utils.OlympicUtil;
import com.tencent.mobileqq.pb.ByteStringMicro;
import com.tencent.mobileqq.pb.InvalidProtocolBufferMicroException;
import com.tencent.mobileqq.pb.PBBytesField;
import com.tencent.mobileqq.pb.PBEnumField;
import com.tencent.mobileqq.pb.PBInt32Field;
import com.tencent.mobileqq.pb.PBRepeatField;
import com.tencent.mobileqq.pb.PBRepeatMessageField;
import com.tencent.mobileqq.pb.PBStringField;
import com.tencent.mobileqq.pb.PBUInt32Field;
import com.tencent.mobileqq.pb.PBUInt64Field;
import com.tencent.mobileqq.persistence.Entity;
import com.tencent.mobileqq.persistence.EntityManager;
import com.tencent.mobileqq.persistence.EntityManagerFactory;
import com.tencent.mobileqq.precover.PrecoverControl;
import com.tencent.mobileqq.precover.PrecoverManager;
import com.tencent.mobileqq.precover.PrecoverUtils;
import com.tencent.mobileqq.ptt.PttConfigController;
import com.tencent.mobileqq.qcall.LightalkSwitchManager;
import com.tencent.mobileqq.richmedia.capture.data.CapturePtvTemplateManager;
import com.tencent.mobileqq.richmedia.capture.data.CaptureVideoFilterManager;
import com.tencent.mobileqq.scribble.ScribbleResMgr;
import com.tencent.mobileqq.search.FunctionModuleConfigManager;
import com.tencent.mobileqq.search.SearchEntryConfigManager;
import com.tencent.mobileqq.search.util.PAOfflineSearchManager;
import com.tencent.mobileqq.search.util.SearchConfigManager;
import com.tencent.mobileqq.search.util.SearchConfigUtils;
import com.tencent.mobileqq.service.message.MessageCache;
import com.tencent.mobileqq.service.profile.ProfileUtil;
import com.tencent.mobileqq.shortvideo.ShortVideoPreDownloader;
import com.tencent.mobileqq.shortvideo.ShortVideoResourceManager;
import com.tencent.mobileqq.shortvideo.mediadevice.CameraCompatibleList;
import com.tencent.mobileqq.shortvideo.qmcf.QmcfDevicesStrategy;
import com.tencent.mobileqq.shortvideo.util.RecentDanceConfigMgr;
import com.tencent.mobileqq.statistics.DAUStatistic;
import com.tencent.mobileqq.statistics.GeneralConfigUtils;
import com.tencent.mobileqq.statistics.ReportController;
import com.tencent.mobileqq.statistics.StatisticCollector;
import com.tencent.mobileqq.stt.SttManager;
import com.tencent.mobileqq.teamwork.TeamWorkUtils;
import com.tencent.mobileqq.troop.data.TroopRankConfig;
import com.tencent.mobileqq.troop.homework.config.HomeworkConfig;
import com.tencent.mobileqq.troop.homework.recite.config.ReciteConfig;
import com.tencent.mobileqq.troop.utils.ChangeMachineManager;
import com.tencent.mobileqq.troop.utils.NearbyVideoChatManager;
import com.tencent.mobileqq.troop.utils.SchoolTroopKeywordManager;
import com.tencent.mobileqq.troop.utils.TroopAppMgr;
import com.tencent.mobileqq.troop.utils.TroopLinkManager;
import com.tencent.mobileqq.troop.utils.TroopRobotManager;
import com.tencent.mobileqq.troop.utils.TroopTopicMgr;
import com.tencent.mobileqq.util.ProfileCardUtil;
import com.tencent.mobileqq.utils.Base64Util;
import com.tencent.mobileqq.utils.BusinessCommonConfig;
import com.tencent.mobileqq.utils.DeviceInfoUtil;
import com.tencent.mobileqq.utils.FileUtils;
import com.tencent.mobileqq.utils.HttpDownloadUtil;
import com.tencent.mobileqq.utils.PackageUtil;
import com.tencent.mobileqq.utils.QAVGroupConfig;
import com.tencent.mobileqq.utils.SharedPreUtils;
import com.tencent.mobileqq.utils.StringUtil;
import com.tencent.mobileqq.utils.httputils.PkgTools;
import com.tencent.mobileqq.vashealth.SportManager;
import com.tencent.open.business.base.OpenConfig;
import com.tencent.qphone.base.remote.FromServiceMsg;
import com.tencent.qphone.base.util.BaseApplication;
import com.tencent.qphone.base.util.QLog;
import com.tencent.util.Pair;
import cooperation.pluginbridge.BridgeHelper;
import cooperation.qwallet.plugin.QWalletHelper;
import cooperation.readinjoy.ReadInJoyHelper;
import dov.com.qq.im.capture.QIMManager;
import dov.com.qq.im.capture.music.QIMMusicConfigManager;
import dov.com.qq.im.capture.paster.QIMPasterConfigManager;
import dov.com.qq.im.capture.text.DynamicTextConfigManager;
import dov.com.qq.im.capture.util.ConfigSimplifier;
import dov.com.tencent.mobileqq.richmedia.capture.util.SVParamManager;
import dov.com.tencent.mobileqq.shortvideo.QIMPtvTemplateManager;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.zip.InflaterInputStream;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import mqq.app.AppRuntime;
import mqq.app.MSFServlet;
import mqq.app.MobileQQ;
import mqq.app.NewIntent;
import mqq.app.Packet;
import mqq.os.MqqHandler;
import oicq.wlogin_sdk.tools.MD5;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xmlpull.v1.XmlPullParser;

public class ConfigServlet
  extends MSFServlet
{
  public static String a;
  private static final int[] jdField_a_of_type_ArrayOfInt = { 1, 2, 3, 5, 10, 13, 18, 23, 26, 31, 32, 33, 35, 38, 42, 249, 44, 46, 47, 49, 50, 53, 55, 207, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 206, 205, 72, 73, 74, 75, 76, 94, 78, 79, 92, 80, 84, 106, 223, 276, 298, 311, 81, 82, 101, 102, 70, 83, 85, 147, 86, 93, 88, 90, 124, 95, 96, 97, 108, 146, 111, 176, 109, 115, 286, 118, 120, 119, 116, 130, 142, 121, 157, 211, 136, 132, 201, 129, 143, 140, 257, 232, 233, 216, 231, 148, 139, 145, 153, 149, 158, 159, 160, 155, 164, 165, 170, 185, 167, 166, 171, 172, 315, 180, 182, 177, 178, 181, 184, 187, 192, 168, 186, 250, 191, 193, 188, 195, 227, 202, 203, 190, 210, 199, 212, StoryApi.a(2131689489), StoryApi.a(2131689490), StoryApi.a(2131689491), StoryApi.a(2131689492), StoryApi.a(2131689494), 218, 226, 225, 222, 256, 228, 235, 234, 238, 242, 247, 244, 245, 253, 295, 252, 255, 254, 259, 260, 258, 262, 261, 204, 263, 270, 271, 267, 275, 268, 269, 272, 274, 279, 308, 281, 284, 280, 285, 287, 290, 292, 294, 289, 307, 306, 305, 304, 309, 310, 3205, 293, 297, 301, 302, 296, 313, 312 };
  private static String b;
  private boolean jdField_a_of_type_Boolean;
  
  static
  {
    jdField_a_of_type_JavaLangString = "";
    jdField_b_of_type_JavaLangString = "用户";
  }
  
  private void A(ConfigurationService.Config paramConfig)
  {
    ThreadManager.getSubThreadHandler().post(new abst(this, paramConfig));
  }
  
  public static void B(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    int j = SharedPreUtils.aN(BaseApplication.getContext(), jdField_a_of_type_JavaLangString);
    if (QLog.isColorLevel()) {
      QLog.i("SPLASH_ConfigServlet", 2, "handleReceiptConfig: ,version: " + paramConfig.version.get() + "| localVersion: " + j);
    }
    if (i != j)
    {
      SharedPreUtils.ad(BaseApplication.getContext(), jdField_a_of_type_JavaLangString, i);
      paramConfig = a(paramConfig);
      if ((paramConfig != null) && (paramConfig.size() > 0))
      {
        paramConfig = paramConfig.iterator();
        while (paramConfig.hasNext())
        {
          localObject = (String)paramConfig.next();
          try
          {
            localObject = new JSONObject((String)localObject);
            if (((JSONObject)localObject).has("kReceiptMsgEnable"))
            {
              i = ((JSONObject)localObject).getInt("kReceiptMsgEnable");
              SharedPreUtils.f(BaseApplication.getContext(), jdField_a_of_type_JavaLangString, "receipt_kReceiptMsgEnable", i);
            }
            if (((JSONObject)localObject).has("kReceiptMsgMaxSendTimes"))
            {
              i = ((JSONObject)localObject).getInt("kReceiptMsgMaxSendTimes");
              SharedPreUtils.f(BaseApplication.getContext(), jdField_a_of_type_JavaLangString, "receipt_kReceiptMsgSendTimes", i);
            }
          }
          catch (JSONException localJSONException)
          {
            localJSONException.printStackTrace();
          }
        }
        AIOConfigManager.a(paramQQAppInterface);
      }
    }
    while (!QLog.isColorLevel())
    {
      Object localObject;
      return;
    }
    QLog.i("SPLASH_ConfigServlet", 2, "handleReceiptConfig:localVersiont == version ");
  }
  
  private void B(ConfigurationService.Config paramConfig)
  {
    int i = 0;
    if (QLog.isDevelopLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, new Object[] { "handlePrecoverConfig, version=", Integer.valueOf(paramConfig.version.get()), ", type=", Integer.valueOf(paramConfig.type.get()), ", msg_content_list=", paramConfig.msg_content_list.get() });
    }
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    ArrayList localArrayList = new ArrayList();
    if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0)) {}
    for (List localList = paramConfig.msg_content_list.get();; localList = null)
    {
      StringBuilder localStringBuilder;
      if (QLog.isColorLevel())
      {
        localStringBuilder = new StringBuilder().append("handlePrecoverConfig, configList.size=");
        if (localList != null) {
          break label252;
        }
      }
      label252:
      for (Object localObject = "null";; localObject = Integer.valueOf(localList.size()))
      {
        QLog.d("SPLASH_ConfigServlet", 2, localObject);
        if ((localList == null) || (localList.size() <= 0)) {
          break;
        }
        while (i < localList.size())
        {
          localObject = (ConfigurationService.Content)paramConfig.msg_content_list.get(i);
          if (localObject != null)
          {
            int j = ((ConfigurationService.Content)localObject).task_id.get();
            localObject = PrecoverUtils.a((ConfigurationService.Content)localObject);
            if (localObject != null) {
              localArrayList.add(new Pair(Integer.valueOf(j), localObject));
            }
          }
          i += 1;
        }
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "handlePrecoverConfig, configList is empty");
      }
      PrecoverUtils.a(localQQAppInterface.getApp(), paramConfig.version.get(), jdField_a_of_type_JavaLangString);
      paramConfig = (PrecoverManager)localQQAppInterface.getManager(178);
      if (paramConfig != null)
      {
        paramConfig.a(localArrayList);
        paramConfig.a();
        paramConfig.a(true);
      }
      return;
    }
  }
  
  private void C(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    PreloadManager localPreloadManager = (PreloadManager)localQQAppInterface.getManager(150);
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() >= 0) && (paramConfig.version.has()))
    {
      i = paramConfig.version.get();
      j = SharedPreUtils.X(localQQAppInterface.getApp(), localQQAppInterface.getCurrentAccountUin());
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "received PRELOAD_CONFIG remote version: " + i + " | localVersion: " + j);
      }
      if (i != j)
      {
        localPreloadManager.a(paramConfig);
        localPreloadManager.c();
        SharedPreUtils.z(localQQAppInterface.getApp(), localQQAppInterface.getCurrentAccountUin(), i);
      }
      localPreloadManager.a(true);
    }
    while (!QLog.isColorLevel())
    {
      int i;
      int j;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 68,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  private void D(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    int i = paramConfig.version.get();
    int j = SharedPreUtils.I(localQQAppInterface.getApp(), localQQAppInterface.getAccount());
    if (QLog.isColorLevel()) {
      QLog.d("msgFold", 2, "received RedBagFoldMsgConfig remote version: " + i + " | localVersion: " + j);
    }
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
    {
      String str = (String)paramConfig.content_list.get(0);
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 69,content: " + str + ",version: " + paramConfig.version.get());
      }
      if (QLog.isColorLevel()) {
        QLog.d("msgFold", 2, "received RedBagFoldMsgConfig content: " + str);
      }
      if (i != j) {
        PasswdRedBagManager.a(localQQAppInterface, i, str);
      }
    }
    do
    {
      return;
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 69,content_list is empty ,version: " + paramConfig.version.get());
      }
      if (i != j) {
        break;
      }
    } while (!QLog.isColorLevel());
    QLog.d("msgFold", 2, "received RedBagFoldMsgConfig, content_list is empty, ignored because of SAME VERSION");
    return;
    if (QLog.isColorLevel()) {
      QLog.d("msgFold", 2, "received RedBagFoldMsgConfig, content_list is empty, use default config");
    }
    paramConfig = (PasswdRedBagManager)localQQAppInterface.getManager(124);
    paramConfig.jdField_a_of_type_Boolean = true;
    paramConfig.jdField_b_of_type_Boolean = MessageForFoldMsgGrayTips.PASSWD_REDBAG_MSG_SWITCH_DEFAULT;
    paramConfig.jdField_a_of_type_Int = MessageForFoldMsgGrayTips.PASSWD_REDBAG_MSG_DISPLAY_NUM_DEFAULT;
    paramConfig.c = MessageForFoldMsgGrayTips.PASSWD_REDBAG_MSG_SWITCH_INDEX;
    paramConfig.d = MessageForFoldMsgGrayTips.PASSWD_REDBAG_MSG_INDEX_WITH_ID;
    SharedPreUtils.a(localQQAppInterface.getApp(), localQQAppInterface.getAccount(), i, paramConfig.jdField_b_of_type_Boolean, paramConfig.jdField_a_of_type_Int, paramConfig.c, paramConfig.d);
  }
  
  private void E(ConfigurationService.Config paramConfig)
  {
    Object localObject = (QQAppInterface)getAppRuntime();
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
    {
      localObject = (MayknowRecommendManager)((QQAppInterface)localObject).getManager(158);
      if (paramConfig.content_list.size() < 0)
      {
        str = (String)paramConfig.content_list.get(0);
        i = paramConfig.version.get();
        j = ((MayknowRecommendManager)localObject).a();
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 74,content: " + str + ",version: " + paramConfig.version.get());
        }
        if ((i != j) || (paramConfig.content_list.size() > 0)) {
          ((MayknowRecommendManager)localObject).a(i, str);
        }
      }
    }
    while (!QLog.isColorLevel())
    {
      String str;
      int i;
      int j;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 74,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  /* Error */
  private void F(ConfigurationService.Config paramConfig)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   4: checkcast 213	com/tencent/mobileqq/app/QQAppInterface
    //   7: astore 71
    //   9: aload_1
    //   10: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   13: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   16: istore 34
    //   18: aload 71
    //   20: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   23: aload 71
    //   25: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   28: invokestatic 393	com/tencent/mobileqq/utils/SharedPreUtils:aO	(Landroid/content/Context;Ljava/lang/String;)I
    //   31: istore_2
    //   32: aload 71
    //   34: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   37: aload 71
    //   39: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   42: invokestatic 396	com/tencent/mobileqq/utils/SharedPreUtils:aP	(Landroid/content/Context;Ljava/lang/String;)I
    //   45: istore_3
    //   46: getstatic 399	com/tencent/common/config/AppSetting:jdField_a_of_type_Int	I
    //   49: istore 4
    //   51: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   54: ifeq +49 -> 103
    //   57: ldc 90
    //   59: iconst_2
    //   60: ldc_w 401
    //   63: iconst_4
    //   64: anewarray 179	java/lang/Object
    //   67: dup
    //   68: iconst_0
    //   69: iload 34
    //   71: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   74: aastore
    //   75: dup
    //   76: iconst_1
    //   77: iload_2
    //   78: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   81: aastore
    //   82: dup
    //   83: iconst_2
    //   84: iload_3
    //   85: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   88: aastore
    //   89: dup
    //   90: iconst_3
    //   91: iload 4
    //   93: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   96: aastore
    //   97: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   100: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   103: iload_3
    //   104: iload 4
    //   106: if_icmpeq +20 -> 126
    //   109: aload 71
    //   111: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   114: aload 71
    //   116: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   119: iload 4
    //   121: invokestatic 408	com/tencent/mobileqq/utils/SharedPreUtils:ae	(Landroid/content/Context;Ljava/lang/String;I)V
    //   124: iconst_0
    //   125: istore_2
    //   126: iload 34
    //   128: iload_2
    //   129: if_icmpeq +3257 -> 3386
    //   132: aload_1
    //   133: iload_2
    //   134: sipush 228
    //   137: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   140: astore 72
    //   142: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   145: ifeq +12 -> 157
    //   148: ldc_w 413
    //   151: iconst_2
    //   152: aload 72
    //   154: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   157: aload 72
    //   159: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   162: ifne +3532 -> 3694
    //   165: iconst_0
    //   166: istore 20
    //   168: iconst_0
    //   169: istore 28
    //   171: iconst_0
    //   172: istore 29
    //   174: iconst_0
    //   175: istore 30
    //   177: iconst_0
    //   178: istore 31
    //   180: iconst_0
    //   181: istore 32
    //   183: iconst_0
    //   184: istore 33
    //   186: iconst_0
    //   187: istore_2
    //   188: iconst_0
    //   189: istore_3
    //   190: iconst_0
    //   191: istore 21
    //   193: iconst_0
    //   194: istore 22
    //   196: iconst_0
    //   197: istore 23
    //   199: iconst_0
    //   200: istore 24
    //   202: iconst_0
    //   203: istore 25
    //   205: iconst_0
    //   206: istore 26
    //   208: iconst_0
    //   209: istore 27
    //   211: aconst_null
    //   212: astore 67
    //   214: aconst_null
    //   215: astore 68
    //   217: aconst_null
    //   218: astore 69
    //   220: aconst_null
    //   221: astore 70
    //   223: aconst_null
    //   224: astore_1
    //   225: aconst_null
    //   226: astore 63
    //   228: aconst_null
    //   229: astore 64
    //   231: aconst_null
    //   232: astore 65
    //   234: aconst_null
    //   235: astore 66
    //   237: aconst_null
    //   238: astore 36
    //   240: ldc 13
    //   242: astore 39
    //   244: aconst_null
    //   245: astore 38
    //   247: aconst_null
    //   248: astore 60
    //   250: aconst_null
    //   251: astore 61
    //   253: aconst_null
    //   254: astore 62
    //   256: aconst_null
    //   257: astore 37
    //   259: iload_3
    //   260: istore 14
    //   262: iload 28
    //   264: istore 7
    //   266: aload 37
    //   268: astore 40
    //   270: aload 39
    //   272: astore 55
    //   274: aload 36
    //   276: astore 45
    //   278: aload_1
    //   279: astore 50
    //   281: iload 21
    //   283: istore 15
    //   285: iload 29
    //   287: istore 8
    //   289: aload 38
    //   291: astore 41
    //   293: aload 39
    //   295: astore 56
    //   297: aload 63
    //   299: astore 46
    //   301: aload 67
    //   303: astore 51
    //   305: iload 22
    //   307: istore 16
    //   309: iload 30
    //   311: istore 9
    //   313: aload 60
    //   315: astore 42
    //   317: aload 39
    //   319: astore 57
    //   321: aload 64
    //   323: astore 47
    //   325: aload 68
    //   327: astore 52
    //   329: iload 23
    //   331: istore 17
    //   333: iload 31
    //   335: istore 10
    //   337: aload 61
    //   339: astore 43
    //   341: aload 39
    //   343: astore 58
    //   345: aload 65
    //   347: astore 48
    //   349: aload 69
    //   351: astore 53
    //   353: iload 24
    //   355: istore 18
    //   357: iload 32
    //   359: istore 11
    //   361: aload 62
    //   363: astore 44
    //   365: aload 39
    //   367: astore 59
    //   369: aload 66
    //   371: astore 49
    //   373: aload 70
    //   375: astore 54
    //   377: invokestatic 425	javax/xml/parsers/DocumentBuilderFactory:newInstance	()Ljavax/xml/parsers/DocumentBuilderFactory;
    //   380: invokevirtual 429	javax/xml/parsers/DocumentBuilderFactory:newDocumentBuilder	()Ljavax/xml/parsers/DocumentBuilder;
    //   383: new 431	java/io/ByteArrayInputStream
    //   386: dup
    //   387: aload 72
    //   389: ldc_w 433
    //   392: invokevirtual 437	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   395: invokespecial 440	java/io/ByteArrayInputStream:<init>	([B)V
    //   398: invokevirtual 446	javax/xml/parsers/DocumentBuilder:parse	(Ljava/io/InputStream;)Lorg/w3c/dom/Document;
    //   401: astore 75
    //   403: iload_3
    //   404: istore 14
    //   406: iload 28
    //   408: istore 7
    //   410: aload 37
    //   412: astore 40
    //   414: aload 39
    //   416: astore 55
    //   418: aload 36
    //   420: astore 45
    //   422: aload_1
    //   423: astore 50
    //   425: iload 21
    //   427: istore 15
    //   429: iload 29
    //   431: istore 8
    //   433: aload 38
    //   435: astore 41
    //   437: aload 39
    //   439: astore 56
    //   441: aload 63
    //   443: astore 46
    //   445: aload 67
    //   447: astore 51
    //   449: iload 22
    //   451: istore 16
    //   453: iload 30
    //   455: istore 9
    //   457: aload 60
    //   459: astore 42
    //   461: aload 39
    //   463: astore 57
    //   465: aload 64
    //   467: astore 47
    //   469: aload 68
    //   471: astore 52
    //   473: iload 23
    //   475: istore 17
    //   477: iload 31
    //   479: istore 10
    //   481: aload 61
    //   483: astore 43
    //   485: aload 39
    //   487: astore 58
    //   489: aload 65
    //   491: astore 48
    //   493: aload 69
    //   495: astore 53
    //   497: iload 24
    //   499: istore 18
    //   501: iload 32
    //   503: istore 11
    //   505: aload 62
    //   507: astore 44
    //   509: aload 39
    //   511: astore 59
    //   513: aload 66
    //   515: astore 49
    //   517: aload 70
    //   519: astore 54
    //   521: aload 75
    //   523: ldc_w 448
    //   526: invokeinterface 454 2 0
    //   531: iconst_0
    //   532: invokeinterface 460 2 0
    //   537: invokeinterface 466 1 0
    //   542: invokeinterface 469 1 0
    //   547: astore 72
    //   549: iload_3
    //   550: istore 14
    //   552: iload 28
    //   554: istore 7
    //   556: aload 37
    //   558: astore 40
    //   560: aload 39
    //   562: astore 55
    //   564: aload 36
    //   566: astore 45
    //   568: aload_1
    //   569: astore 50
    //   571: iload 21
    //   573: istore 15
    //   575: iload 29
    //   577: istore 8
    //   579: aload 38
    //   581: astore 41
    //   583: aload 39
    //   585: astore 56
    //   587: aload 63
    //   589: astore 46
    //   591: aload 67
    //   593: astore 51
    //   595: iload 22
    //   597: istore 16
    //   599: iload 30
    //   601: istore 9
    //   603: aload 60
    //   605: astore 42
    //   607: aload 39
    //   609: astore 57
    //   611: aload 64
    //   613: astore 47
    //   615: aload 68
    //   617: astore 52
    //   619: iload 23
    //   621: istore 17
    //   623: iload 31
    //   625: istore 10
    //   627: aload 61
    //   629: astore 43
    //   631: aload 39
    //   633: astore 58
    //   635: aload 65
    //   637: astore 48
    //   639: aload 69
    //   641: astore 53
    //   643: iload 24
    //   645: istore 18
    //   647: iload 32
    //   649: istore 11
    //   651: aload 62
    //   653: astore 44
    //   655: aload 39
    //   657: astore 59
    //   659: aload 66
    //   661: astore 49
    //   663: aload 70
    //   665: astore 54
    //   667: aload 75
    //   669: ldc_w 471
    //   672: invokeinterface 454 2 0
    //   677: iconst_0
    //   678: invokeinterface 460 2 0
    //   683: invokeinterface 466 1 0
    //   688: invokeinterface 469 1 0
    //   693: astore 73
    //   695: iload_3
    //   696: istore 14
    //   698: iload 28
    //   700: istore 7
    //   702: aload 37
    //   704: astore 40
    //   706: aload 39
    //   708: astore 55
    //   710: aload 36
    //   712: astore 45
    //   714: aload_1
    //   715: astore 50
    //   717: iload 21
    //   719: istore 15
    //   721: iload 29
    //   723: istore 8
    //   725: aload 38
    //   727: astore 41
    //   729: aload 39
    //   731: astore 56
    //   733: aload 63
    //   735: astore 46
    //   737: aload 67
    //   739: astore 51
    //   741: iload 22
    //   743: istore 16
    //   745: iload 30
    //   747: istore 9
    //   749: aload 60
    //   751: astore 42
    //   753: aload 39
    //   755: astore 57
    //   757: aload 64
    //   759: astore 47
    //   761: aload 68
    //   763: astore 52
    //   765: iload 23
    //   767: istore 17
    //   769: iload 31
    //   771: istore 10
    //   773: aload 61
    //   775: astore 43
    //   777: aload 39
    //   779: astore 58
    //   781: aload 65
    //   783: astore 48
    //   785: aload 69
    //   787: astore 53
    //   789: iload 24
    //   791: istore 18
    //   793: iload 32
    //   795: istore 11
    //   797: aload 62
    //   799: astore 44
    //   801: aload 39
    //   803: astore 59
    //   805: aload 66
    //   807: astore 49
    //   809: aload 70
    //   811: astore 54
    //   813: aload 75
    //   815: ldc_w 473
    //   818: invokeinterface 454 2 0
    //   823: iconst_0
    //   824: invokeinterface 460 2 0
    //   829: invokeinterface 466 1 0
    //   834: invokeinterface 469 1 0
    //   839: astore 74
    //   841: iload_3
    //   842: istore 14
    //   844: iload 28
    //   846: istore 7
    //   848: aload 37
    //   850: astore 40
    //   852: aload 39
    //   854: astore 55
    //   856: aload 36
    //   858: astore 45
    //   860: aload_1
    //   861: astore 50
    //   863: iload 21
    //   865: istore 15
    //   867: iload 29
    //   869: istore 8
    //   871: aload 38
    //   873: astore 41
    //   875: aload 39
    //   877: astore 56
    //   879: aload 63
    //   881: astore 46
    //   883: aload 67
    //   885: astore 51
    //   887: iload 22
    //   889: istore 16
    //   891: iload 30
    //   893: istore 9
    //   895: aload 60
    //   897: astore 42
    //   899: aload 39
    //   901: astore 57
    //   903: aload 64
    //   905: astore 47
    //   907: aload 68
    //   909: astore 52
    //   911: iload 23
    //   913: istore 17
    //   915: iload 31
    //   917: istore 10
    //   919: aload 61
    //   921: astore 43
    //   923: aload 39
    //   925: astore 58
    //   927: aload 65
    //   929: astore 48
    //   931: aload 69
    //   933: astore 53
    //   935: iload 24
    //   937: istore 18
    //   939: iload 32
    //   941: istore 11
    //   943: aload 62
    //   945: astore 44
    //   947: aload 39
    //   949: astore 59
    //   951: aload 66
    //   953: astore 49
    //   955: aload 70
    //   957: astore 54
    //   959: aload 75
    //   961: ldc_w 475
    //   964: invokeinterface 454 2 0
    //   969: iconst_0
    //   970: invokeinterface 460 2 0
    //   975: invokeinterface 466 1 0
    //   980: invokeinterface 469 1 0
    //   985: astore_1
    //   986: iload_3
    //   987: istore 14
    //   989: iload 28
    //   991: istore 7
    //   993: aload 37
    //   995: astore 40
    //   997: aload 39
    //   999: astore 55
    //   1001: aload 36
    //   1003: astore 45
    //   1005: aload_1
    //   1006: astore 50
    //   1008: iload 21
    //   1010: istore 15
    //   1012: iload 29
    //   1014: istore 8
    //   1016: aload 38
    //   1018: astore 41
    //   1020: aload 39
    //   1022: astore 56
    //   1024: aload 63
    //   1026: astore 46
    //   1028: aload_1
    //   1029: astore 51
    //   1031: iload 22
    //   1033: istore 16
    //   1035: iload 30
    //   1037: istore 9
    //   1039: aload 60
    //   1041: astore 42
    //   1043: aload 39
    //   1045: astore 57
    //   1047: aload 64
    //   1049: astore 47
    //   1051: aload_1
    //   1052: astore 52
    //   1054: iload 23
    //   1056: istore 17
    //   1058: iload 31
    //   1060: istore 10
    //   1062: aload 61
    //   1064: astore 43
    //   1066: aload 39
    //   1068: astore 58
    //   1070: aload 65
    //   1072: astore 48
    //   1074: aload_1
    //   1075: astore 53
    //   1077: iload 24
    //   1079: istore 18
    //   1081: iload 32
    //   1083: istore 11
    //   1085: aload 62
    //   1087: astore 44
    //   1089: aload 39
    //   1091: astore 59
    //   1093: aload 66
    //   1095: astore 49
    //   1097: aload_1
    //   1098: astore 54
    //   1100: aload 75
    //   1102: ldc_w 477
    //   1105: invokeinterface 454 2 0
    //   1110: iconst_0
    //   1111: invokeinterface 460 2 0
    //   1116: invokeinterface 466 1 0
    //   1121: invokeinterface 469 1 0
    //   1126: astore 36
    //   1128: iload_3
    //   1129: istore 14
    //   1131: iload 28
    //   1133: istore 7
    //   1135: aload 37
    //   1137: astore 40
    //   1139: aload 39
    //   1141: astore 55
    //   1143: aload 36
    //   1145: astore 45
    //   1147: aload_1
    //   1148: astore 50
    //   1150: iload 21
    //   1152: istore 15
    //   1154: iload 29
    //   1156: istore 8
    //   1158: aload 38
    //   1160: astore 41
    //   1162: aload 39
    //   1164: astore 56
    //   1166: aload 36
    //   1168: astore 46
    //   1170: aload_1
    //   1171: astore 51
    //   1173: iload 22
    //   1175: istore 16
    //   1177: iload 30
    //   1179: istore 9
    //   1181: aload 60
    //   1183: astore 42
    //   1185: aload 39
    //   1187: astore 57
    //   1189: aload 36
    //   1191: astore 47
    //   1193: aload_1
    //   1194: astore 52
    //   1196: iload 23
    //   1198: istore 17
    //   1200: iload 31
    //   1202: istore 10
    //   1204: aload 61
    //   1206: astore 43
    //   1208: aload 39
    //   1210: astore 58
    //   1212: aload 36
    //   1214: astore 48
    //   1216: aload_1
    //   1217: astore 53
    //   1219: iload 24
    //   1221: istore 18
    //   1223: iload 32
    //   1225: istore 11
    //   1227: aload 62
    //   1229: astore 44
    //   1231: aload 39
    //   1233: astore 59
    //   1235: aload 36
    //   1237: astore 49
    //   1239: aload_1
    //   1240: astore 54
    //   1242: aload 75
    //   1244: ldc_w 479
    //   1247: invokeinterface 454 2 0
    //   1252: iconst_0
    //   1253: invokeinterface 460 2 0
    //   1258: invokeinterface 466 1 0
    //   1263: invokeinterface 469 1 0
    //   1268: astore 38
    //   1270: iload_3
    //   1271: istore 14
    //   1273: iload 28
    //   1275: istore 7
    //   1277: aload 38
    //   1279: astore 40
    //   1281: aload 39
    //   1283: astore 55
    //   1285: aload 36
    //   1287: astore 45
    //   1289: aload_1
    //   1290: astore 50
    //   1292: iload 21
    //   1294: istore 15
    //   1296: iload 29
    //   1298: istore 8
    //   1300: aload 38
    //   1302: astore 41
    //   1304: aload 39
    //   1306: astore 56
    //   1308: aload 36
    //   1310: astore 46
    //   1312: aload_1
    //   1313: astore 51
    //   1315: iload 22
    //   1317: istore 16
    //   1319: iload 30
    //   1321: istore 9
    //   1323: aload 38
    //   1325: astore 42
    //   1327: aload 39
    //   1329: astore 57
    //   1331: aload 36
    //   1333: astore 47
    //   1335: aload_1
    //   1336: astore 52
    //   1338: iload 23
    //   1340: istore 17
    //   1342: iload 31
    //   1344: istore 10
    //   1346: aload 38
    //   1348: astore 43
    //   1350: aload 39
    //   1352: astore 58
    //   1354: aload 36
    //   1356: astore 48
    //   1358: aload_1
    //   1359: astore 53
    //   1361: iload 24
    //   1363: istore 18
    //   1365: iload 32
    //   1367: istore 11
    //   1369: aload 38
    //   1371: astore 44
    //   1373: aload 39
    //   1375: astore 59
    //   1377: aload 36
    //   1379: astore 49
    //   1381: aload_1
    //   1382: astore 54
    //   1384: iload 25
    //   1386: istore 12
    //   1388: iload 33
    //   1390: istore 19
    //   1392: aload 39
    //   1394: astore 60
    //   1396: aload 75
    //   1398: ldc_w 481
    //   1401: invokeinterface 454 2 0
    //   1406: astore 61
    //   1408: aload 39
    //   1410: astore 37
    //   1412: aload 61
    //   1414: ifnull +428 -> 1842
    //   1417: aload 39
    //   1419: astore 37
    //   1421: iload_3
    //   1422: istore 14
    //   1424: iload 28
    //   1426: istore 7
    //   1428: aload 38
    //   1430: astore 40
    //   1432: aload 39
    //   1434: astore 55
    //   1436: aload 36
    //   1438: astore 45
    //   1440: aload_1
    //   1441: astore 50
    //   1443: iload 21
    //   1445: istore 15
    //   1447: iload 29
    //   1449: istore 8
    //   1451: aload 38
    //   1453: astore 41
    //   1455: aload 39
    //   1457: astore 56
    //   1459: aload 36
    //   1461: astore 46
    //   1463: aload_1
    //   1464: astore 51
    //   1466: iload 22
    //   1468: istore 16
    //   1470: iload 30
    //   1472: istore 9
    //   1474: aload 38
    //   1476: astore 42
    //   1478: aload 39
    //   1480: astore 57
    //   1482: aload 36
    //   1484: astore 47
    //   1486: aload_1
    //   1487: astore 52
    //   1489: iload 23
    //   1491: istore 17
    //   1493: iload 31
    //   1495: istore 10
    //   1497: aload 38
    //   1499: astore 43
    //   1501: aload 39
    //   1503: astore 58
    //   1505: aload 36
    //   1507: astore 48
    //   1509: aload_1
    //   1510: astore 53
    //   1512: iload 24
    //   1514: istore 18
    //   1516: iload 32
    //   1518: istore 11
    //   1520: aload 38
    //   1522: astore 44
    //   1524: aload 39
    //   1526: astore 59
    //   1528: aload 36
    //   1530: astore 49
    //   1532: aload_1
    //   1533: astore 54
    //   1535: iload 25
    //   1537: istore 12
    //   1539: iload 33
    //   1541: istore 19
    //   1543: aload 39
    //   1545: astore 60
    //   1547: aload 61
    //   1549: invokeinterface 484 1 0
    //   1554: ifle +288 -> 1842
    //   1557: iload_3
    //   1558: istore 14
    //   1560: iload 28
    //   1562: istore 7
    //   1564: aload 38
    //   1566: astore 40
    //   1568: aload 39
    //   1570: astore 55
    //   1572: aload 36
    //   1574: astore 45
    //   1576: aload_1
    //   1577: astore 50
    //   1579: iload 21
    //   1581: istore 15
    //   1583: iload 29
    //   1585: istore 8
    //   1587: aload 38
    //   1589: astore 41
    //   1591: aload 39
    //   1593: astore 56
    //   1595: aload 36
    //   1597: astore 46
    //   1599: aload_1
    //   1600: astore 51
    //   1602: iload 22
    //   1604: istore 16
    //   1606: iload 30
    //   1608: istore 9
    //   1610: aload 38
    //   1612: astore 42
    //   1614: aload 39
    //   1616: astore 57
    //   1618: aload 36
    //   1620: astore 47
    //   1622: aload_1
    //   1623: astore 52
    //   1625: iload 23
    //   1627: istore 17
    //   1629: iload 31
    //   1631: istore 10
    //   1633: aload 38
    //   1635: astore 43
    //   1637: aload 39
    //   1639: astore 58
    //   1641: aload 36
    //   1643: astore 48
    //   1645: aload_1
    //   1646: astore 53
    //   1648: iload 24
    //   1650: istore 18
    //   1652: iload 32
    //   1654: istore 11
    //   1656: aload 38
    //   1658: astore 44
    //   1660: aload 39
    //   1662: astore 59
    //   1664: aload 36
    //   1666: astore 49
    //   1668: aload_1
    //   1669: astore 54
    //   1671: iload 25
    //   1673: istore 12
    //   1675: iload 33
    //   1677: istore 19
    //   1679: aload 39
    //   1681: astore 60
    //   1683: aload 61
    //   1685: iconst_0
    //   1686: invokeinterface 460 2 0
    //   1691: invokeinterface 466 1 0
    //   1696: astore 61
    //   1698: aload 39
    //   1700: astore 37
    //   1702: aload 61
    //   1704: ifnull +138 -> 1842
    //   1707: iload_3
    //   1708: istore 14
    //   1710: iload 28
    //   1712: istore 7
    //   1714: aload 38
    //   1716: astore 40
    //   1718: aload 39
    //   1720: astore 55
    //   1722: aload 36
    //   1724: astore 45
    //   1726: aload_1
    //   1727: astore 50
    //   1729: iload 21
    //   1731: istore 15
    //   1733: iload 29
    //   1735: istore 8
    //   1737: aload 38
    //   1739: astore 41
    //   1741: aload 39
    //   1743: astore 56
    //   1745: aload 36
    //   1747: astore 46
    //   1749: aload_1
    //   1750: astore 51
    //   1752: iload 22
    //   1754: istore 16
    //   1756: iload 30
    //   1758: istore 9
    //   1760: aload 38
    //   1762: astore 42
    //   1764: aload 39
    //   1766: astore 57
    //   1768: aload 36
    //   1770: astore 47
    //   1772: aload_1
    //   1773: astore 52
    //   1775: iload 23
    //   1777: istore 17
    //   1779: iload 31
    //   1781: istore 10
    //   1783: aload 38
    //   1785: astore 43
    //   1787: aload 39
    //   1789: astore 58
    //   1791: aload 36
    //   1793: astore 48
    //   1795: aload_1
    //   1796: astore 53
    //   1798: iload 24
    //   1800: istore 18
    //   1802: iload 32
    //   1804: istore 11
    //   1806: aload 38
    //   1808: astore 44
    //   1810: aload 39
    //   1812: astore 59
    //   1814: aload 36
    //   1816: astore 49
    //   1818: aload_1
    //   1819: astore 54
    //   1821: iload 25
    //   1823: istore 12
    //   1825: iload 33
    //   1827: istore 19
    //   1829: aload 39
    //   1831: astore 60
    //   1833: aload 61
    //   1835: invokeinterface 469 1 0
    //   1840: astore 37
    //   1842: iload 27
    //   1844: istore 13
    //   1846: iload 26
    //   1848: istore 5
    //   1850: iload_2
    //   1851: istore 4
    //   1853: iload 20
    //   1855: istore 6
    //   1857: iload_3
    //   1858: istore 14
    //   1860: iload 28
    //   1862: istore 7
    //   1864: aload 38
    //   1866: astore 40
    //   1868: aload 37
    //   1870: astore 55
    //   1872: aload 36
    //   1874: astore 45
    //   1876: aload_1
    //   1877: astore 50
    //   1879: iload 21
    //   1881: istore 15
    //   1883: iload 29
    //   1885: istore 8
    //   1887: aload 38
    //   1889: astore 41
    //   1891: aload 37
    //   1893: astore 56
    //   1895: aload 36
    //   1897: astore 46
    //   1899: aload_1
    //   1900: astore 51
    //   1902: iload 22
    //   1904: istore 16
    //   1906: iload 30
    //   1908: istore 9
    //   1910: aload 38
    //   1912: astore 42
    //   1914: aload 37
    //   1916: astore 57
    //   1918: aload 36
    //   1920: astore 47
    //   1922: aload_1
    //   1923: astore 52
    //   1925: iload 23
    //   1927: istore 17
    //   1929: iload 31
    //   1931: istore 10
    //   1933: aload 38
    //   1935: astore 43
    //   1937: aload 37
    //   1939: astore 58
    //   1941: aload 36
    //   1943: astore 48
    //   1945: aload_1
    //   1946: astore 53
    //   1948: iload 24
    //   1950: istore 18
    //   1952: iload 32
    //   1954: istore 11
    //   1956: aload 38
    //   1958: astore 44
    //   1960: aload 37
    //   1962: astore 59
    //   1964: aload 36
    //   1966: astore 49
    //   1968: aload_1
    //   1969: astore 54
    //   1971: iload 25
    //   1973: istore 12
    //   1975: iload 33
    //   1977: istore 19
    //   1979: aload 37
    //   1981: astore 60
    //   1983: aload 72
    //   1985: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   1988: ifne +1266 -> 3254
    //   1991: iload 27
    //   1993: istore 13
    //   1995: iload 26
    //   1997: istore 5
    //   1999: iload_2
    //   2000: istore 4
    //   2002: iload 20
    //   2004: istore 6
    //   2006: iload_3
    //   2007: istore 14
    //   2009: iload 28
    //   2011: istore 7
    //   2013: aload 38
    //   2015: astore 40
    //   2017: aload 37
    //   2019: astore 55
    //   2021: aload 36
    //   2023: astore 45
    //   2025: aload_1
    //   2026: astore 50
    //   2028: iload 21
    //   2030: istore 15
    //   2032: iload 29
    //   2034: istore 8
    //   2036: aload 38
    //   2038: astore 41
    //   2040: aload 37
    //   2042: astore 56
    //   2044: aload 36
    //   2046: astore 46
    //   2048: aload_1
    //   2049: astore 51
    //   2051: iload 22
    //   2053: istore 16
    //   2055: iload 30
    //   2057: istore 9
    //   2059: aload 38
    //   2061: astore 42
    //   2063: aload 37
    //   2065: astore 57
    //   2067: aload 36
    //   2069: astore 47
    //   2071: aload_1
    //   2072: astore 52
    //   2074: iload 23
    //   2076: istore 17
    //   2078: iload 31
    //   2080: istore 10
    //   2082: aload 38
    //   2084: astore 43
    //   2086: aload 37
    //   2088: astore 58
    //   2090: aload 36
    //   2092: astore 48
    //   2094: aload_1
    //   2095: astore 53
    //   2097: iload 24
    //   2099: istore 18
    //   2101: iload 32
    //   2103: istore 11
    //   2105: aload 38
    //   2107: astore 44
    //   2109: aload 37
    //   2111: astore 59
    //   2113: aload 36
    //   2115: astore 49
    //   2117: aload_1
    //   2118: astore 54
    //   2120: iload 25
    //   2122: istore 12
    //   2124: iload 33
    //   2126: istore 19
    //   2128: aload 37
    //   2130: astore 60
    //   2132: aload 73
    //   2134: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2137: ifne +1117 -> 3254
    //   2140: iload 27
    //   2142: istore 13
    //   2144: iload 26
    //   2146: istore 5
    //   2148: iload_2
    //   2149: istore 4
    //   2151: iload 20
    //   2153: istore 6
    //   2155: iload_3
    //   2156: istore 14
    //   2158: iload 28
    //   2160: istore 7
    //   2162: aload 38
    //   2164: astore 40
    //   2166: aload 37
    //   2168: astore 55
    //   2170: aload 36
    //   2172: astore 45
    //   2174: aload_1
    //   2175: astore 50
    //   2177: iload 21
    //   2179: istore 15
    //   2181: iload 29
    //   2183: istore 8
    //   2185: aload 38
    //   2187: astore 41
    //   2189: aload 37
    //   2191: astore 56
    //   2193: aload 36
    //   2195: astore 46
    //   2197: aload_1
    //   2198: astore 51
    //   2200: iload 22
    //   2202: istore 16
    //   2204: iload 30
    //   2206: istore 9
    //   2208: aload 38
    //   2210: astore 42
    //   2212: aload 37
    //   2214: astore 57
    //   2216: aload 36
    //   2218: astore 47
    //   2220: aload_1
    //   2221: astore 52
    //   2223: iload 23
    //   2225: istore 17
    //   2227: iload 31
    //   2229: istore 10
    //   2231: aload 38
    //   2233: astore 43
    //   2235: aload 37
    //   2237: astore 58
    //   2239: aload 36
    //   2241: astore 48
    //   2243: aload_1
    //   2244: astore 53
    //   2246: iload 24
    //   2248: istore 18
    //   2250: iload 32
    //   2252: istore 11
    //   2254: aload 38
    //   2256: astore 44
    //   2258: aload 37
    //   2260: astore 59
    //   2262: aload 36
    //   2264: astore 49
    //   2266: aload_1
    //   2267: astore 54
    //   2269: iload 25
    //   2271: istore 12
    //   2273: iload 33
    //   2275: istore 19
    //   2277: aload 37
    //   2279: astore 60
    //   2281: aload 36
    //   2283: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2286: ifne +968 -> 3254
    //   2289: iload 27
    //   2291: istore 13
    //   2293: iload 26
    //   2295: istore 5
    //   2297: iload_2
    //   2298: istore 4
    //   2300: iload 20
    //   2302: istore 6
    //   2304: iload_3
    //   2305: istore 14
    //   2307: iload 28
    //   2309: istore 7
    //   2311: aload 38
    //   2313: astore 40
    //   2315: aload 37
    //   2317: astore 55
    //   2319: aload 36
    //   2321: astore 45
    //   2323: aload_1
    //   2324: astore 50
    //   2326: iload 21
    //   2328: istore 15
    //   2330: iload 29
    //   2332: istore 8
    //   2334: aload 38
    //   2336: astore 41
    //   2338: aload 37
    //   2340: astore 56
    //   2342: aload 36
    //   2344: astore 46
    //   2346: aload_1
    //   2347: astore 51
    //   2349: iload 22
    //   2351: istore 16
    //   2353: iload 30
    //   2355: istore 9
    //   2357: aload 38
    //   2359: astore 42
    //   2361: aload 37
    //   2363: astore 57
    //   2365: aload 36
    //   2367: astore 47
    //   2369: aload_1
    //   2370: astore 52
    //   2372: iload 23
    //   2374: istore 17
    //   2376: iload 31
    //   2378: istore 10
    //   2380: aload 38
    //   2382: astore 43
    //   2384: aload 37
    //   2386: astore 58
    //   2388: aload 36
    //   2390: astore 48
    //   2392: aload_1
    //   2393: astore 53
    //   2395: iload 24
    //   2397: istore 18
    //   2399: iload 32
    //   2401: istore 11
    //   2403: aload 38
    //   2405: astore 44
    //   2407: aload 37
    //   2409: astore 59
    //   2411: aload 36
    //   2413: astore 49
    //   2415: aload_1
    //   2416: astore 54
    //   2418: iload 25
    //   2420: istore 12
    //   2422: iload 33
    //   2424: istore 19
    //   2426: aload 37
    //   2428: astore 60
    //   2430: aload 38
    //   2432: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2435: ifne +819 -> 3254
    //   2438: iload 27
    //   2440: istore 13
    //   2442: iload 26
    //   2444: istore 5
    //   2446: iload_2
    //   2447: istore 4
    //   2449: iload 20
    //   2451: istore 6
    //   2453: iload_3
    //   2454: istore 14
    //   2456: iload 28
    //   2458: istore 7
    //   2460: aload 38
    //   2462: astore 40
    //   2464: aload 37
    //   2466: astore 55
    //   2468: aload 36
    //   2470: astore 45
    //   2472: aload_1
    //   2473: astore 50
    //   2475: iload 21
    //   2477: istore 15
    //   2479: iload 29
    //   2481: istore 8
    //   2483: aload 38
    //   2485: astore 41
    //   2487: aload 37
    //   2489: astore 56
    //   2491: aload 36
    //   2493: astore 46
    //   2495: aload_1
    //   2496: astore 51
    //   2498: iload 22
    //   2500: istore 16
    //   2502: iload 30
    //   2504: istore 9
    //   2506: aload 38
    //   2508: astore 42
    //   2510: aload 37
    //   2512: astore 57
    //   2514: aload 36
    //   2516: astore 47
    //   2518: aload_1
    //   2519: astore 52
    //   2521: iload 23
    //   2523: istore 17
    //   2525: iload 31
    //   2527: istore 10
    //   2529: aload 38
    //   2531: astore 43
    //   2533: aload 37
    //   2535: astore 58
    //   2537: aload 36
    //   2539: astore 48
    //   2541: aload_1
    //   2542: astore 53
    //   2544: iload 24
    //   2546: istore 18
    //   2548: iload 32
    //   2550: istore 11
    //   2552: aload 38
    //   2554: astore 44
    //   2556: aload 37
    //   2558: astore 59
    //   2560: aload 36
    //   2562: astore 49
    //   2564: aload_1
    //   2565: astore 54
    //   2567: iload 25
    //   2569: istore 12
    //   2571: iload 33
    //   2573: istore 19
    //   2575: aload 37
    //   2577: astore 60
    //   2579: aload_1
    //   2580: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2583: ifne +671 -> 3254
    //   2586: iload 27
    //   2588: istore 13
    //   2590: iload 26
    //   2592: istore 5
    //   2594: iload_2
    //   2595: istore 4
    //   2597: iload 20
    //   2599: istore 6
    //   2601: iload_3
    //   2602: istore 14
    //   2604: iload 28
    //   2606: istore 7
    //   2608: aload 38
    //   2610: astore 40
    //   2612: aload 37
    //   2614: astore 55
    //   2616: aload 36
    //   2618: astore 45
    //   2620: aload_1
    //   2621: astore 50
    //   2623: iload 21
    //   2625: istore 15
    //   2627: iload 29
    //   2629: istore 8
    //   2631: aload 38
    //   2633: astore 41
    //   2635: aload 37
    //   2637: astore 56
    //   2639: aload 36
    //   2641: astore 46
    //   2643: aload_1
    //   2644: astore 51
    //   2646: iload 22
    //   2648: istore 16
    //   2650: iload 30
    //   2652: istore 9
    //   2654: aload 38
    //   2656: astore 42
    //   2658: aload 37
    //   2660: astore 57
    //   2662: aload 36
    //   2664: astore 47
    //   2666: aload_1
    //   2667: astore 52
    //   2669: iload 23
    //   2671: istore 17
    //   2673: iload 31
    //   2675: istore 10
    //   2677: aload 38
    //   2679: astore 43
    //   2681: aload 37
    //   2683: astore 58
    //   2685: aload 36
    //   2687: astore 48
    //   2689: aload_1
    //   2690: astore 53
    //   2692: iload 24
    //   2694: istore 18
    //   2696: iload 32
    //   2698: istore 11
    //   2700: aload 38
    //   2702: astore 44
    //   2704: aload 37
    //   2706: astore 59
    //   2708: aload 36
    //   2710: astore 49
    //   2712: aload_1
    //   2713: astore 54
    //   2715: iload 25
    //   2717: istore 12
    //   2719: iload 33
    //   2721: istore 19
    //   2723: aload 37
    //   2725: astore 60
    //   2727: aload 74
    //   2729: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2732: ifne +522 -> 3254
    //   2735: iload_3
    //   2736: istore 14
    //   2738: iload 28
    //   2740: istore 7
    //   2742: aload 38
    //   2744: astore 40
    //   2746: aload 37
    //   2748: astore 55
    //   2750: aload 36
    //   2752: astore 45
    //   2754: aload_1
    //   2755: astore 50
    //   2757: iload 21
    //   2759: istore 15
    //   2761: iload 29
    //   2763: istore 8
    //   2765: aload 38
    //   2767: astore 41
    //   2769: aload 37
    //   2771: astore 56
    //   2773: aload 36
    //   2775: astore 46
    //   2777: aload_1
    //   2778: astore 51
    //   2780: iload 22
    //   2782: istore 16
    //   2784: iload 30
    //   2786: istore 9
    //   2788: aload 38
    //   2790: astore 42
    //   2792: aload 37
    //   2794: astore 57
    //   2796: aload 36
    //   2798: astore 47
    //   2800: aload_1
    //   2801: astore 52
    //   2803: iload 23
    //   2805: istore 17
    //   2807: iload 31
    //   2809: istore 10
    //   2811: aload 38
    //   2813: astore 43
    //   2815: aload 37
    //   2817: astore 58
    //   2819: aload 36
    //   2821: astore 48
    //   2823: aload_1
    //   2824: astore 53
    //   2826: iload 24
    //   2828: istore 18
    //   2830: iload 32
    //   2832: istore 11
    //   2834: aload 38
    //   2836: astore 44
    //   2838: aload 37
    //   2840: astore 59
    //   2842: aload 36
    //   2844: astore 49
    //   2846: aload_1
    //   2847: astore 54
    //   2849: iload 25
    //   2851: istore 12
    //   2853: iload 33
    //   2855: istore 19
    //   2857: aload 37
    //   2859: astore 60
    //   2861: aload 72
    //   2863: invokestatic 487	java/lang/Integer:valueOf	(Ljava/lang/String;)Ljava/lang/Integer;
    //   2866: invokevirtual 490	java/lang/Integer:intValue	()I
    //   2869: istore_2
    //   2870: iload_3
    //   2871: istore 14
    //   2873: iload_2
    //   2874: istore 7
    //   2876: aload 38
    //   2878: astore 40
    //   2880: aload 37
    //   2882: astore 55
    //   2884: aload 36
    //   2886: astore 45
    //   2888: aload_1
    //   2889: astore 50
    //   2891: iload 21
    //   2893: istore 15
    //   2895: iload_2
    //   2896: istore 8
    //   2898: aload 38
    //   2900: astore 41
    //   2902: aload 37
    //   2904: astore 56
    //   2906: aload 36
    //   2908: astore 46
    //   2910: aload_1
    //   2911: astore 51
    //   2913: iload 22
    //   2915: istore 16
    //   2917: iload_2
    //   2918: istore 9
    //   2920: aload 38
    //   2922: astore 42
    //   2924: aload 37
    //   2926: astore 57
    //   2928: aload 36
    //   2930: astore 47
    //   2932: aload_1
    //   2933: astore 52
    //   2935: iload 23
    //   2937: istore 17
    //   2939: iload_2
    //   2940: istore 10
    //   2942: aload 38
    //   2944: astore 43
    //   2946: aload 37
    //   2948: astore 58
    //   2950: aload 36
    //   2952: astore 48
    //   2954: aload_1
    //   2955: astore 53
    //   2957: iload 24
    //   2959: istore 18
    //   2961: iload_2
    //   2962: istore 11
    //   2964: aload 38
    //   2966: astore 44
    //   2968: aload 37
    //   2970: astore 59
    //   2972: aload 36
    //   2974: astore 49
    //   2976: aload_1
    //   2977: astore 54
    //   2979: iload 25
    //   2981: istore 12
    //   2983: iload_2
    //   2984: istore 19
    //   2986: aload 37
    //   2988: astore 60
    //   2990: aload 73
    //   2992: invokestatic 487	java/lang/Integer:valueOf	(Ljava/lang/String;)Ljava/lang/Integer;
    //   2995: invokevirtual 490	java/lang/Integer:intValue	()I
    //   2998: istore_3
    //   2999: iload_3
    //   3000: istore 14
    //   3002: iload_2
    //   3003: istore 7
    //   3005: aload 38
    //   3007: astore 40
    //   3009: aload 37
    //   3011: astore 55
    //   3013: aload 36
    //   3015: astore 45
    //   3017: aload_1
    //   3018: astore 50
    //   3020: iload_3
    //   3021: istore 15
    //   3023: iload_2
    //   3024: istore 8
    //   3026: aload 38
    //   3028: astore 41
    //   3030: aload 37
    //   3032: astore 56
    //   3034: aload 36
    //   3036: astore 46
    //   3038: aload_1
    //   3039: astore 51
    //   3041: iload_3
    //   3042: istore 16
    //   3044: iload_2
    //   3045: istore 9
    //   3047: aload 38
    //   3049: astore 42
    //   3051: aload 37
    //   3053: astore 57
    //   3055: aload 36
    //   3057: astore 47
    //   3059: aload_1
    //   3060: astore 52
    //   3062: iload_3
    //   3063: istore 17
    //   3065: iload_2
    //   3066: istore 10
    //   3068: aload 38
    //   3070: astore 43
    //   3072: aload 37
    //   3074: astore 58
    //   3076: aload 36
    //   3078: astore 48
    //   3080: aload_1
    //   3081: astore 53
    //   3083: iload_3
    //   3084: istore 18
    //   3086: iload_2
    //   3087: istore 11
    //   3089: aload 38
    //   3091: astore 44
    //   3093: aload 37
    //   3095: astore 59
    //   3097: aload 36
    //   3099: astore 49
    //   3101: aload_1
    //   3102: astore 54
    //   3104: iload_3
    //   3105: istore 12
    //   3107: iload_2
    //   3108: istore 19
    //   3110: aload 37
    //   3112: astore 60
    //   3114: aload 74
    //   3116: invokestatic 487	java/lang/Integer:valueOf	(Ljava/lang/String;)Ljava/lang/Integer;
    //   3119: invokevirtual 490	java/lang/Integer:intValue	()I
    //   3122: istore 4
    //   3124: iload 4
    //   3126: istore 7
    //   3128: iload 7
    //   3130: istore 13
    //   3132: iload_3
    //   3133: istore 5
    //   3135: iload_2
    //   3136: istore 4
    //   3138: iload 20
    //   3140: istore 6
    //   3142: iload_2
    //   3143: iflt +111 -> 3254
    //   3146: iload 7
    //   3148: istore 13
    //   3150: iload_3
    //   3151: istore 5
    //   3153: iload_2
    //   3154: istore 4
    //   3156: iload 20
    //   3158: istore 6
    //   3160: iload_2
    //   3161: iconst_1
    //   3162: if_icmpgt +92 -> 3254
    //   3165: iload 7
    //   3167: istore 13
    //   3169: iload_3
    //   3170: istore 5
    //   3172: iload_2
    //   3173: istore 4
    //   3175: iload 20
    //   3177: istore 6
    //   3179: iload_3
    //   3180: iflt +74 -> 3254
    //   3183: iload 7
    //   3185: istore 13
    //   3187: iload_3
    //   3188: istore 5
    //   3190: iload_2
    //   3191: istore 4
    //   3193: iload 20
    //   3195: istore 6
    //   3197: iload_3
    //   3198: iconst_1
    //   3199: if_icmpgt +55 -> 3254
    //   3202: iload 7
    //   3204: istore 13
    //   3206: iload_3
    //   3207: istore 5
    //   3209: iload_2
    //   3210: istore 4
    //   3212: iload 20
    //   3214: istore 6
    //   3216: iload 7
    //   3218: iflt +36 -> 3254
    //   3221: iload 7
    //   3223: istore 13
    //   3225: iload_3
    //   3226: istore 5
    //   3228: iload_2
    //   3229: istore 4
    //   3231: iload 20
    //   3233: istore 6
    //   3235: iload 7
    //   3237: iconst_1
    //   3238: if_icmpgt +16 -> 3254
    //   3241: iconst_1
    //   3242: istore 6
    //   3244: iload_2
    //   3245: istore 4
    //   3247: iload_3
    //   3248: istore 5
    //   3250: iload 7
    //   3252: istore 13
    //   3254: aload 37
    //   3256: astore 39
    //   3258: aload_1
    //   3259: astore 37
    //   3261: iload 6
    //   3263: istore_2
    //   3264: aload 36
    //   3266: astore_1
    //   3267: iload 5
    //   3269: istore_3
    //   3270: iload 4
    //   3272: istore 6
    //   3274: iload 13
    //   3276: istore 5
    //   3278: aload 39
    //   3280: astore 36
    //   3282: iload_3
    //   3283: istore 4
    //   3285: iload 6
    //   3287: istore_3
    //   3288: iload_2
    //   3289: ifeq +97 -> 3386
    //   3292: invokestatic 495	com/tencent/mobileqq/activity/aio/qim/QIMUserManager:a	()Lcom/tencent/mobileqq/activity/aio/qim/QIMUserManager;
    //   3295: aload 71
    //   3297: invokevirtual 498	com/tencent/mobileqq/activity/aio/qim/QIMUserManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)Ljava/lang/String;
    //   3300: astore 39
    //   3302: invokestatic 495	com/tencent/mobileqq/activity/aio/qim/QIMUserManager:a	()Lcom/tencent/mobileqq/activity/aio/qim/QIMUserManager;
    //   3305: aload 71
    //   3307: invokevirtual 500	com/tencent/mobileqq/activity/aio/qim/QIMUserManager:c	(Lcom/tencent/mobileqq/app/QQAppInterface;)Ljava/lang/String;
    //   3310: astore 40
    //   3312: iconst_0
    //   3313: istore 35
    //   3315: aload 39
    //   3317: aload_1
    //   3318: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3321: ifeq +13 -> 3334
    //   3324: aload 40
    //   3326: aload 38
    //   3328: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3331: ifne +6 -> 3337
    //   3334: iconst_1
    //   3335: istore 35
    //   3337: invokestatic 495	com/tencent/mobileqq/activity/aio/qim/QIMUserManager:a	()Lcom/tencent/mobileqq/activity/aio/qim/QIMUserManager;
    //   3340: iload_3
    //   3341: iload 4
    //   3343: aload_1
    //   3344: aload 36
    //   3346: aload 38
    //   3348: aload 37
    //   3350: iload 35
    //   3352: iload 5
    //   3354: invokevirtual 506	com/tencent/mobileqq/activity/aio/qim/QIMUserManager:a	(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZI)V
    //   3357: aload 71
    //   3359: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   3362: aload 71
    //   3364: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   3367: iload 34
    //   3369: iload_3
    //   3370: iload 4
    //   3372: aload_1
    //   3373: aload 38
    //   3375: aload 36
    //   3377: aload 37
    //   3379: iload 35
    //   3381: iload 5
    //   3383: invokestatic 509	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;IIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZI)V
    //   3386: return
    //   3387: astore 39
    //   3389: ldc 13
    //   3391: astore 36
    //   3393: aconst_null
    //   3394: astore 37
    //   3396: iconst_0
    //   3397: istore_3
    //   3398: aconst_null
    //   3399: astore_1
    //   3400: aconst_null
    //   3401: astore 38
    //   3403: iconst_0
    //   3404: istore_2
    //   3405: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   3408: ifeq +16 -> 3424
    //   3411: ldc_w 413
    //   3414: iconst_2
    //   3415: aload 39
    //   3417: iconst_0
    //   3418: anewarray 179	java/lang/Object
    //   3421: invokestatic 512	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/Throwable;[Ljava/lang/Object;)V
    //   3424: iconst_0
    //   3425: istore 5
    //   3427: iconst_0
    //   3428: istore 6
    //   3430: aload 38
    //   3432: astore 39
    //   3434: aload_1
    //   3435: astore 38
    //   3437: iload_2
    //   3438: istore 4
    //   3440: iload 6
    //   3442: istore_2
    //   3443: aload 39
    //   3445: astore_1
    //   3446: goto -158 -> 3288
    //   3449: astore_1
    //   3450: iload 14
    //   3452: istore 4
    //   3454: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   3457: ifeq +15 -> 3472
    //   3460: ldc_w 413
    //   3463: iconst_2
    //   3464: aload_1
    //   3465: iconst_0
    //   3466: anewarray 179	java/lang/Object
    //   3469: invokestatic 512	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/Throwable;[Ljava/lang/Object;)V
    //   3472: iload 7
    //   3474: istore_3
    //   3475: aload 55
    //   3477: astore 36
    //   3479: aload 50
    //   3481: astore 37
    //   3483: iconst_0
    //   3484: istore 5
    //   3486: iconst_0
    //   3487: istore_2
    //   3488: aload 45
    //   3490: astore_1
    //   3491: aload 40
    //   3493: astore 38
    //   3495: goto -207 -> 3288
    //   3498: astore_1
    //   3499: iload 15
    //   3501: istore 4
    //   3503: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   3506: ifeq +15 -> 3521
    //   3509: ldc_w 413
    //   3512: iconst_2
    //   3513: aload_1
    //   3514: iconst_0
    //   3515: anewarray 179	java/lang/Object
    //   3518: invokestatic 512	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/Throwable;[Ljava/lang/Object;)V
    //   3521: iload 8
    //   3523: istore_3
    //   3524: aload 56
    //   3526: astore 36
    //   3528: aload 51
    //   3530: astore 37
    //   3532: iconst_0
    //   3533: istore 5
    //   3535: iconst_0
    //   3536: istore_2
    //   3537: aload 46
    //   3539: astore_1
    //   3540: aload 41
    //   3542: astore 38
    //   3544: goto -256 -> 3288
    //   3547: astore_1
    //   3548: iload 16
    //   3550: istore 4
    //   3552: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   3555: ifeq +15 -> 3570
    //   3558: ldc_w 413
    //   3561: iconst_2
    //   3562: aload_1
    //   3563: iconst_0
    //   3564: anewarray 179	java/lang/Object
    //   3567: invokestatic 512	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/Throwable;[Ljava/lang/Object;)V
    //   3570: iload 9
    //   3572: istore_3
    //   3573: aload 57
    //   3575: astore 36
    //   3577: aload 52
    //   3579: astore 37
    //   3581: iconst_0
    //   3582: istore 5
    //   3584: iconst_0
    //   3585: istore_2
    //   3586: aload 47
    //   3588: astore_1
    //   3589: aload 42
    //   3591: astore 38
    //   3593: goto -305 -> 3288
    //   3596: astore_1
    //   3597: iload 17
    //   3599: istore 4
    //   3601: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   3604: ifeq +15 -> 3619
    //   3607: ldc_w 413
    //   3610: iconst_2
    //   3611: aload_1
    //   3612: iconst_0
    //   3613: anewarray 179	java/lang/Object
    //   3616: invokestatic 512	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/Throwable;[Ljava/lang/Object;)V
    //   3619: iload 10
    //   3621: istore_3
    //   3622: aload 58
    //   3624: astore 36
    //   3626: aload 53
    //   3628: astore 37
    //   3630: iconst_0
    //   3631: istore 5
    //   3633: iconst_0
    //   3634: istore_2
    //   3635: aload 48
    //   3637: astore_1
    //   3638: aload 43
    //   3640: astore 38
    //   3642: goto -354 -> 3288
    //   3645: astore_1
    //   3646: iload 18
    //   3648: istore 4
    //   3650: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   3653: ifeq +15 -> 3668
    //   3656: ldc_w 413
    //   3659: iconst_2
    //   3660: aload_1
    //   3661: iconst_0
    //   3662: anewarray 179	java/lang/Object
    //   3665: invokestatic 512	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/Throwable;[Ljava/lang/Object;)V
    //   3668: iload 11
    //   3670: istore_3
    //   3671: aload 59
    //   3673: astore 36
    //   3675: aload 54
    //   3677: astore 37
    //   3679: iconst_0
    //   3680: istore 5
    //   3682: iconst_0
    //   3683: istore_2
    //   3684: aload 49
    //   3686: astore_1
    //   3687: aload 44
    //   3689: astore 38
    //   3691: goto -403 -> 3288
    //   3694: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   3697: ifeq -311 -> 3386
    //   3700: ldc 90
    //   3702: iconst_2
    //   3703: new 92	java/lang/StringBuilder
    //   3706: dup
    //   3707: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   3710: ldc_w 514
    //   3713: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   3716: aload_1
    //   3717: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   3720: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   3723: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   3726: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   3729: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   3732: return
    //   3733: astore 39
    //   3735: ldc 13
    //   3737: astore 36
    //   3739: aload_1
    //   3740: astore 37
    //   3742: iconst_0
    //   3743: istore_3
    //   3744: aconst_null
    //   3745: astore_1
    //   3746: aconst_null
    //   3747: astore 38
    //   3749: iconst_0
    //   3750: istore_2
    //   3751: goto -346 -> 3405
    //   3754: astore 39
    //   3756: ldc 13
    //   3758: astore 40
    //   3760: aload_1
    //   3761: astore 37
    //   3763: iconst_0
    //   3764: istore_3
    //   3765: aconst_null
    //   3766: astore_1
    //   3767: aload 36
    //   3769: astore 38
    //   3771: iconst_0
    //   3772: istore_2
    //   3773: aload 40
    //   3775: astore 36
    //   3777: goto -372 -> 3405
    //   3780: astore 39
    //   3782: aload_1
    //   3783: astore 37
    //   3785: iload 19
    //   3787: istore_3
    //   3788: aload 38
    //   3790: astore_1
    //   3791: aload 36
    //   3793: astore 38
    //   3795: iload 12
    //   3797: istore_2
    //   3798: aload 60
    //   3800: astore 36
    //   3802: goto -397 -> 3405
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	3805	0	this	ConfigServlet
    //   0	3805	1	paramConfig	ConfigurationService.Config
    //   31	3767	2	i	int
    //   45	3743	3	j	int
    //   49	3600	4	k	int
    //   1848	1833	5	m	int
    //   1855	1586	6	n	int
    //   264	3209	7	i1	int
    //   287	3235	8	i2	int
    //   311	3260	9	i3	int
    //   335	3285	10	i4	int
    //   359	3310	11	i5	int
    //   1386	2410	12	i6	int
    //   1844	1431	13	i7	int
    //   260	3191	14	i8	int
    //   283	3217	15	i9	int
    //   307	3242	16	i10	int
    //   331	3267	17	i11	int
    //   355	3292	18	i12	int
    //   1390	2396	19	i13	int
    //   166	3066	20	i14	int
    //   191	2701	21	i15	int
    //   194	2720	22	i16	int
    //   197	2739	23	i17	int
    //   200	2758	24	i18	int
    //   203	2777	25	i19	int
    //   206	2385	26	i20	int
    //   209	2378	27	i21	int
    //   169	2570	28	i22	int
    //   172	2590	29	i23	int
    //   175	2610	30	i24	int
    //   178	2630	31	i25	int
    //   181	2650	32	i26	int
    //   184	2670	33	i27	int
    //   16	3352	34	i28	int
    //   3313	67	35	bool	boolean
    //   238	3563	36	localObject1	Object
    //   257	3527	37	localObject2	Object
    //   245	3549	38	localObject3	Object
    //   242	3074	39	localObject4	Object
    //   3387	29	39	localParserConfigurationException1	javax.xml.parsers.ParserConfigurationException
    //   3432	12	39	localObject5	Object
    //   3733	1	39	localParserConfigurationException2	javax.xml.parsers.ParserConfigurationException
    //   3754	1	39	localParserConfigurationException3	javax.xml.parsers.ParserConfigurationException
    //   3780	1	39	localParserConfigurationException4	javax.xml.parsers.ParserConfigurationException
    //   268	3506	40	localObject6	Object
    //   291	3250	41	localObject7	Object
    //   315	3275	42	localObject8	Object
    //   339	3300	43	localObject9	Object
    //   363	3325	44	localObject10	Object
    //   276	3213	45	localObject11	Object
    //   299	3239	46	localObject12	Object
    //   323	3264	47	localObject13	Object
    //   347	3289	48	localObject14	Object
    //   371	3314	49	localObject15	Object
    //   279	3201	50	localConfig	ConfigurationService.Config
    //   303	3226	51	localObject16	Object
    //   327	3251	52	localObject17	Object
    //   351	3276	53	localObject18	Object
    //   375	3301	54	localObject19	Object
    //   272	3204	55	localObject20	Object
    //   295	3230	56	localObject21	Object
    //   319	3255	57	localObject22	Object
    //   343	3280	58	localObject23	Object
    //   367	3305	59	localObject24	Object
    //   248	3551	60	localObject25	Object
    //   251	1583	61	localObject26	Object
    //   254	974	62	localObject27	Object
    //   226	799	63	localObject28	Object
    //   229	819	64	localObject29	Object
    //   232	839	65	localObject30	Object
    //   235	859	66	localObject31	Object
    //   212	672	67	localObject32	Object
    //   215	693	68	localObject33	Object
    //   218	714	69	localObject34	Object
    //   221	735	70	localObject35	Object
    //   7	3356	71	localQQAppInterface	QQAppInterface
    //   140	2722	72	str1	String
    //   693	2298	73	str2	String
    //   839	2276	74	str3	String
    //   401	996	75	localDocument	Document
    // Exception table:
    //   from	to	target	type
    //   377	403	3387	javax/xml/parsers/ParserConfigurationException
    //   521	549	3387	javax/xml/parsers/ParserConfigurationException
    //   667	695	3387	javax/xml/parsers/ParserConfigurationException
    //   813	841	3387	javax/xml/parsers/ParserConfigurationException
    //   959	986	3387	javax/xml/parsers/ParserConfigurationException
    //   377	403	3449	java/lang/NumberFormatException
    //   521	549	3449	java/lang/NumberFormatException
    //   667	695	3449	java/lang/NumberFormatException
    //   813	841	3449	java/lang/NumberFormatException
    //   959	986	3449	java/lang/NumberFormatException
    //   1100	1128	3449	java/lang/NumberFormatException
    //   1242	1270	3449	java/lang/NumberFormatException
    //   1396	1408	3449	java/lang/NumberFormatException
    //   1547	1557	3449	java/lang/NumberFormatException
    //   1683	1698	3449	java/lang/NumberFormatException
    //   1833	1842	3449	java/lang/NumberFormatException
    //   1983	1991	3449	java/lang/NumberFormatException
    //   2132	2140	3449	java/lang/NumberFormatException
    //   2281	2289	3449	java/lang/NumberFormatException
    //   2430	2438	3449	java/lang/NumberFormatException
    //   2579	2586	3449	java/lang/NumberFormatException
    //   2727	2735	3449	java/lang/NumberFormatException
    //   2861	2870	3449	java/lang/NumberFormatException
    //   2990	2999	3449	java/lang/NumberFormatException
    //   3114	3124	3449	java/lang/NumberFormatException
    //   377	403	3498	java/io/UnsupportedEncodingException
    //   521	549	3498	java/io/UnsupportedEncodingException
    //   667	695	3498	java/io/UnsupportedEncodingException
    //   813	841	3498	java/io/UnsupportedEncodingException
    //   959	986	3498	java/io/UnsupportedEncodingException
    //   1100	1128	3498	java/io/UnsupportedEncodingException
    //   1242	1270	3498	java/io/UnsupportedEncodingException
    //   1396	1408	3498	java/io/UnsupportedEncodingException
    //   1547	1557	3498	java/io/UnsupportedEncodingException
    //   1683	1698	3498	java/io/UnsupportedEncodingException
    //   1833	1842	3498	java/io/UnsupportedEncodingException
    //   1983	1991	3498	java/io/UnsupportedEncodingException
    //   2132	2140	3498	java/io/UnsupportedEncodingException
    //   2281	2289	3498	java/io/UnsupportedEncodingException
    //   2430	2438	3498	java/io/UnsupportedEncodingException
    //   2579	2586	3498	java/io/UnsupportedEncodingException
    //   2727	2735	3498	java/io/UnsupportedEncodingException
    //   2861	2870	3498	java/io/UnsupportedEncodingException
    //   2990	2999	3498	java/io/UnsupportedEncodingException
    //   3114	3124	3498	java/io/UnsupportedEncodingException
    //   377	403	3547	java/io/IOException
    //   521	549	3547	java/io/IOException
    //   667	695	3547	java/io/IOException
    //   813	841	3547	java/io/IOException
    //   959	986	3547	java/io/IOException
    //   1100	1128	3547	java/io/IOException
    //   1242	1270	3547	java/io/IOException
    //   1396	1408	3547	java/io/IOException
    //   1547	1557	3547	java/io/IOException
    //   1683	1698	3547	java/io/IOException
    //   1833	1842	3547	java/io/IOException
    //   1983	1991	3547	java/io/IOException
    //   2132	2140	3547	java/io/IOException
    //   2281	2289	3547	java/io/IOException
    //   2430	2438	3547	java/io/IOException
    //   2579	2586	3547	java/io/IOException
    //   2727	2735	3547	java/io/IOException
    //   2861	2870	3547	java/io/IOException
    //   2990	2999	3547	java/io/IOException
    //   3114	3124	3547	java/io/IOException
    //   377	403	3596	org/xml/sax/SAXException
    //   521	549	3596	org/xml/sax/SAXException
    //   667	695	3596	org/xml/sax/SAXException
    //   813	841	3596	org/xml/sax/SAXException
    //   959	986	3596	org/xml/sax/SAXException
    //   1100	1128	3596	org/xml/sax/SAXException
    //   1242	1270	3596	org/xml/sax/SAXException
    //   1396	1408	3596	org/xml/sax/SAXException
    //   1547	1557	3596	org/xml/sax/SAXException
    //   1683	1698	3596	org/xml/sax/SAXException
    //   1833	1842	3596	org/xml/sax/SAXException
    //   1983	1991	3596	org/xml/sax/SAXException
    //   2132	2140	3596	org/xml/sax/SAXException
    //   2281	2289	3596	org/xml/sax/SAXException
    //   2430	2438	3596	org/xml/sax/SAXException
    //   2579	2586	3596	org/xml/sax/SAXException
    //   2727	2735	3596	org/xml/sax/SAXException
    //   2861	2870	3596	org/xml/sax/SAXException
    //   2990	2999	3596	org/xml/sax/SAXException
    //   3114	3124	3596	org/xml/sax/SAXException
    //   377	403	3645	java/lang/NullPointerException
    //   521	549	3645	java/lang/NullPointerException
    //   667	695	3645	java/lang/NullPointerException
    //   813	841	3645	java/lang/NullPointerException
    //   959	986	3645	java/lang/NullPointerException
    //   1100	1128	3645	java/lang/NullPointerException
    //   1242	1270	3645	java/lang/NullPointerException
    //   1396	1408	3645	java/lang/NullPointerException
    //   1547	1557	3645	java/lang/NullPointerException
    //   1683	1698	3645	java/lang/NullPointerException
    //   1833	1842	3645	java/lang/NullPointerException
    //   1983	1991	3645	java/lang/NullPointerException
    //   2132	2140	3645	java/lang/NullPointerException
    //   2281	2289	3645	java/lang/NullPointerException
    //   2430	2438	3645	java/lang/NullPointerException
    //   2579	2586	3645	java/lang/NullPointerException
    //   2727	2735	3645	java/lang/NullPointerException
    //   2861	2870	3645	java/lang/NullPointerException
    //   2990	2999	3645	java/lang/NullPointerException
    //   3114	3124	3645	java/lang/NullPointerException
    //   1100	1128	3733	javax/xml/parsers/ParserConfigurationException
    //   1242	1270	3754	javax/xml/parsers/ParserConfigurationException
    //   1396	1408	3780	javax/xml/parsers/ParserConfigurationException
    //   1547	1557	3780	javax/xml/parsers/ParserConfigurationException
    //   1683	1698	3780	javax/xml/parsers/ParserConfigurationException
    //   1833	1842	3780	javax/xml/parsers/ParserConfigurationException
    //   1983	1991	3780	javax/xml/parsers/ParserConfigurationException
    //   2132	2140	3780	javax/xml/parsers/ParserConfigurationException
    //   2281	2289	3780	javax/xml/parsers/ParserConfigurationException
    //   2430	2438	3780	javax/xml/parsers/ParserConfigurationException
    //   2579	2586	3780	javax/xml/parsers/ParserConfigurationException
    //   2727	2735	3780	javax/xml/parsers/ParserConfigurationException
    //   2861	2870	3780	javax/xml/parsers/ParserConfigurationException
    //   2990	2999	3780	javax/xml/parsers/ParserConfigurationException
    //   3114	3124	3780	javax/xml/parsers/ParserConfigurationException
  }
  
  private void G(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    int n = paramConfig.version.get();
    int i = SharedPreUtils.aQ(localQQAppInterface.getApp(), localQQAppInterface.getAccount());
    int j = SharedPreUtils.aR(localQQAppInterface.getApp(), localQQAppInterface.getAccount());
    int k = AppSetting.jdField_a_of_type_Int;
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, String.format("received TimUserSpecial remote version: %d, localVersion: %d ,originalAppId:%d, currentAppId:%d", new Object[] { Integer.valueOf(n), Integer.valueOf(i), Integer.valueOf(j), Integer.valueOf(k) }));
    }
    if (j != k)
    {
      SharedPreUtils.af(localQQAppInterface.getApp(), localQQAppInterface.getAccount(), k);
      i = 0;
    }
    Object localObject;
    int m;
    ConfigurationService.Config localConfig;
    String str;
    if (n != i)
    {
      localObject = a(paramConfig);
      if ((localObject == null) || (((List)localObject).size() <= 0)) {
        break label440;
      }
      m = 0;
      j = 0;
      localConfig = null;
      paramConfig = null;
      str = null;
    }
    for (;;)
    {
      boolean bool;
      try
      {
        localObject = new JSONObject((String)((List)localObject).get(0));
        if (!((JSONObject)localObject).has("TIMPersonality")) {
          break label484;
        }
        localObject = ((JSONObject)localObject).getJSONObject("TIMPersonality");
        if (!((JSONObject)localObject).has("aioTitleBgSwitch")) {
          break label479;
        }
        j = ((JSONObject)localObject).getInt("aioTitleBgSwitch");
        i = 1;
        if (((JSONObject)localObject).has("androidResourceURL")) {
          paramConfig = ((JSONObject)localObject).getString("androidResourceURL");
        }
        k = i;
        m = j;
        localConfig = paramConfig;
        if (((JSONObject)localObject).has("androidMD5"))
        {
          str = ((JSONObject)localObject).getString("androidMD5");
          localConfig = paramConfig;
          m = j;
          k = i;
        }
        if ((k != 0) && (!TextUtils.isEmpty(localConfig)) && (!TextUtils.isEmpty(str)))
        {
          paramConfig = TIMUserManager.a().a(localQQAppInterface);
          localObject = TIMUserManager.a().b(localQQAppInterface);
          bool = false;
          if ((!paramConfig.equals(localConfig)) || (!((String)localObject).equals(str))) {
            break label490;
          }
          TIMUserManager.a().a(0, m, localConfig, "", str, "", bool, 0);
          SharedPreUtils.b(localQQAppInterface.getApp(), localQQAppInterface.getCurrentAccountUin(), n, 0, m, localConfig, str, "", "", bool, 0);
        }
        return;
      }
      catch (JSONException paramConfig)
      {
        if (!QLog.isColorLevel()) {
          continue;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 256 exception =" + paramConfig.toString());
        return;
      }
      label440:
      if (QLog.isColorLevel())
      {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 256,configStrList is empty ,version: " + paramConfig.version.get());
        return;
        label479:
        i = 0;
        continue;
        label484:
        k = 0;
        continue;
        label490:
        bool = true;
      }
    }
  }
  
  /* Error */
  private void H(ConfigurationService.Config paramConfig)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   4: checkcast 213	com/tencent/mobileqq/app/QQAppInterface
    //   7: astore 94
    //   9: aload_1
    //   10: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   13: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   16: istore 61
    //   18: aload 94
    //   20: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   23: aload 94
    //   25: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   28: invokestatic 565	com/tencent/mobileqq/utils/SharedPreUtils:J	(Landroid/content/Context;Ljava/lang/String;)I
    //   31: istore_2
    //   32: aload 94
    //   34: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   37: aload 94
    //   39: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   42: invokestatic 567	com/tencent/mobileqq/utils/SharedPreUtils:F	(Landroid/content/Context;Ljava/lang/String;)I
    //   45: istore_3
    //   46: getstatic 399	com/tencent/common/config/AppSetting:jdField_a_of_type_Int	I
    //   49: istore 4
    //   51: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   54: ifeq +50 -> 104
    //   57: ldc_w 569
    //   60: iconst_2
    //   61: ldc_w 571
    //   64: iconst_4
    //   65: anewarray 179	java/lang/Object
    //   68: dup
    //   69: iconst_0
    //   70: iload 61
    //   72: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   75: aastore
    //   76: dup
    //   77: iconst_1
    //   78: iload_2
    //   79: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   82: aastore
    //   83: dup
    //   84: iconst_2
    //   85: iload_3
    //   86: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   89: aastore
    //   90: dup
    //   91: iconst_3
    //   92: iload 4
    //   94: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   97: aastore
    //   98: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   101: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   104: iload_3
    //   105: iload 4
    //   107: if_icmpeq +20 -> 127
    //   110: aload 94
    //   112: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   115: aload 94
    //   117: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   120: iload 4
    //   122: invokestatic 574	com/tencent/mobileqq/utils/SharedPreUtils:j	(Landroid/content/Context;Ljava/lang/String;I)V
    //   125: iconst_0
    //   126: istore_2
    //   127: iload 61
    //   129: iload_2
    //   130: if_icmpeq +6659 -> 6789
    //   133: aload_1
    //   134: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   137: ifnull +6614 -> 6751
    //   140: aload_1
    //   141: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   144: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   147: ifle +6604 -> 6751
    //   150: aload_1
    //   151: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   154: invokevirtual 575	com/tencent/mobileqq/pb/PBRepeatField:get	()Ljava/util/List;
    //   157: astore 72
    //   159: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   162: ifeq +38 -> 200
    //   165: ldc 90
    //   167: iconst_2
    //   168: ldc_w 577
    //   171: iconst_2
    //   172: anewarray 179	java/lang/Object
    //   175: dup
    //   176: iconst_0
    //   177: aload_1
    //   178: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   181: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   184: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   187: aastore
    //   188: dup
    //   189: iconst_1
    //   190: ldc_w 579
    //   193: aastore
    //   194: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   197: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   200: aload 72
    //   202: invokeinterface 128 1 0
    //   207: astore 95
    //   209: aload 95
    //   211: invokeinterface 133 1 0
    //   216: ifeq +6573 -> 6789
    //   219: aload 95
    //   221: invokeinterface 137 1 0
    //   226: checkcast 139	java/lang/String
    //   229: astore 79
    //   231: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   234: ifeq +62 -> 296
    //   237: ldc 90
    //   239: iconst_2
    //   240: new 92	java/lang/StringBuilder
    //   243: dup
    //   244: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   247: ldc_w 581
    //   250: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   253: aload 79
    //   255: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   258: ldc_w 325
    //   261: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   264: aload_1
    //   265: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   268: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   271: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   274: ldc_w 583
    //   277: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   280: aload_1
    //   281: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   284: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   287: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   290: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   293: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   296: ldc2_w 584
    //   299: lstore 63
    //   301: ldc 13
    //   303: astore 78
    //   305: ldc 13
    //   307: astore 77
    //   309: iconst_m1
    //   310: istore 21
    //   312: iconst_m1
    //   313: istore 20
    //   315: iconst_m1
    //   316: istore 19
    //   318: iconst_m1
    //   319: istore 18
    //   321: aconst_null
    //   322: astore 75
    //   324: iconst_0
    //   325: istore 17
    //   327: iconst_0
    //   328: istore 16
    //   330: iconst_0
    //   331: istore 15
    //   333: iconst_0
    //   334: istore 14
    //   336: iconst_0
    //   337: istore 13
    //   339: iconst_0
    //   340: istore 12
    //   342: iconst_0
    //   343: istore 11
    //   345: iconst_0
    //   346: istore 9
    //   348: iconst_0
    //   349: istore 6
    //   351: iconst_0
    //   352: istore 4
    //   354: iconst_0
    //   355: istore_3
    //   356: aconst_null
    //   357: astore 76
    //   359: aconst_null
    //   360: astore 74
    //   362: aconst_null
    //   363: astore 73
    //   365: aconst_null
    //   366: astore 72
    //   368: iconst_0
    //   369: istore 10
    //   371: bipush 50
    //   373: istore 8
    //   375: iconst_0
    //   376: istore 7
    //   378: iconst_0
    //   379: istore 5
    //   381: iconst_0
    //   382: istore_2
    //   383: aload 79
    //   385: ldc_w 587
    //   388: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   391: astore 96
    //   393: aload 96
    //   395: ifnull +6158 -> 6553
    //   398: aload 96
    //   400: arraylength
    //   401: istore 62
    //   403: iconst_0
    //   404: istore 42
    //   406: iconst_0
    //   407: istore 4
    //   409: iconst_0
    //   410: istore 5
    //   412: iconst_0
    //   413: istore 6
    //   415: bipush 50
    //   417: istore 7
    //   419: iconst_0
    //   420: istore_2
    //   421: aconst_null
    //   422: astore 72
    //   424: aconst_null
    //   425: astore 73
    //   427: aconst_null
    //   428: astore 74
    //   430: aconst_null
    //   431: astore 75
    //   433: iconst_0
    //   434: istore 19
    //   436: iconst_0
    //   437: istore 20
    //   439: iconst_0
    //   440: istore_3
    //   441: iconst_0
    //   442: istore 23
    //   444: iconst_0
    //   445: istore 8
    //   447: iconst_0
    //   448: istore 22
    //   450: iconst_0
    //   451: istore 18
    //   453: iconst_0
    //   454: istore 17
    //   456: iconst_0
    //   457: istore 16
    //   459: iconst_0
    //   460: istore 11
    //   462: iconst_0
    //   463: istore 9
    //   465: aconst_null
    //   466: astore 79
    //   468: iconst_m1
    //   469: istore 21
    //   471: iconst_m1
    //   472: istore 14
    //   474: iconst_m1
    //   475: istore 13
    //   477: iconst_m1
    //   478: istore 12
    //   480: ldc 13
    //   482: astore 78
    //   484: ldc 13
    //   486: astore 76
    //   488: ldc2_w 584
    //   491: lstore 65
    //   493: iload 4
    //   495: istore 40
    //   497: iload 5
    //   499: istore 41
    //   501: iload 6
    //   503: istore 10
    //   505: iload 7
    //   507: istore 15
    //   509: iload_2
    //   510: istore 24
    //   512: aload 72
    //   514: astore 85
    //   516: aload 73
    //   518: astore 84
    //   520: aload 74
    //   522: astore 80
    //   524: aload 75
    //   526: astore 77
    //   528: iload 19
    //   530: istore 25
    //   532: iload 20
    //   534: istore 26
    //   536: iload_3
    //   537: istore 27
    //   539: iload 23
    //   541: istore 28
    //   543: iload 8
    //   545: istore 29
    //   547: iload 22
    //   549: istore 30
    //   551: iload 18
    //   553: istore 31
    //   555: iload 17
    //   557: istore 32
    //   559: iload 16
    //   561: istore 33
    //   563: iload 11
    //   565: istore 34
    //   567: iload 9
    //   569: istore 35
    //   571: aload 79
    //   573: astore 81
    //   575: iload 21
    //   577: istore 36
    //   579: iload 14
    //   581: istore 37
    //   583: iload 13
    //   585: istore 38
    //   587: iload 12
    //   589: istore 39
    //   591: aload 78
    //   593: astore 82
    //   595: aload 76
    //   597: astore 83
    //   599: lload 65
    //   601: lstore 63
    //   603: iload 42
    //   605: iload 62
    //   607: if_icmpge +6035 -> 6642
    //   610: aload 96
    //   612: iload 42
    //   614: aaload
    //   615: astore 97
    //   617: iload_2
    //   618: istore 26
    //   620: aload 72
    //   622: astore 80
    //   624: aload 73
    //   626: astore 81
    //   628: aload 74
    //   630: astore 82
    //   632: aload 75
    //   634: astore 83
    //   636: iload 19
    //   638: istore 27
    //   640: iload 20
    //   642: istore 28
    //   644: iload_3
    //   645: istore 29
    //   647: iload 23
    //   649: istore 30
    //   651: iload 8
    //   653: istore 31
    //   655: iload 22
    //   657: istore 32
    //   659: iload 18
    //   661: istore 33
    //   663: iload 17
    //   665: istore 34
    //   667: iload 16
    //   669: istore 35
    //   671: iload 11
    //   673: istore 36
    //   675: iload 9
    //   677: istore 37
    //   679: aload 79
    //   681: astore 84
    //   683: iload 21
    //   685: istore 24
    //   687: iload 14
    //   689: istore 25
    //   691: iload 13
    //   693: istore 38
    //   695: iload 12
    //   697: istore 39
    //   699: aload 78
    //   701: astore 85
    //   703: aload 76
    //   705: astore 86
    //   707: lload 65
    //   709: lstore 67
    //   711: aload 97
    //   713: ldc_w 593
    //   716: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   719: ifeq +1409 -> 2128
    //   722: iload_2
    //   723: istore 26
    //   725: aload 72
    //   727: astore 80
    //   729: aload 73
    //   731: astore 81
    //   733: aload 74
    //   735: astore 82
    //   737: aload 75
    //   739: astore 83
    //   741: iload 19
    //   743: istore 27
    //   745: iload 20
    //   747: istore 28
    //   749: iload_3
    //   750: istore 29
    //   752: iload 23
    //   754: istore 30
    //   756: iload 8
    //   758: istore 31
    //   760: iload 22
    //   762: istore 32
    //   764: iload 18
    //   766: istore 33
    //   768: iload 17
    //   770: istore 34
    //   772: iload 16
    //   774: istore 35
    //   776: iload 11
    //   778: istore 36
    //   780: iload 9
    //   782: istore 37
    //   784: aload 79
    //   786: astore 84
    //   788: iload 21
    //   790: istore 24
    //   792: iload 14
    //   794: istore 25
    //   796: iload 13
    //   798: istore 38
    //   800: iload 12
    //   802: istore 39
    //   804: aload 78
    //   806: astore 85
    //   808: aload 76
    //   810: astore 86
    //   812: lload 65
    //   814: lstore 67
    //   816: aload 97
    //   818: ldc_w 598
    //   821: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   824: iconst_1
    //   825: aaload
    //   826: invokevirtual 601	java/lang/String:trim	()Ljava/lang/String;
    //   829: astore 77
    //   831: iload_2
    //   832: istore 26
    //   834: aload 72
    //   836: astore 80
    //   838: aload 73
    //   840: astore 81
    //   842: aload 74
    //   844: astore 82
    //   846: aload 75
    //   848: astore 83
    //   850: iload 19
    //   852: istore 27
    //   854: iload 20
    //   856: istore 28
    //   858: iload_3
    //   859: istore 29
    //   861: iload 23
    //   863: istore 30
    //   865: iload 8
    //   867: istore 31
    //   869: iload 22
    //   871: istore 32
    //   873: iload 18
    //   875: istore 33
    //   877: iload 17
    //   879: istore 34
    //   881: iload 16
    //   883: istore 35
    //   885: iload 11
    //   887: istore 36
    //   889: iload 9
    //   891: istore 37
    //   893: aload 79
    //   895: astore 84
    //   897: iload 21
    //   899: istore 24
    //   901: iload 14
    //   903: istore 25
    //   905: iload 13
    //   907: istore 38
    //   909: iload 12
    //   911: istore 39
    //   913: aload 78
    //   915: astore 85
    //   917: aload 76
    //   919: astore 86
    //   921: lload 65
    //   923: lstore 67
    //   925: aload 77
    //   927: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   930: istore 71
    //   932: iload 4
    //   934: istore 41
    //   936: iload 5
    //   938: istore 43
    //   940: iload 6
    //   942: istore 44
    //   944: iload 7
    //   946: istore 45
    //   948: iload_2
    //   949: istore 40
    //   951: aload 72
    //   953: astore 87
    //   955: aload 73
    //   957: astore 88
    //   959: aload 74
    //   961: astore 89
    //   963: aload 75
    //   965: astore 90
    //   967: iload 19
    //   969: istore 46
    //   971: iload 20
    //   973: istore 47
    //   975: iload_3
    //   976: istore 48
    //   978: iload 23
    //   980: istore 49
    //   982: iload 8
    //   984: istore 50
    //   986: iload 22
    //   988: istore 51
    //   990: iload 18
    //   992: istore 52
    //   994: iload 17
    //   996: istore 53
    //   998: iload 16
    //   1000: istore 54
    //   1002: iload 11
    //   1004: istore 55
    //   1006: iload 9
    //   1008: istore 56
    //   1010: aload 79
    //   1012: astore 91
    //   1014: iload 21
    //   1016: istore 57
    //   1018: iload 14
    //   1020: istore 58
    //   1022: iload 13
    //   1024: istore 59
    //   1026: iload 12
    //   1028: istore 60
    //   1030: aload 78
    //   1032: astore 92
    //   1034: aload 76
    //   1036: astore 93
    //   1038: lload 65
    //   1040: lstore 69
    //   1042: iload 71
    //   1044: ifne +116 -> 1160
    //   1047: aload 77
    //   1049: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   1052: istore 43
    //   1054: lload 65
    //   1056: lstore 69
    //   1058: aload 76
    //   1060: astore 93
    //   1062: aload 78
    //   1064: astore 92
    //   1066: iload 12
    //   1068: istore 60
    //   1070: iload 13
    //   1072: istore 59
    //   1074: iload 14
    //   1076: istore 58
    //   1078: iload 21
    //   1080: istore 57
    //   1082: aload 79
    //   1084: astore 91
    //   1086: iload 9
    //   1088: istore 56
    //   1090: iload 11
    //   1092: istore 55
    //   1094: iload 16
    //   1096: istore 54
    //   1098: iload 17
    //   1100: istore 53
    //   1102: iload 18
    //   1104: istore 52
    //   1106: iload 22
    //   1108: istore 51
    //   1110: iload 8
    //   1112: istore 50
    //   1114: iload 23
    //   1116: istore 49
    //   1118: iload_3
    //   1119: istore 48
    //   1121: iload 20
    //   1123: istore 47
    //   1125: iload 19
    //   1127: istore 46
    //   1129: aload 75
    //   1131: astore 90
    //   1133: aload 74
    //   1135: astore 89
    //   1137: aload 73
    //   1139: astore 88
    //   1141: aload 72
    //   1143: astore 87
    //   1145: iload_2
    //   1146: istore 40
    //   1148: iload 7
    //   1150: istore 45
    //   1152: iload 6
    //   1154: istore 44
    //   1156: iload 4
    //   1158: istore 41
    //   1160: iload 42
    //   1162: iconst_1
    //   1163: iadd
    //   1164: istore 42
    //   1166: iload 41
    //   1168: istore 4
    //   1170: iload 43
    //   1172: istore 5
    //   1174: iload 44
    //   1176: istore 6
    //   1178: iload 45
    //   1180: istore 7
    //   1182: iload 40
    //   1184: istore_2
    //   1185: aload 87
    //   1187: astore 72
    //   1189: aload 88
    //   1191: astore 73
    //   1193: aload 89
    //   1195: astore 74
    //   1197: aload 90
    //   1199: astore 75
    //   1201: iload 46
    //   1203: istore 19
    //   1205: iload 47
    //   1207: istore 20
    //   1209: iload 48
    //   1211: istore_3
    //   1212: iload 49
    //   1214: istore 23
    //   1216: iload 50
    //   1218: istore 8
    //   1220: iload 51
    //   1222: istore 22
    //   1224: iload 52
    //   1226: istore 18
    //   1228: iload 53
    //   1230: istore 17
    //   1232: iload 54
    //   1234: istore 16
    //   1236: iload 55
    //   1238: istore 11
    //   1240: iload 56
    //   1242: istore 9
    //   1244: aload 91
    //   1246: astore 79
    //   1248: iload 57
    //   1250: istore 21
    //   1252: iload 58
    //   1254: istore 14
    //   1256: iload 59
    //   1258: istore 13
    //   1260: iload 60
    //   1262: istore 12
    //   1264: aload 92
    //   1266: astore 78
    //   1268: aload 93
    //   1270: astore 76
    //   1272: lload 69
    //   1274: lstore 65
    //   1276: goto -783 -> 493
    //   1279: astore 77
    //   1281: iload_2
    //   1282: istore 26
    //   1284: aload 72
    //   1286: astore 80
    //   1288: aload 73
    //   1290: astore 81
    //   1292: aload 74
    //   1294: astore 82
    //   1296: aload 75
    //   1298: astore 83
    //   1300: iload 19
    //   1302: istore 27
    //   1304: iload 20
    //   1306: istore 28
    //   1308: iload_3
    //   1309: istore 29
    //   1311: iload 23
    //   1313: istore 30
    //   1315: iload 8
    //   1317: istore 31
    //   1319: iload 22
    //   1321: istore 32
    //   1323: iload 18
    //   1325: istore 33
    //   1327: iload 17
    //   1329: istore 34
    //   1331: iload 16
    //   1333: istore 35
    //   1335: iload 11
    //   1337: istore 36
    //   1339: iload 9
    //   1341: istore 37
    //   1343: aload 79
    //   1345: astore 84
    //   1347: iload 21
    //   1349: istore 24
    //   1351: iload 14
    //   1353: istore 25
    //   1355: iload 13
    //   1357: istore 38
    //   1359: iload 12
    //   1361: istore 39
    //   1363: aload 78
    //   1365: astore 85
    //   1367: aload 76
    //   1369: astore 86
    //   1371: lload 65
    //   1373: lstore 67
    //   1375: aload 77
    //   1377: invokevirtual 605	java/lang/Exception:printStackTrace	()V
    //   1380: iload 4
    //   1382: istore 41
    //   1384: iload 5
    //   1386: istore 43
    //   1388: iload 6
    //   1390: istore 44
    //   1392: iload 7
    //   1394: istore 45
    //   1396: iload_2
    //   1397: istore 40
    //   1399: aload 72
    //   1401: astore 87
    //   1403: aload 73
    //   1405: astore 88
    //   1407: aload 74
    //   1409: astore 89
    //   1411: aload 75
    //   1413: astore 90
    //   1415: iload 19
    //   1417: istore 46
    //   1419: iload 20
    //   1421: istore 47
    //   1423: iload_3
    //   1424: istore 48
    //   1426: iload 23
    //   1428: istore 49
    //   1430: iload 8
    //   1432: istore 50
    //   1434: iload 22
    //   1436: istore 51
    //   1438: iload 18
    //   1440: istore 52
    //   1442: iload 17
    //   1444: istore 53
    //   1446: iload 16
    //   1448: istore 54
    //   1450: iload 11
    //   1452: istore 55
    //   1454: iload 9
    //   1456: istore 56
    //   1458: aload 79
    //   1460: astore 91
    //   1462: iload 21
    //   1464: istore 57
    //   1466: iload 14
    //   1468: istore 58
    //   1470: iload 13
    //   1472: istore 59
    //   1474: iload 12
    //   1476: istore 60
    //   1478: aload 78
    //   1480: astore 92
    //   1482: aload 76
    //   1484: astore 93
    //   1486: lload 65
    //   1488: lstore 69
    //   1490: goto -330 -> 1160
    //   1493: astore 79
    //   1495: lload 67
    //   1497: lstore 63
    //   1499: aload 86
    //   1501: astore 78
    //   1503: aload 85
    //   1505: astore 77
    //   1507: iload 39
    //   1509: istore 21
    //   1511: iload 38
    //   1513: istore 20
    //   1515: iload 25
    //   1517: istore 19
    //   1519: iload 24
    //   1521: istore 18
    //   1523: aload 84
    //   1525: astore 75
    //   1527: iload 37
    //   1529: istore 17
    //   1531: iload 36
    //   1533: istore 16
    //   1535: iload 35
    //   1537: istore 15
    //   1539: iload 34
    //   1541: istore 14
    //   1543: iload 33
    //   1545: istore 13
    //   1547: iload 32
    //   1549: istore 12
    //   1551: iload 31
    //   1553: istore 11
    //   1555: iload 30
    //   1557: istore 9
    //   1559: iload 27
    //   1561: istore_3
    //   1562: aload 83
    //   1564: astore 76
    //   1566: aload 82
    //   1568: astore 74
    //   1570: aload 81
    //   1572: astore 73
    //   1574: aload 80
    //   1576: astore 72
    //   1578: iload 26
    //   1580: istore 10
    //   1582: iload 6
    //   1584: istore_2
    //   1585: iload 4
    //   1587: istore 22
    //   1589: iload 29
    //   1591: istore 6
    //   1593: iload 28
    //   1595: istore 4
    //   1597: iload 7
    //   1599: istore 8
    //   1601: iload_2
    //   1602: istore 7
    //   1604: iload 22
    //   1606: istore_2
    //   1607: aload 79
    //   1609: invokevirtual 605	java/lang/Exception:printStackTrace	()V
    //   1612: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1615: ifeq +34 -> 1649
    //   1618: ldc_w 607
    //   1621: iconst_2
    //   1622: new 92	java/lang/StringBuilder
    //   1625: dup
    //   1626: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1629: ldc_w 609
    //   1632: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1635: aload 79
    //   1637: invokevirtual 612	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   1640: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1643: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1646: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   1649: iload 10
    //   1651: istore 22
    //   1653: iload 8
    //   1655: istore 23
    //   1657: aload 74
    //   1659: astore 79
    //   1661: iload 9
    //   1663: istore 10
    //   1665: iload 6
    //   1667: istore 9
    //   1669: iload 4
    //   1671: istore 8
    //   1673: iload_3
    //   1674: istore 6
    //   1676: iload 23
    //   1678: istore 4
    //   1680: iload 22
    //   1682: istore_3
    //   1683: aload 72
    //   1685: astore 74
    //   1687: aload 79
    //   1689: astore 72
    //   1691: iload_2
    //   1692: ifeq +118 -> 1810
    //   1695: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1698: ifeq +40 -> 1738
    //   1701: ldc_w 617
    //   1704: iconst_2
    //   1705: ldc_w 619
    //   1708: iconst_4
    //   1709: anewarray 179	java/lang/Object
    //   1712: dup
    //   1713: iconst_0
    //   1714: aload 76
    //   1716: aastore
    //   1717: dup
    //   1718: iconst_1
    //   1719: aload 72
    //   1721: aastore
    //   1722: dup
    //   1723: iconst_2
    //   1724: aload 73
    //   1726: aastore
    //   1727: dup
    //   1728: iconst_3
    //   1729: aload 74
    //   1731: aastore
    //   1732: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   1735: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1738: aload 94
    //   1740: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   1743: aload 94
    //   1745: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   1748: iload 7
    //   1750: aload 76
    //   1752: aload 72
    //   1754: aload 73
    //   1756: aload 74
    //   1758: iload_3
    //   1759: iload 4
    //   1761: iload 5
    //   1763: invokestatic 622	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;III)V
    //   1766: aload 94
    //   1768: iload 7
    //   1770: aload 76
    //   1772: aload 72
    //   1774: aload 73
    //   1776: aload 74
    //   1778: iload_3
    //   1779: iload 4
    //   1781: iload 5
    //   1783: invokestatic 627	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:a	(Lcom/tencent/mobileqq/app/QQAppInterface;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;III)V
    //   1786: iconst_0
    //   1787: putstatic 628	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:jdField_b_of_type_Boolean	Z
    //   1790: iconst_0
    //   1791: putstatic 629	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:c	Z
    //   1794: iconst_0
    //   1795: invokestatic 630	com/tencent/mobileqq/utils/SharedPreUtils:a	(Z)V
    //   1798: aload 94
    //   1800: aload 76
    //   1802: aload 72
    //   1804: getstatic 632	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:d	Ljava/lang/String;
    //   1807: invokestatic 635	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    //   1810: iload 15
    //   1812: ifeq +196 -> 2008
    //   1815: iload 14
    //   1817: ifeq +191 -> 2008
    //   1820: iload 13
    //   1822: ifeq +186 -> 2008
    //   1825: iload 12
    //   1827: ifeq +181 -> 2008
    //   1830: iload 11
    //   1832: ifeq +176 -> 2008
    //   1835: aload 94
    //   1837: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   1840: aload 94
    //   1842: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   1845: iconst_0
    //   1846: invokevirtual 639	com/tencent/qphone/base/util/BaseApplication:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   1849: invokeinterface 645 1 0
    //   1854: ldc_w 647
    //   1857: iconst_0
    //   1858: invokeinterface 653 3 0
    //   1863: invokeinterface 656 1 0
    //   1868: pop
    //   1869: aload 94
    //   1871: iconst_0
    //   1872: invokestatic 659	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:b	(Lcom/tencent/mobileqq/app/QQAppInterface;Z)V
    //   1875: aload 94
    //   1877: iconst_0
    //   1878: invokestatic 661	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Z)V
    //   1881: iload 21
    //   1883: iload 20
    //   1885: iload 19
    //   1887: iload 18
    //   1889: invokestatic 664	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:a	(IIII)V
    //   1892: aload 94
    //   1894: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   1897: aload 94
    //   1899: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   1902: iload 61
    //   1904: iconst_1
    //   1905: iload 21
    //   1907: iload 20
    //   1909: iload 19
    //   1911: iload 18
    //   1913: invokestatic 667	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;IZIIII)V
    //   1916: aload 75
    //   1918: invokestatic 669	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:a	(Ljava/lang/String;)V
    //   1921: aload 94
    //   1923: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   1926: aload 94
    //   1928: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   1931: iload 61
    //   1933: aload 75
    //   1935: invokestatic 672	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;)V
    //   1938: iload 8
    //   1940: invokestatic 675	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:a	(I)V
    //   1943: aload 94
    //   1945: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   1948: aload 94
    //   1950: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   1953: iload 61
    //   1955: iload 8
    //   1957: invokestatic 678	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;II)V
    //   1960: iload 6
    //   1962: invokestatic 680	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:b	(I)V
    //   1965: aload 94
    //   1967: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   1970: aload 94
    //   1972: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   1975: iload 61
    //   1977: iload 6
    //   1979: invokestatic 682	com/tencent/mobileqq/utils/SharedPreUtils:b	(Landroid/content/Context;Ljava/lang/String;II)V
    //   1982: iload 10
    //   1984: iload 9
    //   1986: invokestatic 685	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:a	(II)V
    //   1989: aload 94
    //   1991: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   1994: aload 94
    //   1996: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   1999: iload 61
    //   2001: iload 10
    //   2003: iload 9
    //   2005: invokestatic 688	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;III)V
    //   2008: iload 17
    //   2010: ifeq +110 -> 2120
    //   2013: iload 16
    //   2015: ifeq +105 -> 2120
    //   2018: iload 16
    //   2020: ifeq +100 -> 2120
    //   2023: aload 94
    //   2025: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   2028: invokestatic 694	android/preference/PreferenceManager:getDefaultSharedPreferences	(Landroid/content/Context;)Landroid/content/SharedPreferences;
    //   2031: new 92	java/lang/StringBuilder
    //   2034: dup
    //   2035: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   2038: aload 94
    //   2040: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   2043: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2046: ldc_w 696
    //   2049: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2052: ldc_w 698
    //   2055: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2058: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2061: ldc 13
    //   2063: invokeinterface 701 3 0
    //   2068: astore 72
    //   2070: aload 94
    //   2072: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   2075: aload 94
    //   2077: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   2080: iload 61
    //   2082: lload 63
    //   2084: aload 78
    //   2086: aload 77
    //   2088: invokestatic 704	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;IJLjava/lang/String;Ljava/lang/String;)V
    //   2091: aload 78
    //   2093: ifnull +27 -> 2120
    //   2096: aload 78
    //   2098: aload 72
    //   2100: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2103: ifne +17 -> 2120
    //   2106: aload 94
    //   2108: bipush 117
    //   2110: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   2113: checkcast 709	com/tencent/mobileqq/app/utils/PokeBigResHandler
    //   2116: iconst_1
    //   2117: invokevirtual 710	com/tencent/mobileqq/app/utils/PokeBigResHandler:a	(Z)V
    //   2120: iload 6
    //   2122: invokestatic 680	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:b	(I)V
    //   2125: goto -1916 -> 209
    //   2128: iload_2
    //   2129: istore 26
    //   2131: aload 72
    //   2133: astore 80
    //   2135: aload 73
    //   2137: astore 81
    //   2139: aload 74
    //   2141: astore 82
    //   2143: aload 75
    //   2145: astore 83
    //   2147: iload 19
    //   2149: istore 27
    //   2151: iload 20
    //   2153: istore 28
    //   2155: iload_3
    //   2156: istore 29
    //   2158: iload 23
    //   2160: istore 30
    //   2162: iload 8
    //   2164: istore 31
    //   2166: iload 22
    //   2168: istore 32
    //   2170: iload 18
    //   2172: istore 33
    //   2174: iload 17
    //   2176: istore 34
    //   2178: iload 16
    //   2180: istore 35
    //   2182: iload 11
    //   2184: istore 36
    //   2186: iload 9
    //   2188: istore 37
    //   2190: aload 79
    //   2192: astore 84
    //   2194: iload 21
    //   2196: istore 24
    //   2198: iload 14
    //   2200: istore 25
    //   2202: iload 13
    //   2204: istore 38
    //   2206: iload 12
    //   2208: istore 39
    //   2210: aload 78
    //   2212: astore 85
    //   2214: aload 76
    //   2216: astore 86
    //   2218: lload 65
    //   2220: lstore 67
    //   2222: aload 97
    //   2224: ldc_w 712
    //   2227: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   2230: ifeq +658 -> 2888
    //   2233: iload_2
    //   2234: istore 26
    //   2236: aload 72
    //   2238: astore 80
    //   2240: aload 73
    //   2242: astore 81
    //   2244: aload 74
    //   2246: astore 82
    //   2248: aload 75
    //   2250: astore 83
    //   2252: iload 19
    //   2254: istore 27
    //   2256: iload 20
    //   2258: istore 28
    //   2260: iload_3
    //   2261: istore 29
    //   2263: iload 23
    //   2265: istore 30
    //   2267: iload 8
    //   2269: istore 31
    //   2271: iload 22
    //   2273: istore 32
    //   2275: iload 18
    //   2277: istore 33
    //   2279: iload 17
    //   2281: istore 34
    //   2283: iload 16
    //   2285: istore 35
    //   2287: iload 11
    //   2289: istore 36
    //   2291: iload 9
    //   2293: istore 37
    //   2295: aload 79
    //   2297: astore 84
    //   2299: iload 21
    //   2301: istore 24
    //   2303: iload 14
    //   2305: istore 25
    //   2307: iload 13
    //   2309: istore 38
    //   2311: iload 12
    //   2313: istore 39
    //   2315: aload 78
    //   2317: astore 85
    //   2319: aload 76
    //   2321: astore 86
    //   2323: lload 65
    //   2325: lstore 67
    //   2327: aload 97
    //   2329: ldc_w 598
    //   2332: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   2335: iconst_1
    //   2336: aaload
    //   2337: invokevirtual 601	java/lang/String:trim	()Ljava/lang/String;
    //   2340: astore 77
    //   2342: iload_2
    //   2343: istore 26
    //   2345: aload 72
    //   2347: astore 80
    //   2349: aload 73
    //   2351: astore 81
    //   2353: aload 74
    //   2355: astore 82
    //   2357: aload 75
    //   2359: astore 83
    //   2361: iload 19
    //   2363: istore 27
    //   2365: iload 20
    //   2367: istore 28
    //   2369: iload_3
    //   2370: istore 29
    //   2372: iload 23
    //   2374: istore 30
    //   2376: iload 8
    //   2378: istore 31
    //   2380: iload 22
    //   2382: istore 32
    //   2384: iload 18
    //   2386: istore 33
    //   2388: iload 17
    //   2390: istore 34
    //   2392: iload 16
    //   2394: istore 35
    //   2396: iload 11
    //   2398: istore 36
    //   2400: iload 9
    //   2402: istore 37
    //   2404: aload 79
    //   2406: astore 84
    //   2408: iload 21
    //   2410: istore 24
    //   2412: iload 14
    //   2414: istore 25
    //   2416: iload 13
    //   2418: istore 38
    //   2420: iload 12
    //   2422: istore 39
    //   2424: aload 78
    //   2426: astore 85
    //   2428: aload 76
    //   2430: astore 86
    //   2432: lload 65
    //   2434: lstore 67
    //   2436: aload 77
    //   2438: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2441: istore 71
    //   2443: iload 4
    //   2445: istore 41
    //   2447: iload 5
    //   2449: istore 43
    //   2451: iload 6
    //   2453: istore 44
    //   2455: iload 7
    //   2457: istore 45
    //   2459: iload_2
    //   2460: istore 40
    //   2462: aload 72
    //   2464: astore 87
    //   2466: aload 73
    //   2468: astore 88
    //   2470: aload 74
    //   2472: astore 89
    //   2474: aload 75
    //   2476: astore 90
    //   2478: iload 19
    //   2480: istore 46
    //   2482: iload 20
    //   2484: istore 47
    //   2486: iload_3
    //   2487: istore 48
    //   2489: iload 23
    //   2491: istore 49
    //   2493: iload 8
    //   2495: istore 50
    //   2497: iload 22
    //   2499: istore 51
    //   2501: iload 18
    //   2503: istore 52
    //   2505: iload 17
    //   2507: istore 53
    //   2509: iload 16
    //   2511: istore 54
    //   2513: iload 11
    //   2515: istore 55
    //   2517: iload 9
    //   2519: istore 56
    //   2521: aload 79
    //   2523: astore 91
    //   2525: iload 21
    //   2527: istore 57
    //   2529: iload 14
    //   2531: istore 58
    //   2533: iload 13
    //   2535: istore 59
    //   2537: iload 12
    //   2539: istore 60
    //   2541: aload 78
    //   2543: astore 92
    //   2545: aload 76
    //   2547: astore 93
    //   2549: lload 65
    //   2551: lstore 69
    //   2553: iload 71
    //   2555: ifne -1395 -> 1160
    //   2558: aload 77
    //   2560: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   2563: istore 44
    //   2565: iload 4
    //   2567: istore 41
    //   2569: iload 5
    //   2571: istore 43
    //   2573: iload 7
    //   2575: istore 45
    //   2577: iload_2
    //   2578: istore 40
    //   2580: aload 72
    //   2582: astore 87
    //   2584: aload 73
    //   2586: astore 88
    //   2588: aload 74
    //   2590: astore 89
    //   2592: aload 75
    //   2594: astore 90
    //   2596: iload 19
    //   2598: istore 46
    //   2600: iload 20
    //   2602: istore 47
    //   2604: iload_3
    //   2605: istore 48
    //   2607: iload 23
    //   2609: istore 49
    //   2611: iload 8
    //   2613: istore 50
    //   2615: iload 22
    //   2617: istore 51
    //   2619: iload 18
    //   2621: istore 52
    //   2623: iload 17
    //   2625: istore 53
    //   2627: iload 16
    //   2629: istore 54
    //   2631: iload 11
    //   2633: istore 55
    //   2635: iload 9
    //   2637: istore 56
    //   2639: aload 79
    //   2641: astore 91
    //   2643: iload 21
    //   2645: istore 57
    //   2647: iload 14
    //   2649: istore 58
    //   2651: iload 13
    //   2653: istore 59
    //   2655: iload 12
    //   2657: istore 60
    //   2659: aload 78
    //   2661: astore 92
    //   2663: aload 76
    //   2665: astore 93
    //   2667: lload 65
    //   2669: lstore 69
    //   2671: goto -1511 -> 1160
    //   2674: astore 77
    //   2676: iload_2
    //   2677: istore 26
    //   2679: aload 72
    //   2681: astore 80
    //   2683: aload 73
    //   2685: astore 81
    //   2687: aload 74
    //   2689: astore 82
    //   2691: aload 75
    //   2693: astore 83
    //   2695: iload 19
    //   2697: istore 27
    //   2699: iload 20
    //   2701: istore 28
    //   2703: iload_3
    //   2704: istore 29
    //   2706: iload 23
    //   2708: istore 30
    //   2710: iload 8
    //   2712: istore 31
    //   2714: iload 22
    //   2716: istore 32
    //   2718: iload 18
    //   2720: istore 33
    //   2722: iload 17
    //   2724: istore 34
    //   2726: iload 16
    //   2728: istore 35
    //   2730: iload 11
    //   2732: istore 36
    //   2734: iload 9
    //   2736: istore 37
    //   2738: aload 79
    //   2740: astore 84
    //   2742: iload 21
    //   2744: istore 24
    //   2746: iload 14
    //   2748: istore 25
    //   2750: iload 13
    //   2752: istore 38
    //   2754: iload 12
    //   2756: istore 39
    //   2758: aload 78
    //   2760: astore 85
    //   2762: aload 76
    //   2764: astore 86
    //   2766: lload 65
    //   2768: lstore 67
    //   2770: aload 77
    //   2772: invokevirtual 605	java/lang/Exception:printStackTrace	()V
    //   2775: iload 4
    //   2777: istore 41
    //   2779: iload 5
    //   2781: istore 43
    //   2783: iload 6
    //   2785: istore 44
    //   2787: iload 7
    //   2789: istore 45
    //   2791: iload_2
    //   2792: istore 40
    //   2794: aload 72
    //   2796: astore 87
    //   2798: aload 73
    //   2800: astore 88
    //   2802: aload 74
    //   2804: astore 89
    //   2806: aload 75
    //   2808: astore 90
    //   2810: iload 19
    //   2812: istore 46
    //   2814: iload 20
    //   2816: istore 47
    //   2818: iload_3
    //   2819: istore 48
    //   2821: iload 23
    //   2823: istore 49
    //   2825: iload 8
    //   2827: istore 50
    //   2829: iload 22
    //   2831: istore 51
    //   2833: iload 18
    //   2835: istore 52
    //   2837: iload 17
    //   2839: istore 53
    //   2841: iload 16
    //   2843: istore 54
    //   2845: iload 11
    //   2847: istore 55
    //   2849: iload 9
    //   2851: istore 56
    //   2853: aload 79
    //   2855: astore 91
    //   2857: iload 21
    //   2859: istore 57
    //   2861: iload 14
    //   2863: istore 58
    //   2865: iload 13
    //   2867: istore 59
    //   2869: iload 12
    //   2871: istore 60
    //   2873: aload 78
    //   2875: astore 92
    //   2877: aload 76
    //   2879: astore 93
    //   2881: lload 65
    //   2883: lstore 69
    //   2885: goto -1725 -> 1160
    //   2888: iload_2
    //   2889: istore 26
    //   2891: aload 72
    //   2893: astore 80
    //   2895: aload 73
    //   2897: astore 81
    //   2899: aload 74
    //   2901: astore 82
    //   2903: aload 75
    //   2905: astore 83
    //   2907: iload 19
    //   2909: istore 27
    //   2911: iload 20
    //   2913: istore 28
    //   2915: iload_3
    //   2916: istore 29
    //   2918: iload 23
    //   2920: istore 30
    //   2922: iload 8
    //   2924: istore 31
    //   2926: iload 22
    //   2928: istore 32
    //   2930: iload 18
    //   2932: istore 33
    //   2934: iload 17
    //   2936: istore 34
    //   2938: iload 16
    //   2940: istore 35
    //   2942: iload 11
    //   2944: istore 36
    //   2946: iload 9
    //   2948: istore 37
    //   2950: aload 79
    //   2952: astore 84
    //   2954: iload 21
    //   2956: istore 24
    //   2958: iload 14
    //   2960: istore 25
    //   2962: iload 13
    //   2964: istore 38
    //   2966: iload 12
    //   2968: istore 39
    //   2970: aload 78
    //   2972: astore 85
    //   2974: aload 76
    //   2976: astore 86
    //   2978: lload 65
    //   2980: lstore 67
    //   2982: aload 97
    //   2984: ldc_w 714
    //   2987: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   2990: istore 71
    //   2992: iload 71
    //   2994: ifeq +565 -> 3559
    //   2997: iload_2
    //   2998: istore 10
    //   3000: aload 72
    //   3002: astore 80
    //   3004: aload 73
    //   3006: astore 81
    //   3008: aload 74
    //   3010: astore 82
    //   3012: aload 75
    //   3014: astore 83
    //   3016: new 141	org/json/JSONObject
    //   3019: dup
    //   3020: aload 97
    //   3022: ldc_w 598
    //   3025: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   3028: iconst_1
    //   3029: aaload
    //   3030: invokespecial 144	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   3033: astore 84
    //   3035: iload_2
    //   3036: istore 10
    //   3038: aload 72
    //   3040: astore 80
    //   3042: aload 73
    //   3044: astore 81
    //   3046: aload 74
    //   3048: astore 82
    //   3050: aload 75
    //   3052: astore 83
    //   3054: aload 84
    //   3056: ldc_w 716
    //   3059: invokevirtual 719	org/json/JSONObject:optString	(Ljava/lang/String;)Ljava/lang/String;
    //   3062: astore 77
    //   3064: iload_2
    //   3065: istore 10
    //   3067: aload 72
    //   3069: astore 80
    //   3071: aload 73
    //   3073: astore 81
    //   3075: aload 74
    //   3077: astore 82
    //   3079: aload 77
    //   3081: astore 83
    //   3083: aload 84
    //   3085: ldc_w 721
    //   3088: invokevirtual 719	org/json/JSONObject:optString	(Ljava/lang/String;)Ljava/lang/String;
    //   3091: astore 75
    //   3093: iload_2
    //   3094: istore 10
    //   3096: aload 72
    //   3098: astore 80
    //   3100: aload 73
    //   3102: astore 81
    //   3104: aload 75
    //   3106: astore 82
    //   3108: aload 77
    //   3110: astore 83
    //   3112: aload 84
    //   3114: ldc_w 723
    //   3117: invokevirtual 719	org/json/JSONObject:optString	(Ljava/lang/String;)Ljava/lang/String;
    //   3120: astore 73
    //   3122: aload 84
    //   3124: ldc_w 725
    //   3127: invokevirtual 719	org/json/JSONObject:optString	(Ljava/lang/String;)Ljava/lang/String;
    //   3130: astore 74
    //   3132: aload 73
    //   3134: iconst_1
    //   3135: aload 73
    //   3137: invokevirtual 728	java/lang/String:length	()I
    //   3140: iconst_1
    //   3141: isub
    //   3142: invokevirtual 732	java/lang/String:substring	(II)Ljava/lang/String;
    //   3145: astore 72
    //   3147: aload 72
    //   3149: astore 73
    //   3151: aload 74
    //   3153: iconst_1
    //   3154: aload 74
    //   3156: invokevirtual 728	java/lang/String:length	()I
    //   3159: iconst_1
    //   3160: isub
    //   3161: invokevirtual 732	java/lang/String:substring	(II)Ljava/lang/String;
    //   3164: astore 87
    //   3166: iload_2
    //   3167: istore 10
    //   3169: aload 87
    //   3171: astore 80
    //   3173: aload 73
    //   3175: astore 81
    //   3177: aload 75
    //   3179: astore 82
    //   3181: aload 77
    //   3183: astore 83
    //   3185: aload 84
    //   3187: ldc_w 734
    //   3190: invokevirtual 737	org/json/JSONObject:optInt	(Ljava/lang/String;)I
    //   3193: istore 40
    //   3195: iload 40
    //   3197: istore 10
    //   3199: aload 87
    //   3201: astore 80
    //   3203: aload 73
    //   3205: astore 81
    //   3207: aload 75
    //   3209: astore 82
    //   3211: aload 77
    //   3213: astore 83
    //   3215: aload 84
    //   3217: ldc_w 739
    //   3220: invokevirtual 737	org/json/JSONObject:optInt	(Ljava/lang/String;)I
    //   3223: istore 45
    //   3225: iconst_1
    //   3226: istore 41
    //   3228: iload 5
    //   3230: istore 43
    //   3232: iload 6
    //   3234: istore 44
    //   3236: aload 73
    //   3238: astore 88
    //   3240: aload 75
    //   3242: astore 89
    //   3244: aload 77
    //   3246: astore 90
    //   3248: iload 19
    //   3250: istore 46
    //   3252: iload 20
    //   3254: istore 47
    //   3256: iload_3
    //   3257: istore 48
    //   3259: iload 23
    //   3261: istore 49
    //   3263: iload 8
    //   3265: istore 50
    //   3267: iload 22
    //   3269: istore 51
    //   3271: iload 18
    //   3273: istore 52
    //   3275: iload 17
    //   3277: istore 53
    //   3279: iload 16
    //   3281: istore 54
    //   3283: iload 11
    //   3285: istore 55
    //   3287: iload 9
    //   3289: istore 56
    //   3291: aload 79
    //   3293: astore 91
    //   3295: iload 21
    //   3297: istore 57
    //   3299: iload 14
    //   3301: istore 58
    //   3303: iload 13
    //   3305: istore 59
    //   3307: iload 12
    //   3309: istore 60
    //   3311: aload 78
    //   3313: astore 92
    //   3315: aload 76
    //   3317: astore 93
    //   3319: lload 65
    //   3321: lstore 69
    //   3323: goto -2163 -> 1160
    //   3326: astore 77
    //   3328: aload 83
    //   3330: astore 74
    //   3332: aload 82
    //   3334: astore 75
    //   3336: aload 81
    //   3338: astore 73
    //   3340: aload 80
    //   3342: astore 72
    //   3344: iload 10
    //   3346: istore_2
    //   3347: iload_2
    //   3348: istore 26
    //   3350: aload 72
    //   3352: astore 80
    //   3354: aload 73
    //   3356: astore 81
    //   3358: aload 75
    //   3360: astore 82
    //   3362: aload 74
    //   3364: astore 83
    //   3366: iload 19
    //   3368: istore 27
    //   3370: iload 20
    //   3372: istore 28
    //   3374: iload_3
    //   3375: istore 29
    //   3377: iload 23
    //   3379: istore 30
    //   3381: iload 8
    //   3383: istore 31
    //   3385: iload 22
    //   3387: istore 32
    //   3389: iload 18
    //   3391: istore 33
    //   3393: iload 17
    //   3395: istore 34
    //   3397: iload 16
    //   3399: istore 35
    //   3401: iload 11
    //   3403: istore 36
    //   3405: iload 9
    //   3407: istore 37
    //   3409: aload 79
    //   3411: astore 84
    //   3413: iload 21
    //   3415: istore 24
    //   3417: iload 14
    //   3419: istore 25
    //   3421: iload 13
    //   3423: istore 38
    //   3425: iload 12
    //   3427: istore 39
    //   3429: aload 78
    //   3431: astore 85
    //   3433: aload 76
    //   3435: astore 86
    //   3437: lload 65
    //   3439: lstore 67
    //   3441: aload 77
    //   3443: invokevirtual 605	java/lang/Exception:printStackTrace	()V
    //   3446: iload 4
    //   3448: istore 41
    //   3450: iload 5
    //   3452: istore 43
    //   3454: iload 6
    //   3456: istore 44
    //   3458: iload 7
    //   3460: istore 45
    //   3462: iload_2
    //   3463: istore 40
    //   3465: aload 72
    //   3467: astore 87
    //   3469: aload 73
    //   3471: astore 88
    //   3473: aload 75
    //   3475: astore 89
    //   3477: aload 74
    //   3479: astore 90
    //   3481: iload 19
    //   3483: istore 46
    //   3485: iload 20
    //   3487: istore 47
    //   3489: iload_3
    //   3490: istore 48
    //   3492: iload 23
    //   3494: istore 49
    //   3496: iload 8
    //   3498: istore 50
    //   3500: iload 22
    //   3502: istore 51
    //   3504: iload 18
    //   3506: istore 52
    //   3508: iload 17
    //   3510: istore 53
    //   3512: iload 16
    //   3514: istore 54
    //   3516: iload 11
    //   3518: istore 55
    //   3520: iload 9
    //   3522: istore 56
    //   3524: aload 79
    //   3526: astore 91
    //   3528: iload 21
    //   3530: istore 57
    //   3532: iload 14
    //   3534: istore 58
    //   3536: iload 13
    //   3538: istore 59
    //   3540: iload 12
    //   3542: istore 60
    //   3544: aload 78
    //   3546: astore 92
    //   3548: aload 76
    //   3550: astore 93
    //   3552: lload 65
    //   3554: lstore 69
    //   3556: goto -2396 -> 1160
    //   3559: iload_2
    //   3560: istore 26
    //   3562: aload 72
    //   3564: astore 80
    //   3566: aload 73
    //   3568: astore 81
    //   3570: aload 74
    //   3572: astore 82
    //   3574: aload 75
    //   3576: astore 83
    //   3578: iload 19
    //   3580: istore 27
    //   3582: iload 20
    //   3584: istore 28
    //   3586: iload_3
    //   3587: istore 29
    //   3589: iload 23
    //   3591: istore 30
    //   3593: iload 8
    //   3595: istore 31
    //   3597: iload 22
    //   3599: istore 32
    //   3601: iload 18
    //   3603: istore 33
    //   3605: iload 17
    //   3607: istore 34
    //   3609: iload 16
    //   3611: istore 35
    //   3613: iload 11
    //   3615: istore 36
    //   3617: iload 9
    //   3619: istore 37
    //   3621: aload 79
    //   3623: astore 84
    //   3625: iload 21
    //   3627: istore 24
    //   3629: iload 14
    //   3631: istore 25
    //   3633: iload 13
    //   3635: istore 38
    //   3637: iload 12
    //   3639: istore 39
    //   3641: aload 78
    //   3643: astore 85
    //   3645: aload 76
    //   3647: astore 86
    //   3649: lload 65
    //   3651: lstore 67
    //   3653: iload 9
    //   3655: istore 10
    //   3657: lload 65
    //   3659: lstore 63
    //   3661: aload 97
    //   3663: ldc_w 741
    //   3666: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   3669: ifeq +121 -> 3790
    //   3672: iload_2
    //   3673: istore 26
    //   3675: aload 72
    //   3677: astore 80
    //   3679: aload 73
    //   3681: astore 81
    //   3683: aload 74
    //   3685: astore 82
    //   3687: aload 75
    //   3689: astore 83
    //   3691: iload 19
    //   3693: istore 27
    //   3695: iload 20
    //   3697: istore 28
    //   3699: iload_3
    //   3700: istore 29
    //   3702: iload 23
    //   3704: istore 30
    //   3706: iload 8
    //   3708: istore 31
    //   3710: iload 22
    //   3712: istore 32
    //   3714: iload 18
    //   3716: istore 33
    //   3718: iload 17
    //   3720: istore 34
    //   3722: iload 16
    //   3724: istore 35
    //   3726: iload 11
    //   3728: istore 36
    //   3730: iload 9
    //   3732: istore 37
    //   3734: aload 79
    //   3736: astore 84
    //   3738: iload 21
    //   3740: istore 24
    //   3742: iload 14
    //   3744: istore 25
    //   3746: iload 13
    //   3748: istore 38
    //   3750: iload 12
    //   3752: istore 39
    //   3754: aload 78
    //   3756: astore 85
    //   3758: aload 76
    //   3760: astore 86
    //   3762: lload 65
    //   3764: lstore 67
    //   3766: aload 97
    //   3768: ldc_w 598
    //   3771: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   3774: iconst_1
    //   3775: aaload
    //   3776: invokevirtual 601	java/lang/String:trim	()Ljava/lang/String;
    //   3779: invokestatic 746	java/lang/Long:valueOf	(Ljava/lang/String;)Ljava/lang/Long;
    //   3782: invokevirtual 750	java/lang/Long:longValue	()J
    //   3785: lstore 63
    //   3787: iconst_1
    //   3788: istore 10
    //   3790: iload_2
    //   3791: istore 26
    //   3793: aload 72
    //   3795: astore 80
    //   3797: aload 73
    //   3799: astore 81
    //   3801: aload 74
    //   3803: astore 82
    //   3805: aload 75
    //   3807: astore 83
    //   3809: iload 19
    //   3811: istore 27
    //   3813: iload 20
    //   3815: istore 28
    //   3817: iload_3
    //   3818: istore 29
    //   3820: iload 23
    //   3822: istore 30
    //   3824: iload 8
    //   3826: istore 31
    //   3828: iload 22
    //   3830: istore 32
    //   3832: iload 18
    //   3834: istore 33
    //   3836: iload 17
    //   3838: istore 34
    //   3840: iload 16
    //   3842: istore 35
    //   3844: iload 11
    //   3846: istore 36
    //   3848: iload 10
    //   3850: istore 37
    //   3852: aload 79
    //   3854: astore 84
    //   3856: iload 21
    //   3858: istore 24
    //   3860: iload 14
    //   3862: istore 25
    //   3864: iload 13
    //   3866: istore 38
    //   3868: iload 12
    //   3870: istore 39
    //   3872: aload 78
    //   3874: astore 85
    //   3876: aload 76
    //   3878: astore 86
    //   3880: lload 63
    //   3882: lstore 67
    //   3884: iload 11
    //   3886: istore 9
    //   3888: aload 76
    //   3890: astore 77
    //   3892: aload 97
    //   3894: ldc_w 698
    //   3897: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   3900: ifeq +115 -> 4015
    //   3903: iload_2
    //   3904: istore 26
    //   3906: aload 72
    //   3908: astore 80
    //   3910: aload 73
    //   3912: astore 81
    //   3914: aload 74
    //   3916: astore 82
    //   3918: aload 75
    //   3920: astore 83
    //   3922: iload 19
    //   3924: istore 27
    //   3926: iload 20
    //   3928: istore 28
    //   3930: iload_3
    //   3931: istore 29
    //   3933: iload 23
    //   3935: istore 30
    //   3937: iload 8
    //   3939: istore 31
    //   3941: iload 22
    //   3943: istore 32
    //   3945: iload 18
    //   3947: istore 33
    //   3949: iload 17
    //   3951: istore 34
    //   3953: iload 16
    //   3955: istore 35
    //   3957: iload 11
    //   3959: istore 36
    //   3961: iload 10
    //   3963: istore 37
    //   3965: aload 79
    //   3967: astore 84
    //   3969: iload 21
    //   3971: istore 24
    //   3973: iload 14
    //   3975: istore 25
    //   3977: iload 13
    //   3979: istore 38
    //   3981: iload 12
    //   3983: istore 39
    //   3985: aload 78
    //   3987: astore 85
    //   3989: aload 76
    //   3991: astore 86
    //   3993: lload 63
    //   3995: lstore 67
    //   3997: aload 97
    //   3999: ldc_w 598
    //   4002: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   4005: iconst_1
    //   4006: aaload
    //   4007: invokevirtual 601	java/lang/String:trim	()Ljava/lang/String;
    //   4010: astore 77
    //   4012: iconst_1
    //   4013: istore 9
    //   4015: iload_2
    //   4016: istore 26
    //   4018: aload 72
    //   4020: astore 80
    //   4022: aload 73
    //   4024: astore 81
    //   4026: aload 74
    //   4028: astore 82
    //   4030: aload 75
    //   4032: astore 83
    //   4034: iload 19
    //   4036: istore 27
    //   4038: iload 20
    //   4040: istore 28
    //   4042: iload_3
    //   4043: istore 29
    //   4045: iload 23
    //   4047: istore 30
    //   4049: iload 8
    //   4051: istore 31
    //   4053: iload 22
    //   4055: istore 32
    //   4057: iload 18
    //   4059: istore 33
    //   4061: iload 17
    //   4063: istore 34
    //   4065: iload 16
    //   4067: istore 35
    //   4069: iload 9
    //   4071: istore 36
    //   4073: iload 10
    //   4075: istore 37
    //   4077: aload 79
    //   4079: astore 84
    //   4081: iload 21
    //   4083: istore 24
    //   4085: iload 14
    //   4087: istore 25
    //   4089: iload 13
    //   4091: istore 38
    //   4093: iload 12
    //   4095: istore 39
    //   4097: aload 78
    //   4099: astore 85
    //   4101: aload 77
    //   4103: astore 86
    //   4105: lload 63
    //   4107: lstore 67
    //   4109: aload 78
    //   4111: astore 76
    //   4113: aload 97
    //   4115: ldc_w 752
    //   4118: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   4121: ifeq +112 -> 4233
    //   4124: iload_2
    //   4125: istore 26
    //   4127: aload 72
    //   4129: astore 80
    //   4131: aload 73
    //   4133: astore 81
    //   4135: aload 74
    //   4137: astore 82
    //   4139: aload 75
    //   4141: astore 83
    //   4143: iload 19
    //   4145: istore 27
    //   4147: iload 20
    //   4149: istore 28
    //   4151: iload_3
    //   4152: istore 29
    //   4154: iload 23
    //   4156: istore 30
    //   4158: iload 8
    //   4160: istore 31
    //   4162: iload 22
    //   4164: istore 32
    //   4166: iload 18
    //   4168: istore 33
    //   4170: iload 17
    //   4172: istore 34
    //   4174: iload 16
    //   4176: istore 35
    //   4178: iload 9
    //   4180: istore 36
    //   4182: iload 10
    //   4184: istore 37
    //   4186: aload 79
    //   4188: astore 84
    //   4190: iload 21
    //   4192: istore 24
    //   4194: iload 14
    //   4196: istore 25
    //   4198: iload 13
    //   4200: istore 38
    //   4202: iload 12
    //   4204: istore 39
    //   4206: aload 78
    //   4208: astore 85
    //   4210: aload 77
    //   4212: astore 86
    //   4214: lload 63
    //   4216: lstore 67
    //   4218: aload 97
    //   4220: ldc_w 598
    //   4223: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   4226: iconst_1
    //   4227: aaload
    //   4228: invokevirtual 601	java/lang/String:trim	()Ljava/lang/String;
    //   4231: astore 76
    //   4233: iload_2
    //   4234: istore 26
    //   4236: aload 72
    //   4238: astore 80
    //   4240: aload 73
    //   4242: astore 81
    //   4244: aload 74
    //   4246: astore 82
    //   4248: aload 75
    //   4250: astore 83
    //   4252: iload 19
    //   4254: istore 27
    //   4256: iload 20
    //   4258: istore 28
    //   4260: iload_3
    //   4261: istore 29
    //   4263: iload 23
    //   4265: istore 30
    //   4267: iload 8
    //   4269: istore 31
    //   4271: iload 22
    //   4273: istore 32
    //   4275: iload 18
    //   4277: istore 33
    //   4279: iload 17
    //   4281: istore 34
    //   4283: iload 16
    //   4285: istore 35
    //   4287: iload 9
    //   4289: istore 36
    //   4291: iload 10
    //   4293: istore 37
    //   4295: aload 79
    //   4297: astore 84
    //   4299: iload 21
    //   4301: istore 24
    //   4303: iload 14
    //   4305: istore 25
    //   4307: iload 13
    //   4309: istore 38
    //   4311: iload 12
    //   4313: istore 39
    //   4315: aload 76
    //   4317: astore 85
    //   4319: aload 77
    //   4321: astore 86
    //   4323: lload 63
    //   4325: lstore 67
    //   4327: iload 16
    //   4329: istore 11
    //   4331: iload 12
    //   4333: istore 15
    //   4335: aload 97
    //   4337: ldc_w 754
    //   4340: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   4343: ifeq +170 -> 4513
    //   4346: iload_2
    //   4347: istore 26
    //   4349: aload 72
    //   4351: astore 80
    //   4353: aload 73
    //   4355: astore 81
    //   4357: aload 74
    //   4359: astore 82
    //   4361: aload 75
    //   4363: astore 83
    //   4365: iload 19
    //   4367: istore 27
    //   4369: iload 20
    //   4371: istore 28
    //   4373: iload_3
    //   4374: istore 29
    //   4376: iload 23
    //   4378: istore 30
    //   4380: iload 8
    //   4382: istore 31
    //   4384: iload 22
    //   4386: istore 32
    //   4388: iload 18
    //   4390: istore 33
    //   4392: iload 17
    //   4394: istore 34
    //   4396: iload 16
    //   4398: istore 35
    //   4400: iload 9
    //   4402: istore 36
    //   4404: iload 10
    //   4406: istore 37
    //   4408: aload 79
    //   4410: astore 84
    //   4412: iload 21
    //   4414: istore 24
    //   4416: iload 14
    //   4418: istore 25
    //   4420: iload 13
    //   4422: istore 38
    //   4424: iload 12
    //   4426: istore 39
    //   4428: aload 76
    //   4430: astore 85
    //   4432: aload 77
    //   4434: astore 86
    //   4436: lload 63
    //   4438: lstore 67
    //   4440: aload 97
    //   4442: ldc_w 598
    //   4445: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   4448: iconst_1
    //   4449: aaload
    //   4450: invokevirtual 601	java/lang/String:trim	()Ljava/lang/String;
    //   4453: invokestatic 487	java/lang/Integer:valueOf	(Ljava/lang/String;)Ljava/lang/Integer;
    //   4456: invokevirtual 490	java/lang/Integer:intValue	()I
    //   4459: istore 12
    //   4461: iload 12
    //   4463: istore 11
    //   4465: iload 12
    //   4467: ifeq +2718 -> 7185
    //   4470: iload 12
    //   4472: istore 11
    //   4474: iload 12
    //   4476: iconst_1
    //   4477: if_icmpeq +2708 -> 7185
    //   4480: iload 12
    //   4482: istore 11
    //   4484: iload 12
    //   4486: iconst_2
    //   4487: if_icmpeq +2698 -> 7185
    //   4490: iload 12
    //   4492: istore 11
    //   4494: iload 12
    //   4496: iconst_3
    //   4497: if_icmpeq +2688 -> 7185
    //   4500: iload 12
    //   4502: iconst_4
    //   4503: if_icmpne +2722 -> 7225
    //   4506: iload 12
    //   4508: istore 11
    //   4510: goto +2675 -> 7185
    //   4513: iload_2
    //   4514: istore 26
    //   4516: aload 72
    //   4518: astore 80
    //   4520: aload 73
    //   4522: astore 81
    //   4524: aload 74
    //   4526: astore 82
    //   4528: aload 75
    //   4530: astore 83
    //   4532: iload 19
    //   4534: istore 27
    //   4536: iload 20
    //   4538: istore 28
    //   4540: iload_3
    //   4541: istore 29
    //   4543: iload 23
    //   4545: istore 30
    //   4547: iload 8
    //   4549: istore 31
    //   4551: iload 22
    //   4553: istore 32
    //   4555: iload 18
    //   4557: istore 33
    //   4559: iload 17
    //   4561: istore 34
    //   4563: iload 11
    //   4565: istore 35
    //   4567: iload 9
    //   4569: istore 36
    //   4571: iload 10
    //   4573: istore 37
    //   4575: aload 79
    //   4577: astore 84
    //   4579: iload 21
    //   4581: istore 24
    //   4583: iload 14
    //   4585: istore 25
    //   4587: iload 13
    //   4589: istore 38
    //   4591: iload 15
    //   4593: istore 39
    //   4595: aload 76
    //   4597: astore 85
    //   4599: aload 77
    //   4601: astore 86
    //   4603: lload 63
    //   4605: lstore 67
    //   4607: iload 17
    //   4609: istore 12
    //   4611: iload 13
    //   4613: istore 16
    //   4615: aload 97
    //   4617: ldc_w 756
    //   4620: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   4623: ifeq +150 -> 4773
    //   4626: iload_2
    //   4627: istore 26
    //   4629: aload 72
    //   4631: astore 80
    //   4633: aload 73
    //   4635: astore 81
    //   4637: aload 74
    //   4639: astore 82
    //   4641: aload 75
    //   4643: astore 83
    //   4645: iload 19
    //   4647: istore 27
    //   4649: iload 20
    //   4651: istore 28
    //   4653: iload_3
    //   4654: istore 29
    //   4656: iload 23
    //   4658: istore 30
    //   4660: iload 8
    //   4662: istore 31
    //   4664: iload 22
    //   4666: istore 32
    //   4668: iload 18
    //   4670: istore 33
    //   4672: iload 17
    //   4674: istore 34
    //   4676: iload 11
    //   4678: istore 35
    //   4680: iload 9
    //   4682: istore 36
    //   4684: iload 10
    //   4686: istore 37
    //   4688: aload 79
    //   4690: astore 84
    //   4692: iload 21
    //   4694: istore 24
    //   4696: iload 14
    //   4698: istore 25
    //   4700: iload 13
    //   4702: istore 38
    //   4704: iload 15
    //   4706: istore 39
    //   4708: aload 76
    //   4710: astore 85
    //   4712: aload 77
    //   4714: astore 86
    //   4716: lload 63
    //   4718: lstore 67
    //   4720: aload 97
    //   4722: ldc_w 598
    //   4725: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   4728: iconst_1
    //   4729: aaload
    //   4730: invokevirtual 601	java/lang/String:trim	()Ljava/lang/String;
    //   4733: invokestatic 487	java/lang/Integer:valueOf	(Ljava/lang/String;)Ljava/lang/Integer;
    //   4736: invokevirtual 490	java/lang/Integer:intValue	()I
    //   4739: istore 13
    //   4741: iload 13
    //   4743: istore 12
    //   4745: iload 13
    //   4747: ifeq +2448 -> 7195
    //   4750: iload 13
    //   4752: istore 12
    //   4754: iload 13
    //   4756: iconst_1
    //   4757: if_icmpeq +2438 -> 7195
    //   4760: iload 13
    //   4762: iconst_2
    //   4763: if_icmpne +2468 -> 7231
    //   4766: iload 13
    //   4768: istore 12
    //   4770: goto +2425 -> 7195
    //   4773: iload_2
    //   4774: istore 26
    //   4776: aload 72
    //   4778: astore 80
    //   4780: aload 73
    //   4782: astore 81
    //   4784: aload 74
    //   4786: astore 82
    //   4788: aload 75
    //   4790: astore 83
    //   4792: iload 19
    //   4794: istore 27
    //   4796: iload 20
    //   4798: istore 28
    //   4800: iload_3
    //   4801: istore 29
    //   4803: iload 23
    //   4805: istore 30
    //   4807: iload 8
    //   4809: istore 31
    //   4811: iload 22
    //   4813: istore 32
    //   4815: iload 18
    //   4817: istore 33
    //   4819: iload 12
    //   4821: istore 34
    //   4823: iload 11
    //   4825: istore 35
    //   4827: iload 9
    //   4829: istore 36
    //   4831: iload 10
    //   4833: istore 37
    //   4835: aload 79
    //   4837: astore 84
    //   4839: iload 21
    //   4841: istore 24
    //   4843: iload 14
    //   4845: istore 25
    //   4847: iload 16
    //   4849: istore 38
    //   4851: iload 15
    //   4853: istore 39
    //   4855: aload 76
    //   4857: astore 85
    //   4859: aload 77
    //   4861: astore 86
    //   4863: lload 63
    //   4865: lstore 67
    //   4867: iload 18
    //   4869: istore 13
    //   4871: iload 14
    //   4873: istore 17
    //   4875: aload 97
    //   4877: ldc_w 758
    //   4880: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   4883: ifeq +126 -> 5009
    //   4886: iload_2
    //   4887: istore 26
    //   4889: aload 72
    //   4891: astore 80
    //   4893: aload 73
    //   4895: astore 81
    //   4897: aload 74
    //   4899: astore 82
    //   4901: aload 75
    //   4903: astore 83
    //   4905: iload 19
    //   4907: istore 27
    //   4909: iload 20
    //   4911: istore 28
    //   4913: iload_3
    //   4914: istore 29
    //   4916: iload 23
    //   4918: istore 30
    //   4920: iload 8
    //   4922: istore 31
    //   4924: iload 22
    //   4926: istore 32
    //   4928: iload 18
    //   4930: istore 33
    //   4932: iload 12
    //   4934: istore 34
    //   4936: iload 11
    //   4938: istore 35
    //   4940: iload 9
    //   4942: istore 36
    //   4944: iload 10
    //   4946: istore 37
    //   4948: aload 79
    //   4950: astore 84
    //   4952: iload 21
    //   4954: istore 24
    //   4956: iload 14
    //   4958: istore 25
    //   4960: iload 16
    //   4962: istore 38
    //   4964: iload 15
    //   4966: istore 39
    //   4968: aload 76
    //   4970: astore 85
    //   4972: aload 77
    //   4974: astore 86
    //   4976: lload 63
    //   4978: lstore 67
    //   4980: aload 97
    //   4982: ldc_w 598
    //   4985: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   4988: iconst_1
    //   4989: aaload
    //   4990: invokevirtual 601	java/lang/String:trim	()Ljava/lang/String;
    //   4993: invokestatic 487	java/lang/Integer:valueOf	(Ljava/lang/String;)Ljava/lang/Integer;
    //   4996: invokevirtual 490	java/lang/Integer:intValue	()I
    //   4999: istore 13
    //   5001: iload 13
    //   5003: ifle +1346 -> 6349
    //   5006: goto +2199 -> 7205
    //   5009: iload_2
    //   5010: istore 26
    //   5012: aload 72
    //   5014: astore 80
    //   5016: aload 73
    //   5018: astore 81
    //   5020: aload 74
    //   5022: astore 82
    //   5024: aload 75
    //   5026: astore 83
    //   5028: iload 19
    //   5030: istore 27
    //   5032: iload 20
    //   5034: istore 28
    //   5036: iload_3
    //   5037: istore 29
    //   5039: iload 23
    //   5041: istore 30
    //   5043: iload 8
    //   5045: istore 31
    //   5047: iload 22
    //   5049: istore 32
    //   5051: iload 13
    //   5053: istore 33
    //   5055: iload 12
    //   5057: istore 34
    //   5059: iload 11
    //   5061: istore 35
    //   5063: iload 9
    //   5065: istore 36
    //   5067: iload 10
    //   5069: istore 37
    //   5071: aload 79
    //   5073: astore 84
    //   5075: iload 21
    //   5077: istore 24
    //   5079: iload 17
    //   5081: istore 25
    //   5083: iload 16
    //   5085: istore 38
    //   5087: iload 15
    //   5089: istore 39
    //   5091: aload 76
    //   5093: astore 85
    //   5095: aload 77
    //   5097: astore 86
    //   5099: lload 63
    //   5101: lstore 67
    //   5103: iload 22
    //   5105: istore 14
    //   5107: iload 21
    //   5109: istore 18
    //   5111: aload 97
    //   5113: ldc_w 760
    //   5116: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   5119: ifeq +126 -> 5245
    //   5122: iload_2
    //   5123: istore 26
    //   5125: aload 72
    //   5127: astore 80
    //   5129: aload 73
    //   5131: astore 81
    //   5133: aload 74
    //   5135: astore 82
    //   5137: aload 75
    //   5139: astore 83
    //   5141: iload 19
    //   5143: istore 27
    //   5145: iload 20
    //   5147: istore 28
    //   5149: iload_3
    //   5150: istore 29
    //   5152: iload 23
    //   5154: istore 30
    //   5156: iload 8
    //   5158: istore 31
    //   5160: iload 22
    //   5162: istore 32
    //   5164: iload 13
    //   5166: istore 33
    //   5168: iload 12
    //   5170: istore 34
    //   5172: iload 11
    //   5174: istore 35
    //   5176: iload 9
    //   5178: istore 36
    //   5180: iload 10
    //   5182: istore 37
    //   5184: aload 79
    //   5186: astore 84
    //   5188: iload 21
    //   5190: istore 24
    //   5192: iload 17
    //   5194: istore 25
    //   5196: iload 16
    //   5198: istore 38
    //   5200: iload 15
    //   5202: istore 39
    //   5204: aload 76
    //   5206: astore 85
    //   5208: aload 77
    //   5210: astore 86
    //   5212: lload 63
    //   5214: lstore 67
    //   5216: aload 97
    //   5218: ldc_w 598
    //   5221: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   5224: iconst_1
    //   5225: aaload
    //   5226: invokevirtual 601	java/lang/String:trim	()Ljava/lang/String;
    //   5229: invokestatic 487	java/lang/Integer:valueOf	(Ljava/lang/String;)Ljava/lang/Integer;
    //   5232: invokevirtual 490	java/lang/Integer:intValue	()I
    //   5235: istore 14
    //   5237: iload 14
    //   5239: ifle +1212 -> 6451
    //   5242: goto +1973 -> 7215
    //   5245: iload 4
    //   5247: istore 41
    //   5249: iload 5
    //   5251: istore 43
    //   5253: iload 6
    //   5255: istore 44
    //   5257: iload 7
    //   5259: istore 45
    //   5261: iload_2
    //   5262: istore 40
    //   5264: aload 72
    //   5266: astore 87
    //   5268: aload 73
    //   5270: astore 88
    //   5272: aload 74
    //   5274: astore 89
    //   5276: aload 75
    //   5278: astore 90
    //   5280: iload 19
    //   5282: istore 46
    //   5284: iload 20
    //   5286: istore 47
    //   5288: iload_3
    //   5289: istore 48
    //   5291: iload 23
    //   5293: istore 49
    //   5295: iload 8
    //   5297: istore 50
    //   5299: iload 14
    //   5301: istore 51
    //   5303: iload 13
    //   5305: istore 52
    //   5307: iload 12
    //   5309: istore 53
    //   5311: iload 11
    //   5313: istore 54
    //   5315: iload 9
    //   5317: istore 55
    //   5319: iload 10
    //   5321: istore 56
    //   5323: aload 79
    //   5325: astore 91
    //   5327: iload 18
    //   5329: istore 57
    //   5331: iload 17
    //   5333: istore 58
    //   5335: iload 16
    //   5337: istore 59
    //   5339: iload 15
    //   5341: istore 60
    //   5343: aload 76
    //   5345: astore 92
    //   5347: aload 77
    //   5349: astore 93
    //   5351: lload 63
    //   5353: lstore 69
    //   5355: iload_2
    //   5356: istore 26
    //   5358: aload 72
    //   5360: astore 80
    //   5362: aload 73
    //   5364: astore 81
    //   5366: aload 74
    //   5368: astore 82
    //   5370: aload 75
    //   5372: astore 83
    //   5374: iload 19
    //   5376: istore 27
    //   5378: iload 20
    //   5380: istore 28
    //   5382: iload_3
    //   5383: istore 29
    //   5385: iload 23
    //   5387: istore 30
    //   5389: iload 8
    //   5391: istore 31
    //   5393: iload 14
    //   5395: istore 32
    //   5397: iload 13
    //   5399: istore 33
    //   5401: iload 12
    //   5403: istore 34
    //   5405: iload 11
    //   5407: istore 35
    //   5409: iload 9
    //   5411: istore 36
    //   5413: iload 10
    //   5415: istore 37
    //   5417: aload 79
    //   5419: astore 84
    //   5421: iload 18
    //   5423: istore 24
    //   5425: iload 17
    //   5427: istore 25
    //   5429: iload 16
    //   5431: istore 38
    //   5433: iload 15
    //   5435: istore 39
    //   5437: aload 76
    //   5439: astore 85
    //   5441: aload 77
    //   5443: astore 86
    //   5445: lload 63
    //   5447: lstore 67
    //   5449: aload 97
    //   5451: ldc_w 762
    //   5454: invokevirtual 596	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   5457: ifeq -4297 -> 1160
    //   5460: iload_2
    //   5461: istore 26
    //   5463: aload 72
    //   5465: astore 80
    //   5467: aload 73
    //   5469: astore 81
    //   5471: aload 74
    //   5473: astore 82
    //   5475: aload 75
    //   5477: astore 83
    //   5479: iload 19
    //   5481: istore 27
    //   5483: iload 20
    //   5485: istore 28
    //   5487: iload_3
    //   5488: istore 29
    //   5490: iload 23
    //   5492: istore 30
    //   5494: iload 8
    //   5496: istore 31
    //   5498: iload 14
    //   5500: istore 32
    //   5502: iload 13
    //   5504: istore 33
    //   5506: iload 12
    //   5508: istore 34
    //   5510: iload 11
    //   5512: istore 35
    //   5514: iload 9
    //   5516: istore 36
    //   5518: iload 10
    //   5520: istore 37
    //   5522: aload 79
    //   5524: astore 84
    //   5526: iload 18
    //   5528: istore 24
    //   5530: iload 17
    //   5532: istore 25
    //   5534: iload 16
    //   5536: istore 38
    //   5538: iload 15
    //   5540: istore 39
    //   5542: aload 76
    //   5544: astore 85
    //   5546: aload 77
    //   5548: astore 86
    //   5550: lload 63
    //   5552: lstore 67
    //   5554: aload 97
    //   5556: ldc_w 598
    //   5559: invokevirtual 591	java/lang/String:split	(Ljava/lang/String;)[Ljava/lang/String;
    //   5562: astore 87
    //   5564: iload_2
    //   5565: istore 26
    //   5567: aload 72
    //   5569: astore 80
    //   5571: aload 73
    //   5573: astore 81
    //   5575: aload 74
    //   5577: astore 82
    //   5579: aload 75
    //   5581: astore 83
    //   5583: iload 19
    //   5585: istore 27
    //   5587: iload 20
    //   5589: istore 28
    //   5591: iload_3
    //   5592: istore 29
    //   5594: iload 23
    //   5596: istore 30
    //   5598: iload 8
    //   5600: istore 31
    //   5602: iload 14
    //   5604: istore 32
    //   5606: iload 13
    //   5608: istore 33
    //   5610: iload 12
    //   5612: istore 34
    //   5614: iload 11
    //   5616: istore 35
    //   5618: iload 9
    //   5620: istore 36
    //   5622: iload 10
    //   5624: istore 37
    //   5626: aload 79
    //   5628: astore 84
    //   5630: iload 18
    //   5632: istore 24
    //   5634: iload 17
    //   5636: istore 25
    //   5638: iload 16
    //   5640: istore 38
    //   5642: iload 15
    //   5644: istore 39
    //   5646: aload 76
    //   5648: astore 85
    //   5650: aload 77
    //   5652: astore 86
    //   5654: lload 63
    //   5656: lstore 67
    //   5658: aload 87
    //   5660: iconst_1
    //   5661: aaload
    //   5662: invokestatic 764	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:a	(Ljava/lang/String;)Ljava/lang/String;
    //   5665: astore 78
    //   5667: iload_2
    //   5668: istore 26
    //   5670: aload 72
    //   5672: astore 80
    //   5674: aload 73
    //   5676: astore 81
    //   5678: aload 74
    //   5680: astore 82
    //   5682: aload 75
    //   5684: astore 83
    //   5686: iload 19
    //   5688: istore 27
    //   5690: iload 20
    //   5692: istore 28
    //   5694: iload_3
    //   5695: istore 29
    //   5697: iload 23
    //   5699: istore 30
    //   5701: iload 8
    //   5703: istore 31
    //   5705: iload 14
    //   5707: istore 32
    //   5709: iload 13
    //   5711: istore 33
    //   5713: iload 12
    //   5715: istore 34
    //   5717: iload 11
    //   5719: istore 35
    //   5721: iload 9
    //   5723: istore 36
    //   5725: iload 10
    //   5727: istore 37
    //   5729: aload 78
    //   5731: astore 84
    //   5733: iload 18
    //   5735: istore 24
    //   5737: iload 17
    //   5739: istore 25
    //   5741: iload 16
    //   5743: istore 38
    //   5745: iload 15
    //   5747: istore 39
    //   5749: aload 76
    //   5751: astore 85
    //   5753: aload 77
    //   5755: astore 86
    //   5757: lload 63
    //   5759: lstore 67
    //   5761: aload 87
    //   5763: iconst_1
    //   5764: aaload
    //   5765: invokestatic 766	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:c	(Ljava/lang/String;)I
    //   5768: istore 21
    //   5770: aload 87
    //   5772: iconst_1
    //   5773: aaload
    //   5774: invokestatic 768	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:b	(Ljava/lang/String;)I
    //   5777: istore 22
    //   5779: aload 87
    //   5781: iconst_1
    //   5782: aaload
    //   5783: invokestatic 770	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:a	(Ljava/lang/String;)I
    //   5786: istore 24
    //   5788: iload 21
    //   5790: iconst_1
    //   5791: if_icmpeq +1387 -> 7178
    //   5794: iload 21
    //   5796: iconst_2
    //   5797: if_icmpeq +1381 -> 7178
    //   5800: iconst_0
    //   5801: istore 19
    //   5803: iload_3
    //   5804: istore 20
    //   5806: iload 19
    //   5808: ifeq +31 -> 5839
    //   5811: aload 87
    //   5813: iconst_1
    //   5814: aaload
    //   5815: invokestatic 772	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:d	(Ljava/lang/String;)I
    //   5818: istore 20
    //   5820: iload 20
    //   5822: istore_3
    //   5823: iload_3
    //   5824: ifle +12 -> 5836
    //   5827: iload_3
    //   5828: istore 20
    //   5830: iload_3
    //   5831: bipush 6
    //   5833: if_icmple +6 -> 5839
    //   5836: iconst_1
    //   5837: istore 20
    //   5839: iload 22
    //   5841: iconst_1
    //   5842: if_icmpeq +1330 -> 7172
    //   5845: iconst_0
    //   5846: istore_3
    //   5847: iload 24
    //   5849: ifgt +1316 -> 7165
    //   5852: iconst_3
    //   5853: istore 8
    //   5855: iconst_1
    //   5856: istore 22
    //   5858: iconst_1
    //   5859: istore 21
    //   5861: iload 4
    //   5863: istore 41
    //   5865: iload 5
    //   5867: istore 43
    //   5869: iload 6
    //   5871: istore 44
    //   5873: iload 7
    //   5875: istore 45
    //   5877: iload_2
    //   5878: istore 40
    //   5880: aload 72
    //   5882: astore 87
    //   5884: aload 73
    //   5886: astore 88
    //   5888: aload 74
    //   5890: astore 89
    //   5892: aload 75
    //   5894: astore 90
    //   5896: iload 8
    //   5898: istore 46
    //   5900: iload_3
    //   5901: istore 47
    //   5903: iload 20
    //   5905: istore 48
    //   5907: iload 19
    //   5909: istore 49
    //   5911: iload 21
    //   5913: istore 50
    //   5915: iload 14
    //   5917: istore 51
    //   5919: iload 13
    //   5921: istore 52
    //   5923: iload 12
    //   5925: istore 53
    //   5927: iload 11
    //   5929: istore 54
    //   5931: iload 9
    //   5933: istore 55
    //   5935: iload 10
    //   5937: istore 56
    //   5939: aload 78
    //   5941: astore 91
    //   5943: iload 18
    //   5945: istore 57
    //   5947: iload 17
    //   5949: istore 58
    //   5951: iload 16
    //   5953: istore 59
    //   5955: iload 15
    //   5957: istore 60
    //   5959: aload 76
    //   5961: astore 92
    //   5963: aload 77
    //   5965: astore 93
    //   5967: lload 63
    //   5969: lstore 69
    //   5971: iload_2
    //   5972: istore 26
    //   5974: aload 72
    //   5976: astore 80
    //   5978: aload 73
    //   5980: astore 81
    //   5982: aload 74
    //   5984: astore 82
    //   5986: aload 75
    //   5988: astore 83
    //   5990: iload 8
    //   5992: istore 27
    //   5994: iload_3
    //   5995: istore 28
    //   5997: iload 20
    //   5999: istore 29
    //   6001: iload 19
    //   6003: istore 30
    //   6005: iload 22
    //   6007: istore 31
    //   6009: iload 14
    //   6011: istore 32
    //   6013: iload 13
    //   6015: istore 33
    //   6017: iload 12
    //   6019: istore 34
    //   6021: iload 11
    //   6023: istore 35
    //   6025: iload 9
    //   6027: istore 36
    //   6029: iload 10
    //   6031: istore 37
    //   6033: aload 78
    //   6035: astore 84
    //   6037: iload 18
    //   6039: istore 24
    //   6041: iload 17
    //   6043: istore 25
    //   6045: iload 16
    //   6047: istore 38
    //   6049: iload 15
    //   6051: istore 39
    //   6053: aload 76
    //   6055: astore 85
    //   6057: aload 77
    //   6059: astore 86
    //   6061: lload 63
    //   6063: lstore 67
    //   6065: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   6068: ifeq -4908 -> 1160
    //   6071: iload_2
    //   6072: istore 26
    //   6074: aload 72
    //   6076: astore 80
    //   6078: aload 73
    //   6080: astore 81
    //   6082: aload 74
    //   6084: astore 82
    //   6086: aload 75
    //   6088: astore 83
    //   6090: iload 8
    //   6092: istore 27
    //   6094: iload_3
    //   6095: istore 28
    //   6097: iload 20
    //   6099: istore 29
    //   6101: iload 19
    //   6103: istore 30
    //   6105: iload 22
    //   6107: istore 31
    //   6109: iload 14
    //   6111: istore 32
    //   6113: iload 13
    //   6115: istore 33
    //   6117: iload 12
    //   6119: istore 34
    //   6121: iload 11
    //   6123: istore 35
    //   6125: iload 9
    //   6127: istore 36
    //   6129: iload 10
    //   6131: istore 37
    //   6133: aload 78
    //   6135: astore 84
    //   6137: iload 18
    //   6139: istore 24
    //   6141: iload 17
    //   6143: istore 25
    //   6145: iload 16
    //   6147: istore 38
    //   6149: iload 15
    //   6151: istore 39
    //   6153: aload 76
    //   6155: astore 85
    //   6157: aload 77
    //   6159: astore 86
    //   6161: lload 63
    //   6163: lstore 67
    //   6165: ldc_w 569
    //   6168: iconst_2
    //   6169: new 92	java/lang/StringBuilder
    //   6172: dup
    //   6173: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6176: ldc_w 774
    //   6179: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6182: aload 78
    //   6184: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6187: ldc_w 776
    //   6190: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6193: iload 19
    //   6195: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6198: ldc_w 778
    //   6201: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6204: iload 20
    //   6206: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6209: ldc_w 780
    //   6212: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6215: iload_3
    //   6216: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6219: ldc_w 782
    //   6222: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6225: iload 8
    //   6227: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6230: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6233: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   6236: iload 4
    //   6238: istore 41
    //   6240: iload 5
    //   6242: istore 43
    //   6244: iload 6
    //   6246: istore 44
    //   6248: iload 7
    //   6250: istore 45
    //   6252: iload_2
    //   6253: istore 40
    //   6255: aload 72
    //   6257: astore 87
    //   6259: aload 73
    //   6261: astore 88
    //   6263: aload 74
    //   6265: astore 89
    //   6267: aload 75
    //   6269: astore 90
    //   6271: iload 8
    //   6273: istore 46
    //   6275: iload_3
    //   6276: istore 47
    //   6278: iload 20
    //   6280: istore 48
    //   6282: iload 19
    //   6284: istore 49
    //   6286: iload 21
    //   6288: istore 50
    //   6290: iload 14
    //   6292: istore 51
    //   6294: iload 13
    //   6296: istore 52
    //   6298: iload 12
    //   6300: istore 53
    //   6302: iload 11
    //   6304: istore 54
    //   6306: iload 9
    //   6308: istore 55
    //   6310: iload 10
    //   6312: istore 56
    //   6314: aload 78
    //   6316: astore 91
    //   6318: iload 18
    //   6320: istore 57
    //   6322: iload 17
    //   6324: istore 58
    //   6326: iload 16
    //   6328: istore 59
    //   6330: iload 15
    //   6332: istore 60
    //   6334: aload 76
    //   6336: astore 92
    //   6338: aload 77
    //   6340: astore 93
    //   6342: lload 63
    //   6344: lstore 69
    //   6346: goto -5186 -> 1160
    //   6349: iload_2
    //   6350: istore 26
    //   6352: aload 72
    //   6354: astore 80
    //   6356: aload 73
    //   6358: astore 81
    //   6360: aload 74
    //   6362: astore 82
    //   6364: aload 75
    //   6366: astore 83
    //   6368: iload 19
    //   6370: istore 27
    //   6372: iload 20
    //   6374: istore 28
    //   6376: iload_3
    //   6377: istore 29
    //   6379: iload 23
    //   6381: istore 30
    //   6383: iload 8
    //   6385: istore 31
    //   6387: iload 22
    //   6389: istore 32
    //   6391: iload 18
    //   6393: istore 33
    //   6395: iload 12
    //   6397: istore 34
    //   6399: iload 11
    //   6401: istore 35
    //   6403: iload 9
    //   6405: istore 36
    //   6407: iload 10
    //   6409: istore 37
    //   6411: aload 79
    //   6413: astore 84
    //   6415: iload 21
    //   6417: istore 24
    //   6419: iload 13
    //   6421: istore 25
    //   6423: iload 16
    //   6425: istore 38
    //   6427: iload 15
    //   6429: istore 39
    //   6431: aload 76
    //   6433: astore 85
    //   6435: aload 77
    //   6437: astore 86
    //   6439: lload 63
    //   6441: lstore 67
    //   6443: getstatic 785	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:h	I
    //   6446: istore 13
    //   6448: goto +757 -> 7205
    //   6451: iload_2
    //   6452: istore 26
    //   6454: aload 72
    //   6456: astore 80
    //   6458: aload 73
    //   6460: astore 81
    //   6462: aload 74
    //   6464: astore 82
    //   6466: aload 75
    //   6468: astore 83
    //   6470: iload 19
    //   6472: istore 27
    //   6474: iload 20
    //   6476: istore 28
    //   6478: iload_3
    //   6479: istore 29
    //   6481: iload 23
    //   6483: istore 30
    //   6485: iload 8
    //   6487: istore 31
    //   6489: iload 22
    //   6491: istore 32
    //   6493: iload 13
    //   6495: istore 33
    //   6497: iload 12
    //   6499: istore 34
    //   6501: iload 11
    //   6503: istore 35
    //   6505: iload 9
    //   6507: istore 36
    //   6509: iload 10
    //   6511: istore 37
    //   6513: aload 79
    //   6515: astore 84
    //   6517: iload 14
    //   6519: istore 24
    //   6521: iload 17
    //   6523: istore 25
    //   6525: iload 16
    //   6527: istore 38
    //   6529: iload 15
    //   6531: istore 39
    //   6533: aload 76
    //   6535: astore 85
    //   6537: aload 77
    //   6539: astore 86
    //   6541: lload 63
    //   6543: lstore 67
    //   6545: getstatic 787	com/tencent/mobileqq/activity/aio/item/PokeItemHelper:i	I
    //   6548: istore 14
    //   6550: goto +665 -> 7215
    //   6553: iconst_0
    //   6554: istore 40
    //   6556: iconst_0
    //   6557: istore 41
    //   6559: iconst_0
    //   6560: istore 10
    //   6562: bipush 50
    //   6564: istore 15
    //   6566: iconst_0
    //   6567: istore 24
    //   6569: aconst_null
    //   6570: astore 85
    //   6572: aconst_null
    //   6573: astore 84
    //   6575: aconst_null
    //   6576: astore 80
    //   6578: aconst_null
    //   6579: astore 77
    //   6581: iconst_0
    //   6582: istore 25
    //   6584: iconst_0
    //   6585: istore 26
    //   6587: iconst_0
    //   6588: istore 27
    //   6590: iconst_0
    //   6591: istore 28
    //   6593: iconst_0
    //   6594: istore 29
    //   6596: iconst_0
    //   6597: istore 30
    //   6599: iconst_0
    //   6600: istore 31
    //   6602: iconst_0
    //   6603: istore 32
    //   6605: iconst_0
    //   6606: istore 33
    //   6608: iconst_0
    //   6609: istore 34
    //   6611: iconst_0
    //   6612: istore 35
    //   6614: aconst_null
    //   6615: astore 81
    //   6617: iconst_m1
    //   6618: istore 36
    //   6620: iconst_m1
    //   6621: istore 37
    //   6623: iconst_m1
    //   6624: istore 38
    //   6626: iconst_m1
    //   6627: istore 39
    //   6629: ldc 13
    //   6631: astore 82
    //   6633: ldc 13
    //   6635: astore 83
    //   6637: ldc2_w 584
    //   6640: lstore 63
    //   6642: iload 30
    //   6644: istore 12
    //   6646: iload 29
    //   6648: istore 11
    //   6650: iload 27
    //   6652: istore 9
    //   6654: iload 26
    //   6656: istore 8
    //   6658: iload 25
    //   6660: istore 6
    //   6662: iload 41
    //   6664: istore 5
    //   6666: iload 40
    //   6668: istore_2
    //   6669: aload 85
    //   6671: astore 74
    //   6673: aload 84
    //   6675: astore 73
    //   6677: aload 80
    //   6679: astore 72
    //   6681: iload 24
    //   6683: istore_3
    //   6684: iload 15
    //   6686: istore 4
    //   6688: aload 77
    //   6690: astore 76
    //   6692: iload 10
    //   6694: istore 7
    //   6696: iload 28
    //   6698: istore 10
    //   6700: iload 31
    //   6702: istore 13
    //   6704: iload 32
    //   6706: istore 14
    //   6708: iload 33
    //   6710: istore 15
    //   6712: iload 34
    //   6714: istore 16
    //   6716: iload 35
    //   6718: istore 17
    //   6720: aload 81
    //   6722: astore 75
    //   6724: iload 36
    //   6726: istore 18
    //   6728: iload 37
    //   6730: istore 19
    //   6732: iload 38
    //   6734: istore 20
    //   6736: iload 39
    //   6738: istore 21
    //   6740: aload 82
    //   6742: astore 77
    //   6744: aload 83
    //   6746: astore 78
    //   6748: goto -5057 -> 1691
    //   6751: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   6754: ifeq +35 -> 6789
    //   6757: ldc 90
    //   6759: iconst_2
    //   6760: new 92	java/lang/StringBuilder
    //   6763: dup
    //   6764: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6767: ldc_w 789
    //   6770: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6773: aload_1
    //   6774: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6777: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6780: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6783: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6786: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   6789: return
    //   6790: astore 79
    //   6792: goto -5185 -> 1607
    //   6795: astore 79
    //   6797: aload 77
    //   6799: astore 80
    //   6801: aload 76
    //   6803: astore 77
    //   6805: iload 15
    //   6807: istore 22
    //   6809: iload 16
    //   6811: istore 23
    //   6813: iload 17
    //   6815: istore 24
    //   6817: iload 10
    //   6819: istore 17
    //   6821: iload 9
    //   6823: istore 16
    //   6825: iload 11
    //   6827: istore 15
    //   6829: iload 12
    //   6831: istore 25
    //   6833: iload 14
    //   6835: istore 12
    //   6837: iload 8
    //   6839: istore 11
    //   6841: iload 21
    //   6843: istore 9
    //   6845: iload_2
    //   6846: istore 10
    //   6848: iload 7
    //   6850: istore 8
    //   6852: iload 6
    //   6854: istore 7
    //   6856: iload 4
    //   6858: istore_2
    //   6859: iload_3
    //   6860: istore 6
    //   6862: aload 75
    //   6864: astore 76
    //   6866: iload 19
    //   6868: istore_3
    //   6869: iload 20
    //   6871: istore 4
    //   6873: iload 25
    //   6875: istore 14
    //   6877: aload 78
    //   6879: astore 75
    //   6881: iload 24
    //   6883: istore 19
    //   6885: iload 23
    //   6887: istore 20
    //   6889: iload 22
    //   6891: istore 21
    //   6893: aload 80
    //   6895: astore 78
    //   6897: goto -5290 -> 1607
    //   6900: astore 79
    //   6902: iload_3
    //   6903: istore 24
    //   6905: iload 22
    //   6907: istore 25
    //   6909: aload 77
    //   6911: astore 80
    //   6913: aload 76
    //   6915: astore 77
    //   6917: iload 15
    //   6919: istore 22
    //   6921: iload 16
    //   6923: istore 20
    //   6925: iload 17
    //   6927: istore 23
    //   6929: iload 10
    //   6931: istore 17
    //   6933: iload 9
    //   6935: istore 16
    //   6937: iload 11
    //   6939: istore 15
    //   6941: iload 12
    //   6943: istore 26
    //   6945: iload 14
    //   6947: istore 12
    //   6949: iload 8
    //   6951: istore 11
    //   6953: iload 21
    //   6955: istore 9
    //   6957: iload 19
    //   6959: istore_3
    //   6960: iload_2
    //   6961: istore 10
    //   6963: iload 7
    //   6965: istore 8
    //   6967: iload 4
    //   6969: istore_2
    //   6970: iload 6
    //   6972: istore 7
    //   6974: aload 75
    //   6976: astore 76
    //   6978: iload 25
    //   6980: istore 4
    //   6982: iload 24
    //   6984: istore 6
    //   6986: iload 26
    //   6988: istore 14
    //   6990: aload 78
    //   6992: astore 75
    //   6994: iload 23
    //   6996: istore 19
    //   6998: iload 22
    //   7000: istore 21
    //   7002: aload 80
    //   7004: astore 78
    //   7006: goto -5399 -> 1607
    //   7009: astore 79
    //   7011: iload_2
    //   7012: istore 25
    //   7014: iload 7
    //   7016: istore 26
    //   7018: iload 4
    //   7020: istore_2
    //   7021: aload 77
    //   7023: astore 80
    //   7025: aload 76
    //   7027: astore 77
    //   7029: iload 15
    //   7031: istore 21
    //   7033: iload 16
    //   7035: istore 20
    //   7037: iload 17
    //   7039: istore 23
    //   7041: iload 10
    //   7043: istore 17
    //   7045: iload 9
    //   7047: istore 16
    //   7049: iload 11
    //   7051: istore 15
    //   7053: iload 12
    //   7055: istore 27
    //   7057: iload 14
    //   7059: istore 12
    //   7061: iload 8
    //   7063: istore 11
    //   7065: iload 19
    //   7067: istore 9
    //   7069: iload_3
    //   7070: istore 14
    //   7072: iload 22
    //   7074: istore 4
    //   7076: iload 6
    //   7078: istore 7
    //   7080: iload 26
    //   7082: istore 8
    //   7084: iload 25
    //   7086: istore 10
    //   7088: aload 75
    //   7090: astore 76
    //   7092: iload 24
    //   7094: istore_3
    //   7095: iload 14
    //   7097: istore 6
    //   7099: iload 27
    //   7101: istore 14
    //   7103: aload 78
    //   7105: astore 75
    //   7107: iload 23
    //   7109: istore 19
    //   7111: aload 80
    //   7113: astore 78
    //   7115: goto -5508 -> 1607
    //   7118: astore 80
    //   7120: aload 77
    //   7122: astore 74
    //   7124: aload 80
    //   7126: astore 77
    //   7128: goto -3781 -> 3347
    //   7131: astore 80
    //   7133: aload 74
    //   7135: astore 72
    //   7137: aload 77
    //   7139: astore 74
    //   7141: aload 80
    //   7143: astore 77
    //   7145: goto -3798 -> 3347
    //   7148: astore 80
    //   7150: aload 74
    //   7152: astore 72
    //   7154: aload 77
    //   7156: astore 74
    //   7158: aload 80
    //   7160: astore 77
    //   7162: goto -3815 -> 3347
    //   7165: iload 24
    //   7167: istore 8
    //   7169: goto -1314 -> 5855
    //   7172: iload 22
    //   7174: istore_3
    //   7175: goto -1328 -> 5847
    //   7178: iload 21
    //   7180: istore 19
    //   7182: goto -1379 -> 5803
    //   7185: iload 11
    //   7187: istore 15
    //   7189: iconst_1
    //   7190: istore 11
    //   7192: goto -2679 -> 4513
    //   7195: iload 12
    //   7197: istore 16
    //   7199: iconst_1
    //   7200: istore 12
    //   7202: goto -2429 -> 4773
    //   7205: iload 13
    //   7207: istore 17
    //   7209: iconst_1
    //   7210: istore 13
    //   7212: goto -2203 -> 5009
    //   7215: iload 14
    //   7217: istore 18
    //   7219: iconst_1
    //   7220: istore 14
    //   7222: goto -1977 -> 5245
    //   7225: iconst_0
    //   7226: istore 11
    //   7228: goto -43 -> 7185
    //   7231: iconst_0
    //   7232: istore 12
    //   7234: goto -39 -> 7195
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	7237	0	this	ConfigServlet
    //   0	7237	1	paramConfig	ConfigurationService.Config
    //   31	6990	2	i	int
    //   45	7130	3	j	int
    //   49	7026	4	k	int
    //   379	6286	5	m	int
    //   349	6749	6	n	int
    //   376	6703	7	i1	int
    //   373	6795	8	i2	int
    //   346	6722	9	i3	int
    //   369	6718	10	i4	int
    //   343	6884	11	i5	int
    //   340	6893	12	i6	int
    //   337	6874	13	i7	int
    //   334	6887	14	i8	int
    //   331	6857	15	i9	int
    //   328	6870	16	i10	int
    //   325	6883	17	i11	int
    //   319	6899	18	i12	int
    //   316	6865	19	i13	int
    //   313	6723	20	i14	int
    //   310	6869	21	i15	int
    //   448	6725	22	i16	int
    //   442	6666	23	i17	int
    //   510	6656	24	i18	int
    //   530	6555	25	i19	int
    //   534	6547	26	i20	int
    //   537	6563	27	i21	int
    //   541	6156	28	i22	int
    //   545	6102	29	i23	int
    //   549	6094	30	i24	int
    //   553	6148	31	i25	int
    //   557	6148	32	i26	int
    //   561	6148	33	i27	int
    //   565	6148	34	i28	int
    //   569	6148	35	i29	int
    //   577	6148	36	i30	int
    //   581	6148	37	i31	int
    //   585	6148	38	i32	int
    //   589	6148	39	i33	int
    //   495	6172	40	i34	int
    //   499	6164	41	i35	int
    //   404	761	42	i36	int
    //   938	5305	43	i37	int
    //   942	5305	44	i38	int
    //   946	5305	45	i39	int
    //   969	5305	46	i40	int
    //   973	5304	47	i41	int
    //   976	5305	48	i42	int
    //   980	5305	49	i43	int
    //   984	5305	50	i44	int
    //   988	5305	51	i45	int
    //   992	5305	52	i46	int
    //   996	5305	53	i47	int
    //   1000	5305	54	i48	int
    //   1004	5305	55	i49	int
    //   1008	5305	56	i50	int
    //   1016	5305	57	i51	int
    //   1020	5305	58	i52	int
    //   1024	5305	59	i53	int
    //   1028	5305	60	i54	int
    //   16	2065	61	i55	int
    //   401	207	62	i56	int
    //   299	6342	63	l1	long
    //   491	3272	65	l2	long
    //   709	5835	67	l3	long
    //   1040	5305	69	l4	long
    //   930	2063	71	bool	boolean
    //   157	6996	72	localObject1	Object
    //   363	6313	73	localObject2	Object
    //   360	6797	74	localObject3	Object
    //   322	6784	75	localObject4	Object
    //   357	6734	76	localObject5	Object
    //   307	741	77	localObject6	Object
    //   1279	97	77	localException1	Exception
    //   1505	1054	77	localObject7	Object
    //   2674	97	77	localException2	Exception
    //   3062	183	77	str1	String
    //   3326	116	77	localException3	Exception
    //   3890	3271	77	localObject8	Object
    //   303	6811	78	localObject9	Object
    //   229	1230	79	localObject10	Object
    //   1493	143	79	localException4	Exception
    //   1659	4855	79	localObject11	Object
    //   6790	1	79	localException5	Exception
    //   6795	1	79	localException6	Exception
    //   6900	1	79	localException7	Exception
    //   7009	1	79	localException8	Exception
    //   522	6590	80	localObject12	Object
    //   7118	7	80	localException9	Exception
    //   7131	11	80	localException10	Exception
    //   7148	11	80	localException11	Exception
    //   573	6148	81	localObject13	Object
    //   593	6148	82	localObject14	Object
    //   597	6148	83	localObject15	Object
    //   518	6156	84	localObject16	Object
    //   514	6156	85	localObject17	Object
    //   705	5835	86	localObject18	Object
    //   953	5305	87	localObject19	Object
    //   957	5305	88	localObject20	Object
    //   961	5305	89	localObject21	Object
    //   965	5305	90	localObject22	Object
    //   1012	5305	91	localObject23	Object
    //   1032	5305	92	localObject24	Object
    //   1036	5305	93	localObject25	Object
    //   7	2100	94	localQQAppInterface	QQAppInterface
    //   207	13	95	localIterator	Iterator
    //   391	220	96	arrayOfString	String[]
    //   615	4940	97	str2	String
    // Exception table:
    //   from	to	target	type
    //   1047	1054	1279	java/lang/Exception
    //   711	722	1493	java/lang/Exception
    //   816	831	1493	java/lang/Exception
    //   925	932	1493	java/lang/Exception
    //   1375	1380	1493	java/lang/Exception
    //   2222	2233	1493	java/lang/Exception
    //   2327	2342	1493	java/lang/Exception
    //   2436	2443	1493	java/lang/Exception
    //   2770	2775	1493	java/lang/Exception
    //   2982	2992	1493	java/lang/Exception
    //   3441	3446	1493	java/lang/Exception
    //   3661	3672	1493	java/lang/Exception
    //   3766	3787	1493	java/lang/Exception
    //   3892	3903	1493	java/lang/Exception
    //   3997	4012	1493	java/lang/Exception
    //   4113	4124	1493	java/lang/Exception
    //   4218	4233	1493	java/lang/Exception
    //   4335	4346	1493	java/lang/Exception
    //   4440	4461	1493	java/lang/Exception
    //   4615	4626	1493	java/lang/Exception
    //   4720	4741	1493	java/lang/Exception
    //   4875	4886	1493	java/lang/Exception
    //   4980	5001	1493	java/lang/Exception
    //   5111	5122	1493	java/lang/Exception
    //   5216	5237	1493	java/lang/Exception
    //   5449	5460	1493	java/lang/Exception
    //   5554	5564	1493	java/lang/Exception
    //   5658	5667	1493	java/lang/Exception
    //   5761	5770	1493	java/lang/Exception
    //   6065	6071	1493	java/lang/Exception
    //   6165	6236	1493	java/lang/Exception
    //   6443	6448	1493	java/lang/Exception
    //   6545	6550	1493	java/lang/Exception
    //   2558	2565	2674	java/lang/Exception
    //   3016	3035	3326	java/lang/Exception
    //   3054	3064	3326	java/lang/Exception
    //   3083	3093	3326	java/lang/Exception
    //   3112	3122	3326	java/lang/Exception
    //   3185	3195	3326	java/lang/Exception
    //   3215	3225	3326	java/lang/Exception
    //   383	393	6790	java/lang/Exception
    //   398	403	6790	java/lang/Exception
    //   5770	5779	6795	java/lang/Exception
    //   5779	5788	6900	java/lang/Exception
    //   5811	5820	7009	java/lang/Exception
    //   3122	3132	7118	java/lang/Exception
    //   3132	3147	7131	java/lang/Exception
    //   3151	3166	7148	java/lang/Exception
  }
  
  private void I(ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "received TROOP_SHARE_MSG_COMMENT_WHITELIST response: -------");
    }
    try
    {
      QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
      if ((paramConfig != null) && (paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
      {
        String str = (String)paramConfig.content_list.get(0);
        int i = paramConfig.version.get();
        paramConfig = (TroopTopicMgr)localQQAppInterface.getManager(97);
        int j = paramConfig.jdField_a_of_type_Int;
        if (i != j)
        {
          paramConfig.a(str, i);
          return;
        }
        if (!QLog.isColorLevel()) {
          return;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "received TROOP_SHARE_MSG_COMMENT_WHITELIST remote version: " + i + " | localVersion: " + j);
        return;
      }
    }
    catch (Exception paramConfig)
    {
      if (QLog.isColorLevel()) {
        QLog.e("SPLASH_ConfigServlet", 2, "received TROOP_SHARE_MSG_COMMENT_WHITELIST error", paramConfig);
      }
      paramConfig.printStackTrace();
      return;
    }
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "received TROOP_SHARE_MSG_COMMENT_WHITELIST content_list is empty");
    }
  }
  
  private void J(ConfigurationService.Config paramConfig)
  {
    try
    {
      QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
      if ((paramConfig != null) && (paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
      {
        String str = (String)paramConfig.content_list.get(0);
        int i = paramConfig.version.get();
        paramConfig = (TroopManager)localQQAppInterface.getManager(51);
        int j = paramConfig.jdField_a_of_type_Int;
        if (i != j)
        {
          paramConfig.a(str, i);
          return;
        }
        if (!QLog.isColorLevel()) {
          return;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "received TROOP_SHARE_MSG_COMMENT_WHITELIST remote version: " + i + " | localVersion: " + j);
        return;
      }
    }
    catch (Exception paramConfig)
    {
      if (QLog.isColorLevel()) {
        QLog.e("SPLASH_ConfigServlet", 2, "received TROOP_SHARE_MSG_COMMENT_WHITELIST error", paramConfig);
      }
      paramConfig.printStackTrace();
      return;
    }
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "received TROOP_SHARE_MSG_COMMENT_WHITELIST content_list is empty");
    }
  }
  
  private void K(ConfigurationService.Config paramConfig)
  {
    boolean bool2 = true;
    for (;;)
    {
      try
      {
        localQQAppInterface = (QQAppInterface)getAppRuntime();
        i = paramConfig.version.get();
        j = SharedPreUtils.aa(localQQAppInterface.getApp(), localQQAppInterface.getAccount());
        if (QLog.isColorLevel()) {
          QLog.d("longText", 2, "received LongTextMsgConfig configVersion:" + i + " ,localVersion:" + j);
        }
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          paramConfig = (String)paramConfig.content_list.get(0);
          if (QLog.isColorLevel()) {
            QLog.d("longText", 2, "received LongTextMsgConfig configContent" + paramConfig);
          }
          if (i == j) {
            break label454;
          }
        }
      }
      catch (Exception paramConfig)
      {
        QQAppInterface localQQAppInterface;
        int i;
        int j;
        int k;
        boolean bool3;
        boolean bool4;
        if (QLog.isColorLevel())
        {
          QLog.e("SPLASH_ConfigServlet", 2, "received LongTextMsgConfig error", paramConfig);
          return;
          if (i == j)
          {
            if (QLog.isColorLevel()) {
              QLog.d("longText", 2, "received LongTextMsgConfig, content_list is empty, ignored because of SAME VERSION");
            }
          }
          else if (QLog.isColorLevel())
          {
            QLog.d("longText", 2, "received LongTextMsgConfig, content_list is empty, use default config");
            return;
            bool1 = false;
            continue;
            bool2 = true;
            bool1 = false;
            continue;
          }
        }
      }
      try
      {
        if (TextUtils.isEmpty(paramConfig)) {
          continue;
        }
        paramConfig = new JSONObject(paramConfig);
        if (paramConfig == null) {
          continue;
        }
        j = Integer.parseInt(paramConfig.optString("largeMsgOp"));
        if (j != 1) {
          continue;
        }
        bool1 = true;
      }
      catch (Exception paramConfig)
      {
        bool1 = false;
        continue;
      }
      try
      {
        k = Integer.parseInt(paramConfig.optString("msfPullFilter"));
        if (k != 0) {
          continue;
        }
        bool2 = false;
      }
      catch (Exception paramConfig)
      {
        continue;
        bool2 = true;
        continue;
      }
      try
      {
        if (QLog.isColorLevel()) {
          QLog.d("longText", 2, "received LongTextMsgConfig, parse content ltValue:" + j + ",ltSwitch:" + bool1 + ",mpfValue:" + k + ",mpfSwitch:" + bool2);
        }
        bool3 = bool1;
        bool4 = bool2;
        paramConfig = (LongTextMsgManager)localQQAppInterface.getManager(165);
        paramConfig.jdField_b_of_type_Boolean = true;
        paramConfig.c = bool3;
        localQQAppInterface.h = true;
        localQQAppInterface.i = bool4;
        SharedPreUtils.b(localQQAppInterface.getApp(), localQQAppInterface.getAccount(), i, bool3, bool4);
        return;
      }
      catch (Exception paramConfig)
      {
        continue;
      }
      bool4 = bool2;
      bool3 = bool1;
      if (QLog.isColorLevel())
      {
        QLog.d("longText", 2, "received LongTextMsgConfig, parse content error!", paramConfig);
        bool4 = bool2;
        bool3 = bool1;
      }
    }
    label454:
  }
  
  private void T(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    int j = SharedPreUtils.aS(BaseApplication.getContext(), jdField_a_of_type_JavaLangString);
    if (QLog.isColorLevel()) {
      QLog.i("SPLASH_ConfigServlet", 2, "handleZhituConfig: ,version: " + paramConfig.version.get() + "| localVersion: " + j);
    }
    if (i != j)
    {
      SharedPreUtils.ag(BaseApplication.getContext(), jdField_a_of_type_JavaLangString, i);
      paramConfig = a(paramConfig);
      if ((paramConfig != null) && (paramConfig.size() > 0))
      {
        paramConfig = paramConfig.iterator();
        if (paramConfig.hasNext())
        {
          Object localObject = (String)paramConfig.next();
          if (QLog.isColorLevel()) {
            QLog.i("SPLASH_ConfigServlet", 2, "handleZhituConfig: config_content =" + (String)localObject);
          }
          for (;;)
          {
            try
            {
              localObject = new JSONObject((String)localObject);
              if (((JSONObject)localObject).has("kMarioConfigEnable"))
              {
                i = ((JSONObject)localObject).getInt("kMarioConfigEnable");
                ZhituManager localZhituManager = ZhituManager.a(paramQQAppInterface);
                if (i != 1) {
                  break label254;
                }
                bool = true;
                localZhituManager.b(bool);
              }
              if (!((JSONObject)localObject).has("kMarioPageLen")) {
                break;
              }
              i = ((JSONObject)localObject).getInt("kMarioPageLen");
              ZhituManager.a(paramQQAppInterface).a(i);
            }
            catch (JSONException localJSONException)
            {
              localJSONException.printStackTrace();
            }
            break;
            label254:
            boolean bool = false;
          }
        }
      }
    }
    else if (QLog.isColorLevel())
    {
      QLog.i("SPLASH_ConfigServlet", 2, "handleZhituConfig:localVersiont == version ");
    }
  }
  
  private void U(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    a(paramQQAppInterface, paramConfig, "handleShortVideoMsgTailConfig", new absz(this, paramQQAppInterface));
  }
  
  private void V(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if ((paramQQAppInterface == null) || (paramConfig == null)) {}
    int i;
    do
    {
      return;
      i = paramConfig.version.get();
    } while (i == SharedPreUtils.f(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()));
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "handleWebViewUrlCheckConfigCmd start");
    }
    SharedPreUtils.f(paramQQAppInterface.getApplication(), i, paramQQAppInterface.getCurrentAccountUin());
    byte[] arrayOfByte;
    if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
    {
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramConfig != null) {
        if (paramConfig.compress.get() == 1)
        {
          arrayOfByte = OlympicUtil.a(paramConfig.content.get().toByteArray());
          if (arrayOfByte == null) {
            break label379;
          }
        }
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(arrayOfByte, "UTF-8");
        if (paramConfig == null) {
          break label301;
        }
        try
        {
          i = new JSONObject(paramConfig).optInt("switch", 0);
          paramQQAppInterface.getApplication().getSharedPreferences("webViewUrlCheckSp", 4).edit().putInt("webViewUrlCheckSwitchKey", i).commit();
          QLog.d("SPLASH_ConfigServlet", 2, "webView url check switch, result = " + i);
          return;
        }
        catch (Exception paramQQAppInterface)
        {
          QLog.e("SPLASH_ConfigServlet", 1, "webView url check exception e = ", paramQQAppInterface);
          return;
        }
      }
      catch (UnsupportedEncodingException paramConfig)
      {
        QLog.e("SPLASH_ConfigServlet", 1, "handleWebviewUrlCheckConfigCmd UnsupportedEncodingException e ", paramConfig);
        paramConfig = null;
        continue;
      }
      catch (OutOfMemoryError paramConfig)
      {
        QLog.e("SPLASH_ConfigServlet", 1, "handleWebviewUrlCheckConfigCmd OutOfMemoryError e ", paramConfig);
        System.gc();
        try
        {
          paramConfig = new String(arrayOfByte, "UTF-8");
        }
        catch (Throwable paramConfig)
        {
          QLog.e("SPLASH_ConfigServlet", 1, "handleWebviewUrlCheckConfigCmd Throwable ");
          paramConfig = null;
        }
        continue;
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label301:
      QLog.e("SPLASH_ConfigServlet", 1, "handleWebviewUrlCheckConfigCmd config_content = null");
      return;
      QLog.e("SPLASH_ConfigServlet", 1, "handleWebviewUrlCheckConfigCmd content = null");
      return;
      paramQQAppInterface.getApplication().getSharedPreferences("webViewUrlCheckSp", 4).edit().putInt("webViewUrlCheckSwitchKey", 0).commit();
      QLog.d("SPLASH_ConfigServlet", 2, "handleWebviewUrlCheckConfigCmd webview url check fail version: " + i);
      return;
      label379:
      paramConfig = null;
    }
  }
  
  private void W(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int i;
      Object localObject;
      try
      {
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          i = 0;
          if (i < paramConfig.content_list.size())
          {
            localObject = ((String)paramConfig.content_list.get(i)).trim();
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 96,content: " + (String)localObject + ",version: " + paramConfig.version.get());
            }
            int j = paramConfig.version.get();
            if ((j == SharedPreUtils.a(paramQQAppInterface.getApp(), "readinjoy_interested_push_config", jdField_a_of_type_JavaLangString)) || (TextUtils.isEmpty((CharSequence)localObject))) {
              break label412;
            }
            localObject = ((String)localObject).split("=");
            if (localObject.length >= 2)
            {
              if (!"xqh_insert_into_feeds".equals(localObject[0])) {
                continue;
              }
              ReadInJoyHelper.c(paramQQAppInterface, "1".equals(localObject[1]));
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "update KANDIAN_INTERESTED_PUSH_CONFiG config , switch : " + "1".equals(localObject[1]));
              }
            }
            SharedPreUtils.a(paramQQAppInterface.getApp(), "readinjoy_interested_push_config", jdField_a_of_type_JavaLangString, j);
            break label469;
            if ("simple_switch_fm".equals(localObject[0]))
            {
              ReadInJoyHelper.c(paramQQAppInterface, "1".equals(localObject[1]));
              if (!QLog.isColorLevel()) {
                continue;
              }
              QLog.d("SPLASH_ConfigServlet", 2, "update READINJOY_SIMPLE_SWITCH_FM config , switch : " + "1".equals(localObject[1]));
              continue;
            }
          }
          else
          {
            return;
          }
        }
      }
      catch (Exception paramQQAppInterface)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServlet", 2, "received readinjoy interested push config error,cmd : 96" + paramQQAppInterface.toString());
        }
      }
      label412:
      do
      {
        if (!"simple_force_report_once".equals(localObject[0])) {
          break;
        }
        FeManager.a(paramQQAppInterface, "1".equals(localObject[1]));
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "update simple_force_report_once config , switch : " + "1".equals(localObject[1]));
        break;
        if (!QLog.isColorLevel()) {
          break label469;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "received KANDIAN_INTERESTED_PUSH_CONFiG IGNORE THIS ACTION  because of SAME VERSION ");
        break label469;
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 96,content_list is empty ,version: " + paramConfig.version.get());
      return;
      label469:
      i += 1;
    }
  }
  
  private void X(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int i;
      try
      {
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          i = 0;
          if (i < paramConfig.content_list.size())
          {
            Object localObject = ((String)paramConfig.content_list.get(i)).trim();
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServletQ.qqstory.TAG_NOW_ENTRANCE_ACTION_CONFIG", 2, "receiveAllConfigs|type: 118,content: " + (String)localObject + ",version: " + paramConfig.version.get());
            }
            int k = paramConfig.version.get();
            if (k != SharedPreUtils.a(paramQQAppInterface.getApp(), "now_entrance_action_version", jdField_a_of_type_JavaLangString))
            {
              boolean bool = TextUtils.isEmpty((CharSequence)localObject);
              if (!bool) {
                try
                {
                  localObject = new JSONArray((String)localObject);
                  int m = ((JSONArray)localObject).length();
                  int j = 0;
                  if (j < m)
                  {
                    JSONObject localJSONObject = ((JSONArray)localObject).getJSONObject(j);
                    SharedPreUtils.c(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), localJSONObject.optInt("bid"), localJSONObject.optInt("actionType"));
                    j += 1;
                    continue;
                  }
                  if (!QLog.isColorLevel()) {
                    break label341;
                  }
                }
                catch (JSONException localJSONException)
                {
                  if (QLog.isColorLevel()) {
                    QLog.e("SPLASH_ConfigServletQ.qqstory.TAG_NOW_ENTRANCE_ACTION_CONFIG", 2, "received JSONException ");
                  }
                  SharedPreUtils.a(paramQQAppInterface.getApp(), "now_entrance_action_version", jdField_a_of_type_JavaLangString, k);
                }
              }
            }
            QLog.d("SPLASH_ConfigServletQ.qqstory.TAG_NOW_ENTRANCE_ACTION_CONFIG", 2, "received CHNAGE_MACHINE_CONFIG IGNORE THIS ACTION  because of SAME VERSION ");
          }
        }
      }
      catch (Exception paramQQAppInterface)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServletQ.qqstory.TAG_NOW_ENTRANCE_ACTION_CONFIG", 2, "received change machine config error,cmd : 118" + paramQQAppInterface.toString());
        }
      }
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("SPLASH_ConfigServletQ.qqstory.TAG_NOW_ENTRANCE_ACTION_CONFIG", 2, "receiveAllConfigs|type: 118,content_list is empty ,version: " + paramConfig.version.get());
      return;
      label341:
      i += 1;
    }
  }
  
  private void Y(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int i;
      try
      {
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          i = 0;
          if (i < paramConfig.content_list.size())
          {
            Object localObject = ((String)paramConfig.content_list.get(i)).trim();
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet.troop_common_config", 2, "receiveAllConfigs|type: 142,content: " + (String)localObject + ",version: " + paramConfig.version.get());
            }
            int j = paramConfig.version.get();
            if (j == SharedPreUtils.a(paramQQAppInterface.getApp(), "troop_common_config_version", jdField_a_of_type_JavaLangString)) {
              break label625;
            }
            boolean bool = TextUtils.isEmpty((CharSequence)localObject);
            if (bool) {
              break label625;
            }
            try
            {
              JSONObject localJSONObject = new JSONObject((String)localObject);
              SharedPreUtils.d(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), localJSONObject.optString("hot_chat_link"));
              SharedPreUtils.B(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), localJSONObject.optInt("aio_post_tab_plugin"));
              ((TroopRobotManager)paramQQAppInterface.getManager(202)).a(localJSONObject);
              ((LbsInfoReportManager)paramQQAppInterface.getManager(125)).a(localJSONObject);
              SharedPreUtils.A(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), localJSONObject.optInt("create_troop_max_invite_num"));
              String str1 = localJSONObject.optString("nearby_faceVideo_show");
              String str2 = localJSONObject.optString("nearby_faceVideo_LV");
              String str3 = localJSONObject.optString("nearby_heart_switch");
              SharedPreferences localSharedPreferences = BaseApplicationImpl.getContext().getSharedPreferences("nearby_enters", 4);
              localSharedPreferences.edit().putString("config_content", (String)localObject).commit();
              localSharedPreferences.edit().putString("nearby_faceVideo_show", str1).commit();
              localSharedPreferences.edit().putString("nearby_heart_switch", str3).commit();
              localSharedPreferences.edit().putString("nearby_faceVideo_LV", str2).commit();
              localObject = localJSONObject.optJSONObject("face_score_enter_config");
              if (!TextUtils.isEmpty(((JSONObject)localObject).optString("title"))) {
                localSharedPreferences.edit().putString("face_title", ((JSONObject)localObject).optString("title")).commit();
              }
              if (!TextUtils.isEmpty(((JSONObject)localObject).optString("detail_default"))) {
                localSharedPreferences.edit().putString("face_detail_default", ((JSONObject)localObject).optString("detail_default")).commit();
              }
              if (!TextUtils.isEmpty(((JSONObject)localObject).optString("jump_url"))) {
                localSharedPreferences.edit().putString("face_jump_url", ((JSONObject)localObject).optString("jump_url")).commit();
              }
              if (!TextUtils.isEmpty(((JSONObject)localObject).optString("detail_num"))) {
                localSharedPreferences.edit().putString("face_detail_num", ((JSONObject)localObject).optString("detail_num")).commit();
              }
            }
            catch (JSONException localJSONException)
            {
              if (!QLog.isColorLevel()) {
                continue;
              }
              QLog.e("SPLASH_ConfigServlet.troop_common_config", 2, "received JSONException ");
              continue;
            }
            SharedPreUtils.a(paramQQAppInterface.getApp(), "troop_common_config_version", jdField_a_of_type_JavaLangString, j);
          }
        }
      }
      catch (Exception paramQQAppInterface)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServlet.troop_common_config", 2, "received change machine config error,cmd : 142" + paramQQAppInterface.toString());
        }
      }
      label625:
      do
      {
        return;
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServlet.troop_common_config", 2, "received CHNAGE_MACHINE_CONFIG IGNORE THIS ACTION  because of SAME VERSION ");
        break;
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServlet.troop_common_config", 2, "receiveAllConfigs|type: 142,content_list is empty ,version: " + paramConfig.version.get());
      return;
      i += 1;
    }
  }
  
  private void Z(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int i;
      try
      {
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          i = 0;
          if (i < paramConfig.content_list.size())
          {
            Object localObject = ((String)paramConfig.content_list.get(i)).trim();
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "receiveAllConfigs|type: 201,content: " + (String)localObject + ",version: " + paramConfig.version.get());
            }
            int j = paramConfig.version.get();
            if (j != SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_config_version", jdField_a_of_type_JavaLangString))
            {
              boolean bool = TextUtils.isEmpty((CharSequence)localObject);
              if (!bool) {
                try
                {
                  localObject = new JSONObject((String)localObject);
                  SharedPreUtils.a(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), (JSONObject)localObject);
                  SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_config_version", jdField_a_of_type_JavaLangString, j);
                }
                catch (JSONException localJSONException)
                {
                  if (!QLog.isColorLevel()) {
                    continue;
                  }
                  QLog.e("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "received JSONException ");
                  continue;
                }
              }
            }
          }
          else
          {
            return;
          }
        }
      }
      catch (Exception paramQQAppInterface)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "received change machine config error,cmd : 201" + paramQQAppInterface.toString());
        }
      }
      while (QLog.isColorLevel())
      {
        QLog.d("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "received CHNAGE_MACHINE_CONFIG IGNORE THIS ACTION  because of SAME VERSION ");
        break;
        if (QLog.isColorLevel())
        {
          QLog.d("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "receiveAllConfigs|type: 201,content_list is empty ,version: " + paramConfig.version.get());
          return;
        }
      }
      i += 1;
    }
  }
  
  private float a(float paramFloat)
  {
    return paramFloat / (50.0F * 2.0F) * (float)DeviceInfoUtil.h();
  }
  
  private float a(float paramFloat1, float paramFloat2)
  {
    return (50.0F + paramFloat1) / (50.0F * 2.0F) * paramFloat2;
  }
  
  private float a(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    return paramFloat2 / 2.0F - paramFloat1 * paramFloat3 / (50.0F * 2.0F);
  }
  
  private int a(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = 0;
    ShortVideoResourceManager localShortVideoResourceManager = paramQQAppInterface.a();
    int j = ShortVideoResourceManager.a();
    int k = paramConfig.version.get();
    if (QLog.isColorLevel()) {
      QLog.d("ShortVideoResourceManager", 2, "receiveAllConfigs[handleShortVideoResourceConfig]|received remote version: " + k + " | localVersion: " + j);
    }
    if (k != j)
    {
      if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
        break label259;
      }
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramConfig == null) {
        break label240;
      }
      if (paramConfig.compress.get() != 1) {
        break label226;
      }
      paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
      if (paramConfig == null) {
        break label205;
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        i = localShortVideoResourceManager.a(paramQQAppInterface.getApp(), paramConfig, k);
        return i;
      }
      catch (Throwable paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs[handleShortVideoResourceConfig]|Throwable:" + paramConfig.getMessage());
        }
        paramConfig = "";
        continue;
      }
      label205:
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs[handleShortVideoResourceConfig]|inflateConfigString error!");
      }
      paramConfig = "";
      continue;
      label226:
      paramConfig = paramConfig.content.get().toStringUtf8();
    }
    label240:
    if (QLog.isColorLevel()) {
      QLog.d("ShortVideoResourceManager", 2, "receiveAllConfigs[handleShortVideoResourceConfig]| content==null");
    }
    return -125;
    label259:
    if (QLog.isColorLevel()) {
      QLog.d("ShortVideoResourceManager", 2, "receiveAllConfigs[handleShortVideoResourceConfig]| msg_content_list is empty ,version: " + k + ",localVersion:" + j);
    }
    return -125;
  }
  
  private static int a(String paramString1, String paramString2)
  {
    SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("MM-dd");
    try
    {
      long l = (localSimpleDateFormat.parse(paramString2).getTime() - localSimpleDateFormat.parse(paramString1).getTime()) / 86400000L;
      return (int)l;
    }
    catch (ParseException paramString1)
    {
      paramString1.printStackTrace();
    }
    return -1;
  }
  
  private ARMapConfig a(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    Object localObject = null;
    int i = ((ARMapConfigManager)paramQQAppInterface.getManager(189)).a();
    int j = paramConfig.version.get();
    QLog.d("SPLASH_ConfigServlet", 1, "handleGetAPMapConfig, version:" + j + ",localVersion:" + i);
    paramQQAppInterface = (ARMapConfigManager)paramQQAppInterface.getManager(189);
    paramQQAppInterface = localObject;
    if (i != j)
    {
      if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
        break label320;
      }
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      paramQQAppInterface = localObject;
      if (paramConfig != null)
      {
        if (paramConfig.compress.get() != 1) {
          break label306;
        }
        paramQQAppInterface = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (paramQQAppInterface == null) {
          break label286;
        }
      }
    }
    for (;;)
    {
      try
      {
        paramQQAppInterface = new String(paramQQAppInterface, "UTF-8");
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "handleGetAPMapConfig,xmlContent:" + paramQQAppInterface);
        }
        paramConfig = ARMapConfig.parse(paramQQAppInterface);
        paramQQAppInterface = paramConfig;
        if (paramConfig != null)
        {
          paramConfig.version = j;
          paramQQAppInterface = paramConfig;
        }
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "handleGetAPMapConfig, arMapConfig = " + paramQQAppInterface);
        }
        return paramQQAppInterface;
      }
      catch (Throwable paramQQAppInterface)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "Throwable:" + paramQQAppInterface.getMessage());
        }
        paramQQAppInterface = null;
        continue;
      }
      label286:
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "inflateConfigString error!");
      }
      paramQQAppInterface = null;
      continue;
      label306:
      paramQQAppInterface = paramConfig.content.get().toStringUtf8();
      continue;
      label320:
      ARMapConfig.deleteLocalConfig(jdField_a_of_type_JavaLangString);
      paramQQAppInterface = localObject;
      if (QLog.isColorLevel())
      {
        QLog.d("SPLASH_ConfigServlet", 2, "handleGetAPMapConfig, msg_content_list is null");
        paramQQAppInterface = localObject;
      }
    }
  }
  
  private QQOperationViopTipTask a(String paramString)
  {
    return a(paramString, new QQOperationViopTipTask());
  }
  
  /* Error */
  private QQOperationViopTipTask a(String paramString, QQOperationViopTipTask paramQQOperationViopTipTask)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_3
    //   2: invokestatic 425	javax/xml/parsers/DocumentBuilderFactory:newInstance	()Ljavax/xml/parsers/DocumentBuilderFactory;
    //   5: invokevirtual 429	javax/xml/parsers/DocumentBuilderFactory:newDocumentBuilder	()Ljavax/xml/parsers/DocumentBuilder;
    //   8: new 431	java/io/ByteArrayInputStream
    //   11: dup
    //   12: aload_1
    //   13: ldc_w 433
    //   16: invokevirtual 437	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   19: invokespecial 440	java/io/ByteArrayInputStream:<init>	([B)V
    //   22: invokevirtual 446	javax/xml/parsers/DocumentBuilder:parse	(Ljava/io/InputStream;)Lorg/w3c/dom/Document;
    //   25: astore_1
    //   26: aload_1
    //   27: ldc_w 1225
    //   30: invokeinterface 454 2 0
    //   35: astore 4
    //   37: aload 4
    //   39: ifnull +1254 -> 1293
    //   42: aload 4
    //   44: invokeinterface 484 1 0
    //   49: ifle +1244 -> 1293
    //   52: aload_1
    //   53: ldc_w 1227
    //   56: invokeinterface 454 2 0
    //   61: astore 4
    //   63: aload 4
    //   65: ifnull +45 -> 110
    //   68: aload 4
    //   70: invokeinterface 484 1 0
    //   75: ifle +35 -> 110
    //   78: aload_2
    //   79: aload_1
    //   80: ldc_w 1227
    //   83: invokeinterface 454 2 0
    //   88: iconst_0
    //   89: invokeinterface 460 2 0
    //   94: invokeinterface 466 1 0
    //   99: invokeinterface 469 1 0
    //   104: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   107: putfield 1230	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:taskid	I
    //   110: aload_1
    //   111: ldc_w 1232
    //   114: invokeinterface 454 2 0
    //   119: astore 4
    //   121: aload 4
    //   123: ifnull +45 -> 168
    //   126: aload 4
    //   128: invokeinterface 484 1 0
    //   133: ifle +35 -> 168
    //   136: aload_2
    //   137: aload_1
    //   138: ldc_w 1232
    //   141: invokeinterface 454 2 0
    //   146: iconst_0
    //   147: invokeinterface 460 2 0
    //   152: invokeinterface 466 1 0
    //   157: invokeinterface 469 1 0
    //   162: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   165: putfield 1235	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:limitDayAIOCount	I
    //   168: aload_1
    //   169: ldc_w 1237
    //   172: invokeinterface 454 2 0
    //   177: astore 4
    //   179: aload 4
    //   181: ifnull +45 -> 226
    //   184: aload 4
    //   186: invokeinterface 484 1 0
    //   191: ifle +35 -> 226
    //   194: aload_2
    //   195: aload_1
    //   196: ldc_w 1237
    //   199: invokeinterface 454 2 0
    //   204: iconst_0
    //   205: invokeinterface 460 2 0
    //   210: invokeinterface 466 1 0
    //   215: invokeinterface 469 1 0
    //   220: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   223: putfield 1240	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:limitDayAIOShowCount	I
    //   226: aload_1
    //   227: ldc_w 1242
    //   230: invokeinterface 454 2 0
    //   235: astore 4
    //   237: aload 4
    //   239: ifnull +45 -> 284
    //   242: aload 4
    //   244: invokeinterface 484 1 0
    //   249: ifle +35 -> 284
    //   252: aload_2
    //   253: aload_1
    //   254: ldc_w 1242
    //   257: invokeinterface 454 2 0
    //   262: iconst_0
    //   263: invokeinterface 460 2 0
    //   268: invokeinterface 466 1 0
    //   273: invokeinterface 469 1 0
    //   278: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   281: putfield 1245	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:limitTotalAIOCount	I
    //   284: aload_1
    //   285: ldc_w 1247
    //   288: invokeinterface 454 2 0
    //   293: astore 4
    //   295: aload 4
    //   297: ifnull +45 -> 342
    //   300: aload 4
    //   302: invokeinterface 484 1 0
    //   307: ifle +35 -> 342
    //   310: aload_2
    //   311: aload_1
    //   312: ldc_w 1247
    //   315: invokeinterface 454 2 0
    //   320: iconst_0
    //   321: invokeinterface 460 2 0
    //   326: invokeinterface 466 1 0
    //   331: invokeinterface 469 1 0
    //   336: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   339: putfield 1250	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:limitTotalShowCount	I
    //   342: aload_1
    //   343: ldc_w 1252
    //   346: invokeinterface 454 2 0
    //   351: astore 4
    //   353: aload 4
    //   355: ifnull +42 -> 397
    //   358: aload 4
    //   360: invokeinterface 484 1 0
    //   365: ifle +32 -> 397
    //   368: aload_2
    //   369: aload_1
    //   370: ldc_w 1252
    //   373: invokeinterface 454 2 0
    //   378: iconst_0
    //   379: invokeinterface 460 2 0
    //   384: invokeinterface 466 1 0
    //   389: invokeinterface 469 1 0
    //   394: invokevirtual 1255	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:setKeywordString	(Ljava/lang/String;)V
    //   397: invokestatic 177	com/tencent/qphone/base/util/QLog:isDevelopLevel	()Z
    //   400: ifeq +33 -> 433
    //   403: ldc_w 1257
    //   406: iconst_4
    //   407: new 92	java/lang/StringBuilder
    //   410: dup
    //   411: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   414: ldc_w 1259
    //   417: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   420: aload_2
    //   421: invokevirtual 1263	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:getKeywordList	()Ljava/util/ArrayList;
    //   424: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   427: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   430: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   433: aload_1
    //   434: ldc_w 1265
    //   437: invokeinterface 454 2 0
    //   442: astore 4
    //   444: aload 4
    //   446: ifnull +42 -> 488
    //   449: aload 4
    //   451: invokeinterface 484 1 0
    //   456: ifle +32 -> 488
    //   459: aload_2
    //   460: aload_1
    //   461: ldc_w 1265
    //   464: invokeinterface 454 2 0
    //   469: iconst_0
    //   470: invokeinterface 460 2 0
    //   475: invokeinterface 466 1 0
    //   480: invokeinterface 469 1 0
    //   485: invokevirtual 1268	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:setBeginTime	(Ljava/lang/String;)V
    //   488: aload_1
    //   489: ldc_w 1270
    //   492: invokeinterface 454 2 0
    //   497: astore 4
    //   499: aload 4
    //   501: ifnull +42 -> 543
    //   504: aload 4
    //   506: invokeinterface 484 1 0
    //   511: ifle +32 -> 543
    //   514: aload_2
    //   515: aload_1
    //   516: ldc_w 1270
    //   519: invokeinterface 454 2 0
    //   524: iconst_0
    //   525: invokeinterface 460 2 0
    //   530: invokeinterface 466 1 0
    //   535: invokeinterface 469 1 0
    //   540: invokevirtual 1273	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:setEndTime	(Ljava/lang/String;)V
    //   543: aload_1
    //   544: ldc_w 1275
    //   547: invokeinterface 454 2 0
    //   552: astore 4
    //   554: aload 4
    //   556: ifnull +50 -> 606
    //   559: aload 4
    //   561: invokeinterface 484 1 0
    //   566: ifle +40 -> 606
    //   569: aload_1
    //   570: ldc_w 1275
    //   573: invokeinterface 454 2 0
    //   578: iconst_0
    //   579: invokeinterface 460 2 0
    //   584: invokeinterface 466 1 0
    //   589: invokeinterface 469 1 0
    //   594: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   597: iconst_1
    //   598: if_icmpne +697 -> 1295
    //   601: aload_2
    //   602: iload_3
    //   603: putfield 1278	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:uinType	I
    //   606: aload_1
    //   607: ldc_w 1280
    //   610: invokeinterface 454 2 0
    //   615: astore 4
    //   617: aload 4
    //   619: ifnull +197 -> 816
    //   622: aload 4
    //   624: invokeinterface 484 1 0
    //   629: ifle +187 -> 816
    //   632: aload_1
    //   633: ldc_w 1280
    //   636: invokeinterface 454 2 0
    //   641: iconst_0
    //   642: invokeinterface 460 2 0
    //   647: checkcast 1282	org/w3c/dom/Element
    //   650: ldc_w 1284
    //   653: invokeinterface 1285 2 0
    //   658: astore 4
    //   660: aload 4
    //   662: ifnull +62 -> 724
    //   665: aload 4
    //   667: invokeinterface 484 1 0
    //   672: ifle +52 -> 724
    //   675: aload_2
    //   676: aload_1
    //   677: ldc_w 1280
    //   680: invokeinterface 454 2 0
    //   685: iconst_0
    //   686: invokeinterface 460 2 0
    //   691: checkcast 1282	org/w3c/dom/Element
    //   694: ldc_w 1284
    //   697: invokeinterface 1285 2 0
    //   702: iconst_0
    //   703: invokeinterface 460 2 0
    //   708: invokeinterface 466 1 0
    //   713: invokeinterface 469 1 0
    //   718: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   721: putfield 1288	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:frequencyTime	I
    //   724: aload_1
    //   725: ldc_w 1280
    //   728: invokeinterface 454 2 0
    //   733: iconst_0
    //   734: invokeinterface 460 2 0
    //   739: checkcast 1282	org/w3c/dom/Element
    //   742: ldc_w 1290
    //   745: invokeinterface 1285 2 0
    //   750: astore 4
    //   752: aload 4
    //   754: ifnull +62 -> 816
    //   757: aload 4
    //   759: invokeinterface 484 1 0
    //   764: ifle +52 -> 816
    //   767: aload_2
    //   768: aload_1
    //   769: ldc_w 1280
    //   772: invokeinterface 454 2 0
    //   777: iconst_0
    //   778: invokeinterface 460 2 0
    //   783: checkcast 1282	org/w3c/dom/Element
    //   786: ldc_w 1290
    //   789: invokeinterface 1285 2 0
    //   794: iconst_0
    //   795: invokeinterface 460 2 0
    //   800: invokeinterface 466 1 0
    //   805: invokeinterface 469 1 0
    //   810: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   813: putfield 1293	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:frequencyMessage	I
    //   816: aload_1
    //   817: ldc_w 1295
    //   820: invokeinterface 454 2 0
    //   825: astore 4
    //   827: aload 4
    //   829: ifnull +464 -> 1293
    //   832: aload 4
    //   834: invokeinterface 484 1 0
    //   839: ifle +454 -> 1293
    //   842: aload_1
    //   843: ldc_w 1295
    //   846: invokeinterface 454 2 0
    //   851: iconst_0
    //   852: invokeinterface 460 2 0
    //   857: checkcast 1282	org/w3c/dom/Element
    //   860: ldc_w 1296
    //   863: invokeinterface 1285 2 0
    //   868: astore 4
    //   870: aload 4
    //   872: ifnull +62 -> 934
    //   875: aload 4
    //   877: invokeinterface 484 1 0
    //   882: ifle +52 -> 934
    //   885: aload_2
    //   886: aload_1
    //   887: ldc_w 1295
    //   890: invokeinterface 454 2 0
    //   895: iconst_0
    //   896: invokeinterface 460 2 0
    //   901: checkcast 1282	org/w3c/dom/Element
    //   904: ldc_w 1296
    //   907: invokeinterface 1285 2 0
    //   912: iconst_0
    //   913: invokeinterface 460 2 0
    //   918: invokeinterface 466 1 0
    //   923: invokeinterface 469 1 0
    //   928: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   931: putfield 1299	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:tipType	I
    //   934: aload_1
    //   935: ldc_w 1295
    //   938: invokeinterface 454 2 0
    //   943: iconst_0
    //   944: invokeinterface 460 2 0
    //   949: checkcast 1282	org/w3c/dom/Element
    //   952: ldc_w 1290
    //   955: invokeinterface 1285 2 0
    //   960: astore 4
    //   962: aload 4
    //   964: ifnull +59 -> 1023
    //   967: aload 4
    //   969: invokeinterface 484 1 0
    //   974: ifle +49 -> 1023
    //   977: aload_2
    //   978: aload_1
    //   979: ldc_w 1295
    //   982: invokeinterface 454 2 0
    //   987: iconst_0
    //   988: invokeinterface 460 2 0
    //   993: checkcast 1282	org/w3c/dom/Element
    //   996: ldc_w 1290
    //   999: invokeinterface 1285 2 0
    //   1004: iconst_0
    //   1005: invokeinterface 460 2 0
    //   1010: invokeinterface 466 1 0
    //   1015: invokeinterface 469 1 0
    //   1020: putfield 1302	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:adwords	Ljava/lang/String;
    //   1023: aload_1
    //   1024: ldc_w 1295
    //   1027: invokeinterface 454 2 0
    //   1032: iconst_0
    //   1033: invokeinterface 460 2 0
    //   1038: checkcast 1282	org/w3c/dom/Element
    //   1041: ldc_w 1304
    //   1044: invokeinterface 1285 2 0
    //   1049: astore 4
    //   1051: aload 4
    //   1053: ifnull +62 -> 1115
    //   1056: aload 4
    //   1058: invokeinterface 484 1 0
    //   1063: ifle +52 -> 1115
    //   1066: aload_2
    //   1067: aload_1
    //   1068: ldc_w 1295
    //   1071: invokeinterface 454 2 0
    //   1076: iconst_0
    //   1077: invokeinterface 460 2 0
    //   1082: checkcast 1282	org/w3c/dom/Element
    //   1085: ldc_w 1304
    //   1088: invokeinterface 1285 2 0
    //   1093: iconst_0
    //   1094: invokeinterface 460 2 0
    //   1099: invokeinterface 466 1 0
    //   1104: invokeinterface 469 1 0
    //   1109: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   1112: putfield 1307	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:linkOffset	I
    //   1115: aload_1
    //   1116: ldc_w 1295
    //   1119: invokeinterface 454 2 0
    //   1124: iconst_0
    //   1125: invokeinterface 460 2 0
    //   1130: checkcast 1282	org/w3c/dom/Element
    //   1133: ldc_w 1309
    //   1136: invokeinterface 1285 2 0
    //   1141: astore 4
    //   1143: aload 4
    //   1145: ifnull +59 -> 1204
    //   1148: aload 4
    //   1150: invokeinterface 484 1 0
    //   1155: ifle +49 -> 1204
    //   1158: aload_2
    //   1159: aload_1
    //   1160: ldc_w 1295
    //   1163: invokeinterface 454 2 0
    //   1168: iconst_0
    //   1169: invokeinterface 460 2 0
    //   1174: checkcast 1282	org/w3c/dom/Element
    //   1177: ldc_w 1309
    //   1180: invokeinterface 1285 2 0
    //   1185: iconst_0
    //   1186: invokeinterface 460 2 0
    //   1191: invokeinterface 466 1 0
    //   1196: invokeinterface 469 1 0
    //   1201: putfield 1312	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:clickableWord	Ljava/lang/String;
    //   1204: aload_1
    //   1205: ldc_w 1295
    //   1208: invokeinterface 454 2 0
    //   1213: iconst_0
    //   1214: invokeinterface 460 2 0
    //   1219: checkcast 1282	org/w3c/dom/Element
    //   1222: ldc_w 1314
    //   1225: invokeinterface 1285 2 0
    //   1230: astore 4
    //   1232: aload 4
    //   1234: ifnull +59 -> 1293
    //   1237: aload 4
    //   1239: invokeinterface 484 1 0
    //   1244: ifle +49 -> 1293
    //   1247: aload_2
    //   1248: aload_1
    //   1249: ldc_w 1295
    //   1252: invokeinterface 454 2 0
    //   1257: iconst_0
    //   1258: invokeinterface 460 2 0
    //   1263: checkcast 1282	org/w3c/dom/Element
    //   1266: ldc_w 1314
    //   1269: invokeinterface 1285 2 0
    //   1274: iconst_0
    //   1275: invokeinterface 460 2 0
    //   1280: invokeinterface 466 1 0
    //   1285: invokeinterface 469 1 0
    //   1290: putfield 1316	com/tencent/mobileqq/config/operation/QQOperationViopTipTask:url	Ljava/lang/String;
    //   1293: aload_2
    //   1294: areturn
    //   1295: sipush 3000
    //   1298: istore_3
    //   1299: goto -698 -> 601
    //   1302: astore_1
    //   1303: aload_1
    //   1304: invokevirtual 1317	javax/xml/parsers/ParserConfigurationException:printStackTrace	()V
    //   1307: aconst_null
    //   1308: areturn
    //   1309: astore_1
    //   1310: aload_1
    //   1311: invokevirtual 1318	org/xml/sax/SAXException:printStackTrace	()V
    //   1314: goto -7 -> 1307
    //   1317: astore_1
    //   1318: aload_1
    //   1319: invokevirtual 1319	java/io/IOException:printStackTrace	()V
    //   1322: goto -15 -> 1307
    //   1325: astore_1
    //   1326: aload_1
    //   1327: invokevirtual 605	java/lang/Exception:printStackTrace	()V
    //   1330: goto -23 -> 1307
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1333	0	this	ConfigServlet
    //   0	1333	1	paramString	String
    //   0	1333	2	paramQQOperationViopTipTask	QQOperationViopTipTask
    //   1	1298	3	i	int
    //   35	1203	4	localNodeList	NodeList
    // Exception table:
    //   from	to	target	type
    //   2	37	1302	javax/xml/parsers/ParserConfigurationException
    //   42	63	1302	javax/xml/parsers/ParserConfigurationException
    //   68	110	1302	javax/xml/parsers/ParserConfigurationException
    //   110	121	1302	javax/xml/parsers/ParserConfigurationException
    //   126	168	1302	javax/xml/parsers/ParserConfigurationException
    //   168	179	1302	javax/xml/parsers/ParserConfigurationException
    //   184	226	1302	javax/xml/parsers/ParserConfigurationException
    //   226	237	1302	javax/xml/parsers/ParserConfigurationException
    //   242	284	1302	javax/xml/parsers/ParserConfigurationException
    //   284	295	1302	javax/xml/parsers/ParserConfigurationException
    //   300	342	1302	javax/xml/parsers/ParserConfigurationException
    //   342	353	1302	javax/xml/parsers/ParserConfigurationException
    //   358	397	1302	javax/xml/parsers/ParserConfigurationException
    //   397	433	1302	javax/xml/parsers/ParserConfigurationException
    //   433	444	1302	javax/xml/parsers/ParserConfigurationException
    //   449	488	1302	javax/xml/parsers/ParserConfigurationException
    //   488	499	1302	javax/xml/parsers/ParserConfigurationException
    //   504	543	1302	javax/xml/parsers/ParserConfigurationException
    //   543	554	1302	javax/xml/parsers/ParserConfigurationException
    //   559	601	1302	javax/xml/parsers/ParserConfigurationException
    //   601	606	1302	javax/xml/parsers/ParserConfigurationException
    //   606	617	1302	javax/xml/parsers/ParserConfigurationException
    //   622	660	1302	javax/xml/parsers/ParserConfigurationException
    //   665	724	1302	javax/xml/parsers/ParserConfigurationException
    //   724	752	1302	javax/xml/parsers/ParserConfigurationException
    //   757	816	1302	javax/xml/parsers/ParserConfigurationException
    //   816	827	1302	javax/xml/parsers/ParserConfigurationException
    //   832	870	1302	javax/xml/parsers/ParserConfigurationException
    //   875	934	1302	javax/xml/parsers/ParserConfigurationException
    //   934	962	1302	javax/xml/parsers/ParserConfigurationException
    //   967	1023	1302	javax/xml/parsers/ParserConfigurationException
    //   1023	1051	1302	javax/xml/parsers/ParserConfigurationException
    //   1056	1115	1302	javax/xml/parsers/ParserConfigurationException
    //   1115	1143	1302	javax/xml/parsers/ParserConfigurationException
    //   1148	1204	1302	javax/xml/parsers/ParserConfigurationException
    //   1204	1232	1302	javax/xml/parsers/ParserConfigurationException
    //   1237	1293	1302	javax/xml/parsers/ParserConfigurationException
    //   2	37	1309	org/xml/sax/SAXException
    //   42	63	1309	org/xml/sax/SAXException
    //   68	110	1309	org/xml/sax/SAXException
    //   110	121	1309	org/xml/sax/SAXException
    //   126	168	1309	org/xml/sax/SAXException
    //   168	179	1309	org/xml/sax/SAXException
    //   184	226	1309	org/xml/sax/SAXException
    //   226	237	1309	org/xml/sax/SAXException
    //   242	284	1309	org/xml/sax/SAXException
    //   284	295	1309	org/xml/sax/SAXException
    //   300	342	1309	org/xml/sax/SAXException
    //   342	353	1309	org/xml/sax/SAXException
    //   358	397	1309	org/xml/sax/SAXException
    //   397	433	1309	org/xml/sax/SAXException
    //   433	444	1309	org/xml/sax/SAXException
    //   449	488	1309	org/xml/sax/SAXException
    //   488	499	1309	org/xml/sax/SAXException
    //   504	543	1309	org/xml/sax/SAXException
    //   543	554	1309	org/xml/sax/SAXException
    //   559	601	1309	org/xml/sax/SAXException
    //   601	606	1309	org/xml/sax/SAXException
    //   606	617	1309	org/xml/sax/SAXException
    //   622	660	1309	org/xml/sax/SAXException
    //   665	724	1309	org/xml/sax/SAXException
    //   724	752	1309	org/xml/sax/SAXException
    //   757	816	1309	org/xml/sax/SAXException
    //   816	827	1309	org/xml/sax/SAXException
    //   832	870	1309	org/xml/sax/SAXException
    //   875	934	1309	org/xml/sax/SAXException
    //   934	962	1309	org/xml/sax/SAXException
    //   967	1023	1309	org/xml/sax/SAXException
    //   1023	1051	1309	org/xml/sax/SAXException
    //   1056	1115	1309	org/xml/sax/SAXException
    //   1115	1143	1309	org/xml/sax/SAXException
    //   1148	1204	1309	org/xml/sax/SAXException
    //   1204	1232	1309	org/xml/sax/SAXException
    //   1237	1293	1309	org/xml/sax/SAXException
    //   2	37	1317	java/io/IOException
    //   42	63	1317	java/io/IOException
    //   68	110	1317	java/io/IOException
    //   110	121	1317	java/io/IOException
    //   126	168	1317	java/io/IOException
    //   168	179	1317	java/io/IOException
    //   184	226	1317	java/io/IOException
    //   226	237	1317	java/io/IOException
    //   242	284	1317	java/io/IOException
    //   284	295	1317	java/io/IOException
    //   300	342	1317	java/io/IOException
    //   342	353	1317	java/io/IOException
    //   358	397	1317	java/io/IOException
    //   397	433	1317	java/io/IOException
    //   433	444	1317	java/io/IOException
    //   449	488	1317	java/io/IOException
    //   488	499	1317	java/io/IOException
    //   504	543	1317	java/io/IOException
    //   543	554	1317	java/io/IOException
    //   559	601	1317	java/io/IOException
    //   601	606	1317	java/io/IOException
    //   606	617	1317	java/io/IOException
    //   622	660	1317	java/io/IOException
    //   665	724	1317	java/io/IOException
    //   724	752	1317	java/io/IOException
    //   757	816	1317	java/io/IOException
    //   816	827	1317	java/io/IOException
    //   832	870	1317	java/io/IOException
    //   875	934	1317	java/io/IOException
    //   934	962	1317	java/io/IOException
    //   967	1023	1317	java/io/IOException
    //   1023	1051	1317	java/io/IOException
    //   1056	1115	1317	java/io/IOException
    //   1115	1143	1317	java/io/IOException
    //   1148	1204	1317	java/io/IOException
    //   1204	1232	1317	java/io/IOException
    //   1237	1293	1317	java/io/IOException
    //   2	37	1325	java/lang/Exception
    //   42	63	1325	java/lang/Exception
    //   68	110	1325	java/lang/Exception
    //   110	121	1325	java/lang/Exception
    //   126	168	1325	java/lang/Exception
    //   168	179	1325	java/lang/Exception
    //   184	226	1325	java/lang/Exception
    //   226	237	1325	java/lang/Exception
    //   242	284	1325	java/lang/Exception
    //   284	295	1325	java/lang/Exception
    //   300	342	1325	java/lang/Exception
    //   342	353	1325	java/lang/Exception
    //   358	397	1325	java/lang/Exception
    //   397	433	1325	java/lang/Exception
    //   433	444	1325	java/lang/Exception
    //   449	488	1325	java/lang/Exception
    //   488	499	1325	java/lang/Exception
    //   504	543	1325	java/lang/Exception
    //   543	554	1325	java/lang/Exception
    //   559	601	1325	java/lang/Exception
    //   601	606	1325	java/lang/Exception
    //   606	617	1325	java/lang/Exception
    //   622	660	1325	java/lang/Exception
    //   665	724	1325	java/lang/Exception
    //   724	752	1325	java/lang/Exception
    //   757	816	1325	java/lang/Exception
    //   816	827	1325	java/lang/Exception
    //   832	870	1325	java/lang/Exception
    //   875	934	1325	java/lang/Exception
    //   934	962	1325	java/lang/Exception
    //   967	1023	1325	java/lang/Exception
    //   1023	1051	1325	java/lang/Exception
    //   1056	1115	1325	java/lang/Exception
    //   1115	1143	1325	java/lang/Exception
    //   1148	1204	1325	java/lang/Exception
    //   1204	1232	1325	java/lang/Exception
    //   1237	1293	1325	java/lang/Exception
  }
  
  public static String a(int paramInt1, int paramInt2)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(paramInt1).append('-').append(paramInt2);
    return localStringBuilder.toString();
  }
  
  public static String a(SharedPreferences paramSharedPreferences, String paramString, boolean paramBoolean)
  {
    int i = 0;
    paramSharedPreferences = paramSharedPreferences.getString("data_migration_tim_uins", "");
    if (TextUtils.isEmpty(paramSharedPreferences))
    {
      if (paramBoolean) {
        return paramString;
      }
      return paramSharedPreferences;
    }
    if (paramBoolean)
    {
      localObject = paramSharedPreferences.split(";");
      j = localObject.length;
      while (i < j)
      {
        if (localObject[i].equals(paramString)) {
          return paramSharedPreferences;
        }
        i += 1;
      }
      return paramSharedPreferences + ";" + paramString;
    }
    paramSharedPreferences = paramSharedPreferences.split(";");
    Object localObject = new StringBuilder();
    int j = paramSharedPreferences.length;
    i = 0;
    while (i < j)
    {
      String str = paramSharedPreferences[i];
      if (!str.equals(paramString)) {
        ((StringBuilder)localObject).append(str).append(";");
      }
      i += 1;
    }
    if ((((StringBuilder)localObject).length() > 0) && (((StringBuilder)localObject).charAt(((StringBuilder)localObject).length() - 1) == ';')) {
      ((StringBuilder)localObject).deleteCharAt(((StringBuilder)localObject).length() - 1);
    }
    return ((StringBuilder)localObject).toString();
  }
  
  public static String a(ConfigurationService.Config paramConfig, int paramInt1, int paramInt2)
  {
    if (paramConfig.version.get() == paramInt1)
    {
      QLog.e("SPLASH_ConfigServlet", 1, "extractConfigContent| config content will be null localVersion is same as config.version(" + paramInt1 + "). type=" + paramInt2);
      return null;
    }
    if (paramConfig.content_list.size() > 0) {
      return (String)paramConfig.content_list.get(0);
    }
    if (paramConfig.msg_content_list.size() == 0)
    {
      QLog.i("SPLASH_ConfigServlet", 1, String.format(Locale.getDefault(), "extractConfigContent| version is update but config content is null. newVersion=%d, oldVersion=%d, type=%d", new Object[] { Integer.valueOf(paramConfig.version.get()), Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) }));
      return "";
    }
    Object localObject = ((ConfigurationService.Content)paramConfig.msg_content_list.get(0)).content.get().toByteArray();
    if (((ConfigurationService.Content)paramConfig.msg_content_list.get(0)).compress.get() == 1)
    {
      byte[] arrayOfByte = ArConfigUtils.a((byte[])localObject);
      localObject = arrayOfByte;
      if (arrayOfByte == null)
      {
        QLog.e("SPLASH_ConfigServlet", 1, "extractConfigContent| decompress is failed. type=" + paramInt2 + ", data=null");
        return null;
      }
    }
    for (;;)
    {
      try
      {
        localObject = new String((byte[])localObject, "utf-8");
        paramConfig = String.format(Locale.getDefault(), "extractConfigContent| config is update. version=%d, type=%d", new Object[] { Integer.valueOf(paramConfig.version.get()), Integer.valueOf(paramInt2) });
        if (QLog.isColorLevel())
        {
          QLog.i("SPLASH_ConfigServlet", 2, paramConfig + "content=" + (String)localObject);
          return localObject;
        }
      }
      catch (UnsupportedEncodingException paramConfig)
      {
        QLog.e("SPLASH_ConfigServlet", 1, "extractConfigContent| data[] to String failed. type=" + paramInt2, paramConfig);
        return null;
      }
      QLog.i("SPLASH_ConfigServlet", 1, paramConfig);
    }
  }
  
  private String a(InputStream paramInputStream)
  {
    BufferedReader localBufferedReader = new BufferedReader(new InputStreamReader(paramInputStream));
    StringBuilder localStringBuilder = new StringBuilder();
    try
    {
      for (;;)
      {
        String str = localBufferedReader.readLine();
        if (str == null) {
          break;
        }
        localStringBuilder.append(str);
      }
      try
      {
        paramInputStream.close();
        throw localObject;
      }
      catch (IOException paramInputStream)
      {
        for (;;)
        {
          paramInputStream.printStackTrace();
        }
      }
    }
    catch (IOException localIOException)
    {
      localIOException = localIOException;
      localIOException.printStackTrace();
      try
      {
        paramInputStream.close();
        for (;;)
        {
          return localStringBuilder.toString();
          try
          {
            paramInputStream.close();
          }
          catch (IOException paramInputStream)
          {
            paramInputStream.printStackTrace();
          }
        }
      }
      catch (IOException paramInputStream)
      {
        for (;;)
        {
          paramInputStream.printStackTrace();
        }
      }
    }
    finally {}
  }
  
  public static List a(ConfigurationService.Config paramConfig)
  {
    ArrayList localArrayList = null;
    if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
    {
      localArrayList = new ArrayList();
      if (QLog.isColorLevel()) {
        QLog.i("SPLASH_ConfigServlet", 2, "handleReceiptConfig: list.size() " + paramConfig.msg_content_list.size());
      }
      Iterator localIterator = paramConfig.msg_content_list.get().iterator();
      if (localIterator.hasNext())
      {
        paramConfig = (ConfigurationService.Content)localIterator.next();
        if ((paramConfig != null) && (paramConfig.content.has())) {
          if (paramConfig.compress.get() == 1)
          {
            paramConfig = b(paramConfig.content.get().toByteArray());
            if (paramConfig == null) {
              break label302;
            }
          }
        }
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (QLog.isColorLevel()) {
          QLog.i("SPLASH_ConfigServlet", 2, "parseCommonConfig: contentitem.content =  " + paramConfig);
        }
        if (TextUtils.isEmpty(paramConfig)) {
          break;
        }
        localArrayList.add(paramConfig);
      }
      catch (Exception paramConfig)
      {
        QLog.e("SPLASH_ConfigServlet", 1, "parseCommonConfig|uncompress failed" + paramConfig);
        paramConfig = null;
        continue;
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      QLog.i("SPLASH_ConfigServlet", 1, "empty contentitem");
      break;
      do
      {
        return localArrayList;
      } while (!QLog.isColorLevel());
      QLog.i("SPLASH_ConfigServlet", 2, "handleReceiptConfig:msg_content_list is empty ,version: " + paramConfig.version.get());
      return null;
      label302:
      paramConfig = null;
    }
  }
  
  public static List a(ConfigurationService.Config paramConfig, int paramInt1, int paramInt2)
  {
    if (paramConfig.version.get() == paramInt1)
    {
      QLog.e("SPLASH_ConfigServlet", 1, "extractConfigContentList| config content is null. type=" + paramInt2);
      return null;
    }
    if (paramConfig.content_list.size() > 0) {
      return paramConfig.content_list.get();
    }
    int i = paramConfig.msg_content_list.size();
    if (i == 0)
    {
      QLog.i("SPLASH_ConfigServlet", 1, String.format(Locale.getDefault(), "extractConfigContentList| version is update but config content is null. newVersion=%d, oldVersion=%d, type=%d", new Object[] { Integer.valueOf(paramConfig.version.get()), Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) }));
      return Collections.emptyList();
    }
    ArrayList localArrayList = new ArrayList(i);
    paramInt1 = 0;
    if (paramInt1 < i)
    {
      Object localObject1 = ((ConfigurationService.Content)paramConfig.msg_content_list.get(0)).content.get().toByteArray();
      Object localObject2;
      if (((ConfigurationService.Content)paramConfig.msg_content_list.get(0)).compress.get() == 1)
      {
        localObject2 = ArConfigUtils.a((byte[])localObject1);
        localObject1 = localObject2;
        if (localObject2 == null) {
          QLog.e("SPLASH_ConfigServlet", 1, paramInt1 + ": extractConfigContentList| decompress is failed. type=" + paramInt2 + ", data=null");
        }
      }
      for (;;)
      {
        paramInt1 += 1;
        break;
        try
        {
          localObject1 = new String((byte[])localObject1, "utf-8");
          localArrayList.add(localObject1);
          localObject2 = String.format(Locale.getDefault(), "%d: extractConfigContent| config is update. version=%d, type=%d", new Object[] { Integer.valueOf(paramInt1), Integer.valueOf(paramConfig.version.get()), Integer.valueOf(paramInt2) });
          if (!QLog.isColorLevel()) {
            break label380;
          }
          QLog.i("SPLASH_ConfigServlet", 2, (String)localObject2 + "content=" + (String)localObject1);
        }
        catch (UnsupportedEncodingException localUnsupportedEncodingException)
        {
          QLog.e("SPLASH_ConfigServlet", 1, paramInt1 + ": extractConfigContentList| data[] to String failed. type=" + paramInt2, localUnsupportedEncodingException);
        }
        continue;
        label380:
        QLog.i("SPLASH_ConfigServlet", 1, (String)localObject2);
      }
    }
    return localArrayList;
  }
  
  public static void a(int paramInt, QQAppInterface paramQQAppInterface, String paramString)
  {
    jdField_a_of_type_JavaLangString = paramString;
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "ConfigServlet getARMapConfig uin:" + paramString + ",reqOccasion:" + paramInt);
    }
    if (((ARMapConfigManager)paramQQAppInterface.getManager(189)).a())
    {
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "ARMapForbidden getARMapConfig return");
      }
      return;
    }
    paramString = new NewIntent(paramQQAppInterface.getApp(), ConfigServlet.class);
    paramString.putExtra("k_cmd_type", new int[] { 133 });
    paramString.putExtra("k_req_occasion", paramInt);
    paramQQAppInterface.startServlet(paramString);
  }
  
  /* Error */
  private void a(int paramInt, String paramString1, String paramString2, QQAppInterface paramQQAppInterface)
  {
    // Byte code:
    //   0: getstatic 1449	cooperation/readinjoy/content/ReadInJoyDataProvider:e	Landroid/net/Uri;
    //   3: invokevirtual 1455	android/net/Uri:buildUpon	()Landroid/net/Uri$Builder;
    //   6: astore 5
    //   8: aload 5
    //   10: ldc_w 1457
    //   13: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   16: invokevirtual 1463	android/net/Uri$Builder:appendQueryParameter	(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri$Builder;
    //   19: pop
    //   20: aload 5
    //   22: invokevirtual 1467	android/net/Uri$Builder:build	()Landroid/net/Uri;
    //   25: astore 5
    //   27: new 1469	android/content/ContentValues
    //   30: dup
    //   31: invokespecial 1470	android/content/ContentValues:<init>	()V
    //   34: astore 6
    //   36: aload 6
    //   38: ldc_w 1472
    //   41: iload_1
    //   42: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   45: invokevirtual 1476	android/content/ContentValues:put	(Ljava/lang/String;Ljava/lang/Integer;)V
    //   48: aload 6
    //   50: ldc_w 1478
    //   53: aload_2
    //   54: invokevirtual 1481	android/content/ContentValues:put	(Ljava/lang/String;Ljava/lang/String;)V
    //   57: aload 6
    //   59: ldc_w 1483
    //   62: aload_3
    //   63: invokevirtual 1481	android/content/ContentValues:put	(Ljava/lang/String;Ljava/lang/String;)V
    //   66: ldc_w 1485
    //   69: iconst_2
    //   70: anewarray 179	java/lang/Object
    //   73: dup
    //   74: iconst_0
    //   75: ldc_w 1478
    //   78: aastore
    //   79: dup
    //   80: iconst_1
    //   81: aload_2
    //   82: aastore
    //   83: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   86: astore_2
    //   87: aload 4
    //   89: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   92: invokevirtual 1489	com/tencent/qphone/base/util/BaseApplication:getContentResolver	()Landroid/content/ContentResolver;
    //   95: aload 5
    //   97: aconst_null
    //   98: aload_2
    //   99: aconst_null
    //   100: aconst_null
    //   101: invokevirtual 1495	android/content/ContentResolver:query	(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
    //   104: astore_2
    //   105: aload_2
    //   106: ifnull +148 -> 254
    //   109: aload_2
    //   110: invokeinterface 1500 1 0
    //   115: ifle +61 -> 176
    //   118: aload 4
    //   120: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   123: invokevirtual 1489	com/tencent/qphone/base/util/BaseApplication:getContentResolver	()Landroid/content/ContentResolver;
    //   126: aload 5
    //   128: aload 6
    //   130: aconst_null
    //   131: aconst_null
    //   132: invokevirtual 1504	android/content/ContentResolver:update	(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
    //   135: pop
    //   136: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   139: ifeq +12 -> 151
    //   142: ldc 90
    //   144: iconst_2
    //   145: ldc_w 1506
    //   148: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   151: aload 4
    //   153: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   156: invokevirtual 1489	com/tencent/qphone/base/util/BaseApplication:getContentResolver	()Landroid/content/ContentResolver;
    //   159: aload 5
    //   161: aconst_null
    //   162: invokevirtual 1510	android/content/ContentResolver:notifyChange	(Landroid/net/Uri;Landroid/database/ContentObserver;)V
    //   165: aload_2
    //   166: ifnull +9 -> 175
    //   169: aload_2
    //   170: invokeinterface 1511 1 0
    //   175: return
    //   176: aload 4
    //   178: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   181: invokevirtual 1489	com/tencent/qphone/base/util/BaseApplication:getContentResolver	()Landroid/content/ContentResolver;
    //   184: aload 5
    //   186: aload 6
    //   188: invokevirtual 1515	android/content/ContentResolver:insert	(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;
    //   191: pop
    //   192: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   195: ifeq -44 -> 151
    //   198: ldc 90
    //   200: iconst_2
    //   201: ldc_w 1517
    //   204: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   207: goto -56 -> 151
    //   210: astore_3
    //   211: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   214: ifeq +29 -> 243
    //   217: ldc 90
    //   219: iconst_2
    //   220: new 92	java/lang/StringBuilder
    //   223: dup
    //   224: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   227: ldc_w 1519
    //   230: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   233: aload_3
    //   234: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   237: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   240: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   243: aload_2
    //   244: ifnull -69 -> 175
    //   247: aload_2
    //   248: invokeinterface 1511 1 0
    //   253: return
    //   254: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   257: ifeq -106 -> 151
    //   260: ldc 90
    //   262: iconst_2
    //   263: ldc_w 1521
    //   266: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   269: goto -118 -> 151
    //   272: astore 4
    //   274: aload_2
    //   275: astore_3
    //   276: aload 4
    //   278: astore_2
    //   279: aload_3
    //   280: ifnull +9 -> 289
    //   283: aload_3
    //   284: invokeinterface 1511 1 0
    //   289: aload_2
    //   290: athrow
    //   291: astore_2
    //   292: aconst_null
    //   293: astore_3
    //   294: goto -15 -> 279
    //   297: astore 4
    //   299: aload_2
    //   300: astore_3
    //   301: aload 4
    //   303: astore_2
    //   304: goto -25 -> 279
    //   307: astore_3
    //   308: aconst_null
    //   309: astore_2
    //   310: goto -99 -> 211
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	313	0	this	ConfigServlet
    //   0	313	1	paramInt	int
    //   0	313	2	paramString1	String
    //   0	313	3	paramString2	String
    //   0	313	4	paramQQAppInterface	QQAppInterface
    //   6	179	5	localObject	Object
    //   34	153	6	localContentValues	android.content.ContentValues
    // Exception table:
    //   from	to	target	type
    //   109	151	210	java/lang/Exception
    //   151	165	210	java/lang/Exception
    //   176	207	210	java/lang/Exception
    //   254	269	210	java/lang/Exception
    //   109	151	272	finally
    //   151	165	272	finally
    //   176	207	272	finally
    //   254	269	272	finally
    //   27	105	291	finally
    //   211	243	297	finally
    //   27	105	307	java/lang/Exception
  }
  
  public static void a(QQAppInterface paramQQAppInterface)
  {
    a(paramQQAppInterface, 5);
    if (QLog.isDevelopLevel()) {
      QLog.d("QQOperateVoIP", 4, "onSend configXml request");
    }
  }
  
  public static void a(QQAppInterface paramQQAppInterface, int paramInt)
  {
    a(paramQQAppInterface, paramInt, null);
  }
  
  public static void a(QQAppInterface paramQQAppInterface, int paramInt, String paramString)
  {
    NewIntent localNewIntent = new NewIntent(paramQQAppInterface.getApp(), ConfigServlet.class);
    localNewIntent.putExtra("k_cmd_type", new int[] { paramInt });
    if (!StringUtil.a(paramString)) {
      localNewIntent.putExtra("key_uin", paramString);
    }
    paramQQAppInterface.startServlet(localNewIntent);
  }
  
  private void a(QQAppInterface paramQQAppInterface, Intent paramIntent, int[] paramArrayOfInt, Packet paramPacket)
  {
    ConfigurationService.ReqGetConfig localReqGetConfig = new ConfigurationService.ReqGetConfig();
    int n = paramArrayOfInt.length;
    ArrayList localArrayList1 = new ArrayList(n);
    ArrayList localArrayList2 = new ArrayList(n);
    int k = 0;
    ConfigurationService.ConfigSeq localConfigSeq;
    int i1;
    label1692:
    int j;
    int i;
    Object localObject5;
    String str;
    long l;
    boolean bool;
    Object localObject2;
    int i2;
    int m;
    if (k < n)
    {
      localConfigSeq = new ConfigurationService.ConfigSeq();
      i1 = paramArrayOfInt[k];
      localConfigSeq.type.set(i1);
      switch (i1)
      {
      default: 
      case 1: 
      case 2: 
      case 3: 
      case 12: 
      case 18: 
      case 5: 
      case 55: 
      case 10: 
      case 46: 
      case 13: 
      case 102: 
      case 101: 
      case 294: 
      case 34: 
      case 115: 
      case 286: 
      case 23: 
      case 53: 
      case 78: 
      case 287: 
      case 84: 
      case 167: 
      case 226: 
      case 139: 
      case 310: 
      case 276: 
      case 223: 
      case 311: 
      case 298: 
      case 31: 
      case 26: 
      case 76: 
      case 94: 
      case 158: 
      case 32: 
      case 35: 
      case 33: 
      case 38: 
      case 93: 
      case 270: 
      case 44: 
      case 42: 
      case 47: 
      case 65: 
      case 49: 
      case 50: 
      case 56: 
      case 148: 
      case 61: 
      case 63: 
      case 64: 
      case 60: 
      case 57: 
      case 66: 
      case 72: 
      case 73: 
      case 67: 
      case 70: 
      case 292: 
      case 68: 
      case 69: 
      case 74: 
      case 75: 
      case 228: 
      case 256: 
      case 6: 
      case 43: 
      case 113: 
      case 80: 
      case 111: 
      case 79: 
      case 81: 
      case 85: 
      case 92: 
      case 83: 
      case 82: 
      case 90: 
      case 147: 
      case 124: 
      case 86: 
      case 87: 
        do
        {
          for (;;)
          {
            localArrayList1.add(localConfigSeq);
            localArrayList2.add(Integer.valueOf(i1));
            for (;;)
            {
              for (;;)
              {
                k += 1;
                break;
                localConfigSeq.version.set(SharedPreUtils.c(paramQQAppInterface.getApp()));
                break label1692;
                localConfigSeq.version.set(SharedPreUtils.j(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                break label1692;
                SharedPreUtils.a(paramQQAppInterface.getApplication(), paramQQAppInterface.getCurrentAccountUin());
                if (paramQQAppInterface.getCurrentAccountUin() != null)
                {
                  jdField_b_of_type_JavaLangString = paramQQAppInterface.getCurrentNickname();
                  Object localObject1 = ProfileCardUtil.a(paramQQAppInterface, paramQQAppInterface.getCurrentAccountUin());
                  if (localObject1 != null)
                  {
                    if (QLog.isColorLevel()) {
                      QLog.i("SPLASH_ConfigServlet_birth", 2, "card!=null");
                    }
                    j = (int)((Card)localObject1).lBirthday;
                    i = ProfileUtil.b(j);
                    j = ProfileUtil.c(j);
                    SharedPreUtils.b(paramQQAppInterface.getApp(), a(i, j));
                    i = a(new SimpleDateFormat("MM-dd").format(new Date()), a(i, j));
                    if (QLog.isColorLevel()) {
                      QLog.i("SPLASH_ConfigServlet_birth", 2, "birthday date diff is " + i);
                    }
                    if (i < 0) {
                      continue;
                    }
                    if (i <= 3) {}
                  }
                  else
                  {
                    if (!QLog.isColorLevel()) {
                      continue;
                    }
                    QLog.i("SPLASH_ConfigServlet_birth", 2, "card===null");
                    continue;
                  }
                  localConfigSeq.version.set(SharedPreUtils.k(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  break label1692;
                  localObject1 = (NearbyBannerManager)paramQQAppInterface.getManager(73);
                  localConfigSeq.version.set(((NearbyBannerManager)localObject1).a());
                  localObject5 = paramIntent.getStringExtra("key_province");
                  localObject1 = localObject5;
                  if (localObject5 == null) {
                    localObject1 = "";
                  }
                  str = paramIntent.getStringExtra("key_city");
                  localObject5 = str;
                  if (str == null) {
                    localObject5 = "";
                  }
                  localReqGetConfig.province.set((String)localObject1);
                  localReqGetConfig.city.set((String)localObject5);
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.p(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.l(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin()));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.m(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin()));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.b(paramQQAppInterface.getApp()));
                  break label1692;
                  localConfigSeq.version.set(PatchSharedPreUtil.a(paramQQAppInterface.getApp()));
                  break label1692;
                  BridgeHelper.a(BaseApplication.getContext(), jdField_a_of_type_JavaLangString).a();
                  localConfigSeq.version.set(SharedPreUtils.a(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()));
                  break label1692;
                  i = ApkUtils.a(BaseApplicationImpl.getContext());
                  if (SettingCloneUtil.readValueForInt(BaseApplicationImpl.getContext(), jdField_a_of_type_JavaLangString, null, "qqsetting_calltab_show_key_version", 0) < i)
                  {
                    localConfigSeq.version.set(0);
                    break label1692;
                  }
                  localConfigSeq.version.set(SharedPreUtils.o(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()));
                  break label1692;
                  i = ApkUtils.a(BaseApplicationImpl.getContext());
                  if (SettingCloneUtil.readValueForInt(BaseApplicationImpl.getContext(), jdField_a_of_type_JavaLangString, null, "qqsetting_calltab_show_key_version", 0) < i)
                  {
                    localConfigSeq.version.set(0);
                    paramIntent.putExtra("update101Version", i);
                    break label1692;
                  }
                  localConfigSeq.version.set(SharedPreUtils.n(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()));
                  break label1692;
                  i = ApkUtils.a(BaseApplicationImpl.getContext());
                  if (SettingCloneUtil.readValueForInt(BaseApplicationImpl.getContext(), jdField_a_of_type_JavaLangString, null, "qqsetting_calltab_show_key_version", 0) < i) {
                    localConfigSeq.version.set(0);
                  }
                  for (;;)
                  {
                    localConfigSeq.compress.set(1);
                    break;
                    localConfigSeq.version.set(SharedPreUtils.a(paramQQAppInterface.getApp(), "tencent_docs_config_version", jdField_a_of_type_JavaLangString));
                  }
                  localObject1 = (PhoneUnityManager)paramQQAppInterface.getManager(101);
                  localConfigSeq.version.set(((PhoneUnityManager)localObject1).a());
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.v(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.w(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.e(paramQQAppInterface.getApp()));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.x(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.y(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.g(paramQQAppInterface.getApp()));
                  break label1692;
                  if (!com.tencent.mobileqq.shortvideo.PtvTemplateManager.a())
                  {
                    localConfigSeq.version.set(0);
                    break label1692;
                  }
                  localConfigSeq.version.set(SharedPreUtils.h(paramQQAppInterface.getApp()));
                  break label1692;
                  if (!com.tencent.mobileqq.shortvideo.PtvTemplateManager.b()) {
                    localConfigSeq.version.set(0);
                  }
                  for (;;)
                  {
                    localConfigSeq.compress.set(1);
                    break;
                    localConfigSeq.version.set(SharedPreUtils.j(paramQQAppInterface.getApp()));
                  }
                  if (!CapturePtvTemplateManager.a()) {
                    localConfigSeq.version.set(0);
                  }
                  for (;;)
                  {
                    localConfigSeq.compress.set(1);
                    break;
                    localConfigSeq.version.set(SharedPreUtils.i(paramQQAppInterface.getApp()));
                  }
                  i = 0;
                  if (com.tencent.mobileqq.shortvideo.PtvTemplateManager.c()) {
                    i = SharedPreUtils.k(paramQQAppInterface.getApp());
                  }
                  localConfigSeq.version.set(i);
                  localConfigSeq.compress.set(1);
                  if (!QLog.isDevelopLevel()) {
                    break label1692;
                  }
                  QLog.d("Doodle_Strokes_SPLASH_ConfigServlet", 4, String.format("个性笔触配置版本号[%s]", new Object[] { Integer.valueOf(i) }));
                  break label1692;
                  i = 0;
                  if (dov.com.tencent.mobileqq.shortvideo.PtvTemplateManager.a()) {
                    i = SharedPreUtils.l(paramQQAppInterface.getApp());
                  }
                  localConfigSeq.version.set(i);
                  localConfigSeq.compress.set(1);
                  if (!QLog.isDevelopLevel()) {
                    break label1692;
                  }
                  QLog.d("DOV_Doodle_Strokes_SPLASH_ConfigServlet", 4, String.format("个性笔触配置版本号[%s]", new Object[] { Integer.valueOf(i) }));
                  break label1692;
                  QAVGroupConfig.a(localConfigSeq);
                  break label1692;
                  BusinessCommonConfig.a(paramQQAppInterface).a(i1, localConfigSeq);
                  break label1692;
                  QavGPDownloader.a(localConfigSeq);
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.b(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.c(paramQQAppInterface.getApp(), ""));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.d(paramQQAppInterface.getApp(), ""));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.e(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.f(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.n(paramQQAppInterface.getApp()));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.G(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.q(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.r(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.s(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.t(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  localConfigSeq.compress.set(1);
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.g(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  break label1692;
                  localConfigSeq.version.set(SharedPreUtils.P(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                  l = paramIntent.getLongExtra("k_adcode", 0L);
                  localObject5 = paramIntent.getStringExtra("key_province");
                  localObject1 = localObject5;
                  if (localObject5 == null) {
                    localObject1 = "";
                  }
                  str = paramIntent.getStringExtra("key_city");
                  localObject5 = str;
                  if (str == null) {
                    localObject5 = "";
                  }
                  localReqGetConfig.province.set((String)localObject1);
                  localReqGetConfig.city.set((String)localObject5);
                  localReqGetConfig.adcode.set(l);
                  break label1692;
                  bool = QFindConfigUtil.a();
                  if (QLog.isColorLevel()) {
                    QLog.d("SPLASH_ConfigServlet", 2, "addAllConfigs, support ble=" + bool);
                  }
                  if (bool)
                  {
                    localConfigSeq.version.set(SharedPreUtils.h(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                    break label1692;
                    bool = QFindConfigUtil.a();
                    if (QLog.isColorLevel()) {
                      QLog.d("SPLASH_ConfigServlet", 2, "addAllConfigs, support ble=" + bool);
                    }
                    if (bool)
                    {
                      localConfigSeq.version.set(SharedPreUtils.i(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.t(paramQQAppInterface.getApp()));
                      break label1692;
                      i = SharedPreUtils.E(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
                      j = AppSetting.jdField_a_of_type_Int;
                      if (i != j)
                      {
                        SharedPreUtils.i(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 0);
                        SharedPreUtils.k(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
                        SearchConfigManager.a(paramQQAppInterface, jdField_a_of_type_JavaLangString);
                      }
                      localConfigSeq.version.set(SharedPreUtils.D(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.Q(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.f(paramQQAppInterface.getApp()));
                      localConfigSeq.compress.set(1);
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.u(paramQQAppInterface.getApp()));
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.v(paramQQAppInterface.getApp()));
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.w(paramQQAppInterface.getApp()));
                      break label1692;
                      i = SharedPreUtils.R(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
                      localConfigSeq.version.set(i);
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.x(paramQQAppInterface.getApp()));
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.H(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.W(paramQQAppInterface.getApp(), paramQQAppInterface.c()));
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.y(paramQQAppInterface.getApp()));
                      break label1692;
                      localConfigSeq.version.set(SharedPreUtils.N(paramQQAppInterface.getApp(), paramQQAppInterface.c()));
                      break label1692;
                      localConfigSeq.version.set(PublicAccountConfigUtil.b(paramQQAppInterface));
                      break label1692;
                      i = SharedPreUtils.a(paramQQAppInterface.getApp(), "readinjoy_search_jump_url_version", paramQQAppInterface.getCurrentAccountUin());
                      localConfigSeq.version.set(i);
                      break label1692;
                      try
                      {
                        if (!new File(PreloadManager.a(paramQQAppInterface)).exists()) {
                          SharedPreUtils.z(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), 0);
                        }
                        i = SharedPreUtils.X(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
                        localConfigSeq.version.set(i);
                        if (!QLog.isColorLevel()) {
                          break label1692;
                        }
                        QLog.i("SPLASH_ConfigServlet", 2, "preloadConfigVersion:" + i);
                      }
                      catch (Exception localException)
                      {
                        for (;;)
                        {
                          localException.printStackTrace();
                        }
                      }
                    }
                  }
                }
              }
              i = SharedPreUtils.I(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
              localConfigSeq.version.set(i);
              break label1692;
              localConfigSeq.version.set(((MayknowRecommendManager)paramQQAppInterface.getManager(158)).a());
              break label1692;
              i = SharedPreUtils.J(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
              if (SharedPreUtils.F(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()) != AppSetting.jdField_a_of_type_Int) {
                i = 0;
              }
              localConfigSeq.version.set(i);
              break label1692;
              i = SharedPreUtils.aO(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
              if (SharedPreUtils.aP(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()) != AppSetting.jdField_a_of_type_Int) {
                i = 0;
              }
              localConfigSeq.version.set(i);
              break label1692;
              i = SharedPreUtils.aQ(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
              if (SharedPreUtils.aR(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()) != AppSetting.jdField_a_of_type_Int) {
                i = 0;
              }
              localConfigSeq.version.set(i);
              break label1692;
              localReqGetConfig = DeviceProfileManager.a(paramQQAppInterface);
            }
            localConfigSeq.version.set(SharedPreUtils.O(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
            continue;
            localConfigSeq.version.set(PrecoverUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
            localConfigSeq.compress.set(1);
            localObject5 = paramIntent.getStringExtra("key_province");
            localObject2 = localObject5;
            if (localObject5 == null) {
              localObject2 = "";
            }
            str = paramIntent.getStringExtra("key_city");
            localObject5 = str;
            if (str == null) {
              localObject5 = "";
            }
            localReqGetConfig.province.set((String)localObject2);
            localReqGetConfig.city.set((String)localObject5);
            continue;
            localConfigSeq.version.set(SharedPreUtils.q(paramQQAppInterface.getApp()));
            continue;
            localConfigSeq.version.set(SharedPreUtils.r(paramQQAppInterface.getApp()));
            continue;
            localConfigSeq.version.set(SharedPreUtils.Y(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin()));
            continue;
            localConfigSeq.version.set(PublicAccountConfigUtil.a(paramQQAppInterface));
            continue;
            localObject2 = (TroopManager)paramQQAppInterface.getManager(51);
            localConfigSeq.version.set(((TroopManager)localObject2).jdField_a_of_type_Int);
            continue;
            localConfigSeq.version.set(SharedPreUtils.Z(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
            continue;
            localObject2 = (TroopTopicMgr)paramQQAppInterface.getManager(97);
            localConfigSeq.version.set(((TroopTopicMgr)localObject2).jdField_a_of_type_Int);
            continue;
            localConfigSeq.version.set(SharedPreUtils.aa(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
            continue;
            localConfigSeq.version.set(SharedPreUtils.U(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin()));
            continue;
            localConfigSeq.version.set(SharedPreUtils.a(paramQQAppInterface.getApp(), "shop_tab", jdField_a_of_type_JavaLangString));
            continue;
            if (!ArtFilterManager.a(paramQQAppInterface.getCurrentAccountUin())) {
              SharedPreUtils.x(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), 0);
            }
            localConfigSeq.version.set(SharedPreUtils.V(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin()));
            continue;
            localObject2 = (OlympicManager)paramQQAppInterface.getManager(166);
            if (localObject2 != null)
            {
              ((OlympicManager)localObject2).c();
              localObject2 = ((OlympicManager)localObject2).a();
              i = 0;
              if (localObject2 != null) {
                i = ((OlympicActConfig)localObject2).version;
              }
              localConfigSeq.version.set(i);
              localConfigSeq.compress.set(1);
              paramIntent.putExtra("config_version", i);
              if (QLog.isColorLevel()) {
                QLog.d("Olympic.OLYMPIC_ACT_RESOURCE_CONFIG_INFO", 2, new Object[] { "oldVersion=", Integer.valueOf(i) });
              }
              if (OlympicUtil.a(BaseApplicationImpl.getContext(), "olympic_config_act_get"))
              {
                if (QLog.isColorLevel()) {
                  QLog.d("Olympic.configServlet", 2, new Object[] { "check24Hour, result=true, do Report, key=", "olympic_config_act_get" });
                }
                StatisticCollector.a(BaseApplicationImpl.getContext()).a("", "olympic_config_act_get", true, 0L, 0L, null, "", false);
                OlympicUtil.a(BaseApplicationImpl.getContext(), "olympic_config_act_get");
              }
            }
          }
          localObject2 = (ArResourceManager)paramQQAppInterface.getManager(167);
        } while (localObject2 == null);
        i2 = ((ArResourceManager)localObject2).b();
        m = 0;
        i = 0;
        localObject5 = BaseApplicationImpl.getApplication();
        j = m;
      }
    }
    for (;;)
    {
      for (;;)
      {
        try
        {
          int i3 = ((Context)localObject5).getPackageManager().getPackageInfo(((Context)localObject5).getPackageName(), 0).versionCode;
          j = m;
          m = ((ArResourceManager)localObject2).a();
          if ((m == 0) || (i3 != m)) {
            break label10618;
          }
          j = i;
          QLog.d("ArConfig_configServlet", 1, "handleResp_GetArResourceConfig|type= 1 version code is  " + i3 + "local version type is " + m);
        }
        catch (PackageManager.NameNotFoundException localNameNotFoundException)
        {
          localNameNotFoundException.printStackTrace();
          QLog.d("ArConfig_configServlet", 1, "handleResp_GetArResourceConfig|type= 1 error happen");
          i = j;
          continue;
          localConfigSeq.version.set(i2);
          continue;
        }
        if (i == 1)
        {
          localConfigSeq.version.set(0);
          localConfigSeq.compress.set(1);
          localObject5 = paramIntent.getStringExtra("key_province");
          localObject2 = localObject5;
          if (localObject5 == null) {
            localObject2 = "";
          }
          str = paramIntent.getStringExtra("key_city");
          localObject5 = str;
          if (str == null) {
            localObject5 = "";
          }
          localReqGetConfig.province.set((String)localObject2);
          localReqGetConfig.city.set((String)localObject5);
          paramIntent.putExtra("key_config_version", i2);
          break;
        }
        Object localObject3 = (ARGlobalConfigManager)paramQQAppInterface.getManager(219);
        if (localObject3 == null) {
          break;
        }
        i = ((ARGlobalConfigManager)localObject3).b();
        if (QLog.isColorLevel()) {
          QLog.d("handleResp_GetArGlobalConfig", 2, " local version = " + i);
        }
        if (((ARGlobalConfigManager)localObject3).a()) {
          localConfigSeq.version.set(i);
        }
        for (;;)
        {
          localConfigSeq.compress.set(1);
          paramIntent.putExtra("ar_global_key_config_version", i);
          break;
          i = 0;
          localConfigSeq.version.set(0);
        }
        localObject3 = (ARGlobalConfigManager)paramQQAppInterface.getManager(219);
        if (localObject3 == null) {
          break;
        }
        i = ((ARGlobalConfigManager)localObject3).c();
        localConfigSeq.version.set(i);
        localConfigSeq.compress.set(1);
        paramIntent.putExtra("ar_scan_star_face_config_version", i);
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServlet", 2, " get AR_SCAN_STAR_FACE_CONFIG, version = " + i);
        break;
        i = FaceScanDownloadManager.a(paramQQAppInterface);
        localConfigSeq.version.set(i);
        localConfigSeq.compress.set(1);
        paramIntent.putExtra("key_download_cfg_version", i);
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServlet", 2, " get AR_SCAN_FACE_PRE_DOWN_CONFIG, version = " + i);
        break;
        localObject3 = (ArResourceManager)paramQQAppInterface.getManager(167);
        if (localObject3 == null) {
          break;
        }
        i = ((ArResourceManager)localObject3).c();
        localConfigSeq.version.set(i);
        localConfigSeq.compress.set(1);
        paramIntent.putExtra("key_ar_entrance_effect_version", i);
        break;
        i = SharedPreUtils.a(paramQQAppInterface.getApp(), "push_open_notify_version", jdField_a_of_type_JavaLangString);
        localConfigSeq.version.set(i);
        break;
        i = SharedPreUtils.a(paramQQAppInterface.getApp(), "readinjoy_interested_push_config", jdField_a_of_type_JavaLangString);
        localConfigSeq.version.set(i);
        break;
        localObject3 = (PhoneContactManagerImp)paramQQAppInterface.getManager(10);
        localConfigSeq.version.set(((PhoneContactManagerImp)localObject3).e());
        break;
        i = EffectConfigBase.a(paramQQAppInterface.getApp(), i1);
        localConfigSeq.version.set(i);
        localConfigSeq.compress.set(1);
        break;
        i = SharedPreUtils.u(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        localConfigSeq.version.set(i);
        localConfigSeq.compress.set(1);
        break;
        if (VoiceChangeData.a().a() != null) {
          localConfigSeq.version.set(VoiceChangeData.a().a());
        }
        for (;;)
        {
          localConfigSeq.compress.set(1);
          break;
          localConfigSeq.version.set(0);
        }
        if (AIOTopRightButtonConfig.a().b(paramQQAppInterface.c()) != null) {
          localConfigSeq.version.set(AIOTopRightButtonConfig.a().a(paramQQAppInterface.c()));
        }
        for (;;)
        {
          localConfigSeq.compress.set(1);
          break;
          localConfigSeq.version.set(0);
        }
        i = SharedPreUtils.a(paramQQAppInterface.getApplication());
        localConfigSeq.version.set(i);
        localConfigSeq.compress.set(1);
        break;
        i = CameraUtils.a(BaseApplicationImpl.getContext());
        localConfigSeq.version.set(i);
        localConfigSeq.compress.set(1);
        paramIntent.putExtra("qcamera_conf_version", i);
        paramIntent.putExtra("uin", paramQQAppInterface.getCurrentAccountUin());
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.i("Q.camera.configServlet", 2, "request QCAMERA_PHONE_CONFIG version: " + i);
        break;
        i = SharedPreUtils.a(paramQQAppInterface.getApp(), "change_machine_version", jdField_a_of_type_JavaLangString);
        localConfigSeq.version.set(i);
        break;
        i = SharedPreUtils.S(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "addAllConfigs|GET_CONFIG_UPGRADE version=" + i);
        }
        localConfigSeq.version.set(i);
        paramQQAppInterface.p();
        OpenConfig.a(paramQQAppInterface.getApp(), String.valueOf(AppSetting.jdField_a_of_type_Int));
        ((ConfigHandler)paramQQAppInterface.a(4)).c();
        break;
        i = SharedPreUtils.T(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        localConfigSeq.version.set(i);
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("UpgradeTIMWrapper", 2, "ConfigServlet req :193, version: " + i);
        break;
        i = SharedPreUtils.a(paramQQAppInterface.getApp(), "now_entrance_action_version", jdField_a_of_type_JavaLangString);
        localConfigSeq.version.set(i);
        break;
        i = SharedPreUtils.a(paramQQAppInterface.getApp(), "troop_common_config_version", jdField_a_of_type_JavaLangString);
        localConfigSeq.version.set(i);
        break;
        i = SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_config_version", jdField_a_of_type_JavaLangString);
        localConfigSeq.version.set(i);
        break;
        i = SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_nowlive_tab_config_version", jdField_a_of_type_JavaLangString);
        localConfigSeq.version.set(i);
        break;
        localConfigSeq.version.set(SharedPreUtils.ab(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()));
        localConfigSeq.compress.set(1);
        break;
        localObject3 = (BabyQHandler)paramQQAppInterface.a(53);
        if (localObject3 == null) {
          break;
        }
        i = AppSetting.jdField_a_of_type_Int;
        if (i != ((BabyQHandler)localObject3).b(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString))
        {
          ((BabyQHandler)localObject3).a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 0);
          ((BabyQHandler)localObject3).b(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, i);
          ((BabyQHandler)localObject3).a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, true);
          ((BabyQHandler)localObject3).d();
        }
        localConfigSeq.version.set(((BabyQHandler)localObject3).a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
        break;
        localConfigSeq.version.set(SharedPreUtils.ac(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
        localConfigSeq.version.set(SharedPreUtils.ad(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
        localConfigSeq.compress.set(1);
        break;
        localConfigSeq.version.set(SharedPreUtils.K(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
        break;
        localConfigSeq.version.set(SearchConfigUtils.a());
        break;
        i = SearchEntryConfigManager.a(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin());
        localConfigSeq.version.set(i);
        break;
        i = ((ARMapConfigManager)paramQQAppInterface.getManager(189)).a();
        localConfigSeq.version.set(i);
        l = paramIntent.getLongExtra("k_adcode", 0L);
        double d1 = paramIntent.getDoubleExtra("k_longitude", 0.0D);
        double d2 = paramIntent.getDoubleExtra("k_latitude", 0.0D);
        localObject5 = paramIntent.getStringExtra("key_province");
        localObject3 = localObject5;
        if (localObject5 == null) {
          localObject3 = "";
        }
        str = paramIntent.getStringExtra("key_city");
        localObject5 = str;
        if (str == null) {
          localObject5 = "";
        }
        localReqGetConfig.province.set((String)localObject3);
        localReqGetConfig.city.set((String)localObject5);
        localReqGetConfig.adcode.set(l);
        localReqGetConfig.int32_lon.set((int)(1000000.0D * d1));
        localReqGetConfig.int32_lat.set((int)(1000000.0D * d2));
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "ConfigServlet GET_AR_MAP_CONFIG ,strProvince:" + (String)localObject3 + ",strCity:" + (String)localObject5 + ",adcode:" + l + ",longitude:" + d1 + ",latitude:" + d2 + ",arMapVersion:" + i);
        break;
        localConfigSeq.version.set(SharedPreUtils.L(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
        localConfigSeq.compress.set(1);
        break;
        localConfigSeq.version.set(SharedPreUtils.M(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
        break;
        i = SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_glamour_level_config_version", jdField_a_of_type_JavaLangString);
        localConfigSeq.version.set(i);
        localConfigSeq.compress.set(1);
        break;
        localConfigSeq.version.set(SharedPreUtils.aj(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
        break;
        if (SharedPreUtils.b(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 1) != AppSetting.jdField_a_of_type_Int)
        {
          SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 1, AppSetting.jdField_a_of_type_Int);
          SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 2, 0);
          localConfigSeq.version.set(0);
          break;
        }
        localConfigSeq.version.set(SharedPreUtils.b(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 2));
        break;
        try
        {
          if (((Integer)SharedPreUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 1)).intValue() == AppSetting.jdField_a_of_type_Int) {
            break label6581;
          }
          SharedPreUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 1, Integer.valueOf(AppSetting.jdField_a_of_type_Int));
          SharedPreUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 2, Integer.valueOf(0));
          localConfigSeq.version.set(0);
        }
        catch (Throwable localThrowable)
        {
          localThrowable.printStackTrace();
        }
      }
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.i("SPLASH_ConfigServlet", 2, "PUSH_RECOMMEND_SHIELD_CONFIG", localThrowable);
      break;
      label6581:
      i = ((Integer)SharedPreUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 2)).intValue();
      localConfigSeq.version.set(i);
      break;
      a(localConfigSeq, paramQQAppInterface, "batch_add_friend_for_troop_config");
      break;
      a(localConfigSeq, paramQQAppInterface, "confess_config");
      break;
      localConfigSeq.version.set(SharedPreUtils.am(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      break;
      if (!com.tencent.mobileqq.shortvideo.PtvTemplateManager.d()) {
        localConfigSeq.version.set(0);
      }
      for (;;)
      {
        localConfigSeq.compress.set(1);
        break;
        localConfigSeq.version.set(SharedPreUtils.m(paramQQAppInterface.getApp()));
      }
      localConfigSeq.version.set(SharedPreUtils.ak(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      break;
      localConfigSeq.version.set(SharedPreUtils.ao(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.aq(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(HotPicManager.a(paramQQAppInterface));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(FlashChatManager.a(paramQQAppInterface));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.av(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.ax(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      Object localObject4 = (TroopStoryManager)paramQQAppInterface.getManager(207);
      localConfigSeq.version.set(((TroopStoryManager)localObject4).a.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      break;
      localConfigSeq.version.set(SharedPreUtils.au(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(PublicAccountConfigUtil.c(paramQQAppInterface));
      break;
      i = SharedPreUtils.aG(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      j = AppSetting.jdField_a_of_type_Int;
      if (i != j)
      {
        SharedPreUtils.V(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 0);
        SharedPreUtils.W(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
      }
      for (;;)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "[Doutu]onsend : appIdRecord = " + i + ", appId = " + j + ", DOUTU_CONFI version = " + SharedPreUtils.aB(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
        }
        localConfigSeq.version.set(SharedPreUtils.aB(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
        localConfigSeq.compress.set(1);
        break;
        localObject4 = (DoutuManager)getAppRuntime().getManager(213);
        if (localObject4 != null) {
          ((DoutuManager)localObject4).b(false);
        }
      }
      i = SharedPreUtils.aI(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      j = AppSetting.jdField_a_of_type_Int;
      if (i != j)
      {
        SharedPreUtils.aa(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 0);
        SharedPreUtils.Z(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "[VideoRedbag]onsend : appIdRecord = " + i + ", appId = " + j + ", VIDEO_REDBAG_CONFI version = " + SharedPreUtils.aJ(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      }
      localConfigSeq.version.set(SharedPreUtils.aJ(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      i = SharedPreUtils.z(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      j = AppSetting.jdField_a_of_type_Int;
      if (i != j)
      {
        SharedPreUtils.f(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 0);
        SharedPreUtils.e(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "[GreenVideo]onsend : appIdRecord = " + i + ", appId = " + j + ", GREEN_VIDEO_CONFI version = " + SharedPreUtils.A(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      }
      localConfigSeq.version.set(SharedPreUtils.A(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      i = SharedPreUtils.B(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      j = AppSetting.jdField_a_of_type_Int;
      if (i != j)
      {
        SharedPreUtils.h(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 0);
        SharedPreUtils.g(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "[VideoCompress]onsend : appIdRecord = " + i + ", appId = " + j + ", VIDEO_REDBAG_CONFI version = " + SharedPreUtils.aJ(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      }
      localConfigSeq.version.set(SharedPreUtils.C(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      if (((Integer)NearbySPUtil.a(jdField_a_of_type_JavaLangString, "key_app_id", Integer.valueOf(0))).intValue() != AppSetting.jdField_a_of_type_Int)
      {
        NearbySPUtil.a(jdField_a_of_type_JavaLangString, "key_tabs_config_version", Integer.valueOf(0));
        NearbySPUtil.a(jdField_a_of_type_JavaLangString, "key_app_id", Integer.valueOf(AppSetting.jdField_a_of_type_Int));
      }
      i = ((Integer)NearbySPUtil.a(jdField_a_of_type_JavaLangString, "key_tabs_config_version", Integer.valueOf(0))).intValue();
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      localObject5 = paramIntent.getStringExtra("key_province");
      localObject4 = localObject5;
      if (localObject5 == null) {
        localObject4 = "";
      }
      str = paramIntent.getStringExtra("key_city");
      localObject5 = str;
      if (str == null) {
        localObject5 = "";
      }
      localReqGetConfig.province.set((String)localObject4);
      localReqGetConfig.city.set((String)localObject5);
      break;
      localObject4 = (LebaGridManager)paramQQAppInterface.getManager(211);
      localConfigSeq.version.set(((LebaGridManager)localObject4).a());
      break;
      i = EffectBeautyTools.a(paramQQAppInterface.getApp());
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SttManager.a(paramQQAppInterface));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.aA(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.aw(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.o(paramQQAppInterface.getApp()));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.p(paramQQAppInterface.getApp()));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(PhotoListConfigManager.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.aE(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      localObject5 = paramIntent.getStringExtra("key_province");
      localObject4 = localObject5;
      if (localObject5 == null) {
        localObject4 = "";
      }
      str = paramIntent.getStringExtra("key_city");
      localObject5 = str;
      if (str == null) {
        localObject5 = "";
      }
      localReqGetConfig.province.set((String)localObject4);
      localReqGetConfig.city.set((String)localObject5);
      break;
      localConfigSeq.version.set(SharedPreUtils.aF(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      i = SharedPreUtils.a(paramQQAppInterface.getApp(), "change_machine_version", jdField_a_of_type_JavaLangString);
      localConfigSeq.version.set(i);
      break;
      i = SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_auth_video_config_version", jdField_a_of_type_JavaLangString);
      localConfigSeq.version.set(i);
      break;
      localConfigSeq.version.set(SharedPreUtils.aL(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      break;
      localConfigSeq.version.set(SharedPreUtils.A(paramQQAppInterface.getApp()));
      break;
      localConfigSeq.version.set(com.tencent.mobileqq.activity.richmedia.VideoFilterTools.a(paramQQAppInterface.getApp()));
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(CaptureVideoFilterManager.a(paramQQAppInterface.getApp()));
      localConfigSeq.compress.set(1);
      break;
      a(localReqGetConfig, localConfigSeq, paramQQAppInterface);
      break;
      i = SharedPreUtils.a(paramQQAppInterface.getApp(), "search_function_config_version", jdField_a_of_type_JavaLangString);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = 0;
      if (SharedPreUtils.e(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, "campus_circle_config") != AppSetting.jdField_a_of_type_Int)
      {
        SharedPreUtils.e(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, "campus_circle_config", AppSetting.jdField_a_of_type_Int);
        SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, "campus_circle_config", 0);
      }
      for (;;)
      {
        localConfigSeq.version.set(i);
        localConfigSeq.compress.set(1);
        break;
        i = SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, "campus_circle_config");
      }
      i = ((OCRManager)paramQQAppInterface.getManager(227)).a();
      localConfigSeq.version.set(i);
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.i("SPLASH_ConfigServlet", 2, "ConfigServlet OCR_CONFIG ocrVersion:" + i);
      break;
      i = ((AVRedPacketConfigManager)paramQQAppInterface.getManager(253)).a();
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.i("SPLASH_ConfigServlet", 2, "ConfigServlet AV_REDPACKET_CONFIG localVersion =" + i);
      break;
      i = SharedPreUtils.aN(BaseApplicationImpl.getContext(), jdField_a_of_type_JavaLangString);
      localConfigSeq.version.set(i);
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.i("SPLASH_ConfigServlet", 2, "ConfigServlet receipt ,receiptVersion:" + i);
      break;
      i = ShortVideoResourceManager.a();
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      if (QLog.isColorLevel()) {
        QLog.i("ShortVideoResourceManager", 2, "SHORT_VIDEO_RESOURCE_CONFIG  ,versionRes:" + i);
      }
      ShortVideoResourceManager.a();
      break;
      i = SignalStrengthReport.a(paramQQAppInterface.getApp());
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("public_account_ad_preload_task", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("tim_login_jump", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      RDConfigServletProxy.a(paramQQAppInterface, localConfigSeq, true, jdField_a_of_type_JavaLangString);
      break;
      i = paramQQAppInterface.getPreferences().getInt("tim_upgrade_hongdian_version", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("campus_switch_config_version", 0);
      localConfigSeq.version.set(i);
      break;
      localConfigSeq.version.set(paramQQAppInterface.getPreferences().getInt("call_tim_config_version", 0));
      break;
      i = paramQQAppInterface.getPreferences().getInt("tim_pc_banner", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("troop_link_config_version", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("key_game_troop_bind_config_version", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = SharedPreUtils.d(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), "extend_friend_config");
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = SharedPreUtils.d(paramQQAppInterface.getApp());
      localConfigSeq.version.set(i);
      break;
      i = paramQQAppInterface.getPreferences().getInt("tim_aio_tips_bar_version", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = QmcfDevicesStrategy.a(paramQQAppInterface.getApp());
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("pic_light_reply_version_new", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("data_migration_tim_version", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("tim_convert_teamwork", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_videochat_dialog_config_version", jdField_a_of_type_JavaLangString);
      localConfigSeq.version.set(i);
      break;
      i = SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_videochat_banner_config_version", jdField_a_of_type_JavaLangString);
      localConfigSeq.version.set(i);
      break;
      i = paramQQAppInterface.getPreferences().getInt("zhitu_config_version", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("homework_troop_config_version", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      localObject4 = (TroopManager)paramQQAppInterface.getManager(51);
      localConfigSeq.version.set(((TroopManager)localObject4).jdField_a_of_type_ComTencentMobileqqTroopHomeworkConfigHomeworkConfig.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      localObject4 = (TroopManager)paramQQAppInterface.getManager(51);
      localConfigSeq.version.set(((TroopManager)localObject4).jdField_a_of_type_ComTencentMobileqqTroopHomeworkReciteConfigReciteConfig.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("now_enter_config_version" + paramQQAppInterface.c(), 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = RecentDanceConfigMgr.a();
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.a(paramQQAppInterface.getApp(), "sport_config", jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      i = SharedPreUtils.a(paramQQAppInterface.getApplication(), "troop_gift_anim_limit", "0");
      localConfigSeq.version.set(i);
      break;
      i = paramQQAppInterface.getPreferences().getInt("task_entry_config_version", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = SharedPreUtils.a(paramQQAppInterface.getApp(), "apollo_new_store_config_version", jdField_a_of_type_JavaLangString);
      localConfigSeq.version.set(i);
      break;
      i = paramQQAppInterface.getPreferences().getInt("qzone_xp_config_version", 0);
      localConfigSeq.version.set(i);
      break;
      i = paramQQAppInterface.getPreferences().getInt("teamwork_tips_version", 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      i = paramQQAppInterface.getPreferences().getInt("buluo_enter_config_version" + paramQQAppInterface.c(), 0);
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.aU(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      break;
      i = SharedPreUtils.aW(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      if (SharedPreUtils.aX(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount()) != AppSetting.jdField_a_of_type_Int) {
        i = 0;
      }
      localConfigSeq.version.set(i);
      break;
      i = SVParamManager.a().a(paramQQAppInterface.getApp());
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      if (!QIMPtvTemplateManager.a()) {
        localConfigSeq.version.set(0);
      }
      for (;;)
      {
        localConfigSeq.compress.set(1);
        break;
        localConfigSeq.version.set(SharedPreUtils.E(paramQQAppInterface.getApp()));
      }
      if (!QIMMusicConfigManager.a()) {
        localConfigSeq.version.set(0);
      }
      for (;;)
      {
        localConfigSeq.compress.set(1);
        break;
        localConfigSeq.version.set(SharedPreUtils.C(paramQQAppInterface.getApp()));
      }
      if (!DynamicTextConfigManager.b()) {
        localConfigSeq.version.set(0);
      }
      for (;;)
      {
        localConfigSeq.compress.set(1);
        break;
        localConfigSeq.version.set(SharedPreUtils.a(paramQQAppInterface.getApp()));
      }
      if (!QIMPasterConfigManager.a()) {
        localConfigSeq.version.set(0);
      }
      for (;;)
      {
        localConfigSeq.compress.set(1);
        break;
        localConfigSeq.version.set(SharedPreUtils.D(paramQQAppInterface.getApp()));
      }
      i = dov.com.tencent.mobileqq.activity.richmedia.VideoFilterTools.a(paramQQAppInterface.getApp());
      localConfigSeq.version.set(i);
      localConfigSeq.compress.set(1);
      break;
      localConfigSeq.version.set(SharedPreUtils.ae(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString));
      localConfigSeq.compress.set(1);
      break;
      if (QLog.isColorLevel())
      {
        i = localArrayList2.size();
        paramQQAppInterface = localArrayList2.iterator();
        while (paramQQAppInterface.hasNext())
        {
          paramArrayOfInt = (Integer)paramQQAppInterface.next();
          QLog.d("SPLASH_ConfigServlet", 2, "addAllConfigs|send type: " + paramArrayOfInt + ",length: " + i);
        }
      }
      paramQQAppInterface = new ConfigurationService.DeviceInfo();
      if ((localArrayList2.contains(Integer.valueOf(1))) || (localArrayList2.contains(Integer.valueOf(2))) || (localArrayList2.contains(Integer.valueOf(3))) || (localArrayList2.contains(Integer.valueOf(18))) || (localArrayList2.contains(Integer.valueOf(12))))
      {
        paramArrayOfInt = new ConfigurationService.Screen();
        paramArrayOfInt.setHasFlag(true);
        paramArrayOfInt.width.set((int)DeviceInfoUtil.j());
        paramArrayOfInt.height.set((int)DeviceInfoUtil.k());
        paramQQAppInterface.screen = paramArrayOfInt;
        paramQQAppInterface.setHasFlag(true);
        localReqGetConfig.device_info = paramQQAppInterface;
      }
      if ((localArrayList2.contains(Integer.valueOf(47))) || (localArrayList2.contains(Integer.valueOf(65))) || (localArrayList2.contains(Integer.valueOf(156))) || (localArrayList2.contains(Integer.valueOf(297))))
      {
        paramArrayOfInt = new ConfigurationService.OS();
        paramArrayOfInt.setHasFlag(true);
        paramArrayOfInt.type.set(2);
        paramArrayOfInt.kernel.set(DeviceInfoUtil.n());
        paramArrayOfInt.sdk.set(String.valueOf(DeviceInfoUtil.a()));
        paramArrayOfInt.version.set(DeviceInfoUtil.f());
        paramArrayOfInt.rom.set(DeviceInfoUtil.k());
        paramQQAppInterface.brand.set(DeviceInfoUtil.i());
        paramQQAppInterface.model.set(DeviceInfoUtil.e());
        if (QLog.isDevelopLevel()) {
          QLog.w("SPLASH_ConfigServlet", 1, "addAllConfigs, brand[" + paramQQAppInterface.brand.get() + "], model[" + paramQQAppInterface.model.get() + "]");
        }
        paramQQAppInterface.os = paramArrayOfInt;
        paramQQAppInterface.setHasFlag(true);
        localReqGetConfig.device_info = paramQQAppInterface;
      }
      localReqGetConfig.setHasFlag(true);
      localReqGetConfig.seq_list.addAll(localArrayList1);
      if (paramIntent != null)
      {
        bool = paramIntent.getBooleanExtra("key_is_page_req", false);
        paramQQAppInterface = localReqGetConfig.is_page_req;
        if (!bool) {
          break label10612;
        }
      }
      label10612:
      for (i = 1;; i = 0)
      {
        paramQQAppInterface.set(i);
        paramQQAppInterface = paramIntent.getByteArrayExtra("key_cookies");
        if (paramQQAppInterface != null) {
          localReqGetConfig.cookies.set(ByteStringMicro.copyFrom(paramQQAppInterface));
        }
        paramQQAppInterface = a(localReqGetConfig);
        if ((paramQQAppInterface != null) && (paramQQAppInterface.length > 0)) {
          paramPacket.putSendData(paramQQAppInterface);
        }
        paramPacket.setSSOCommand("ConfigurationService.ReqGetConfig");
        return;
      }
      label10618:
      i = 1;
    }
  }
  
  private void a(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig, String paramString)
  {
    if (TextUtils.isEmpty(paramString))
    {
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, " handleConfigForTag tag is null !");
      }
      return;
    }
    Object localObject3 = null;
    Object localObject1 = null;
    Object localObject2 = null;
    int i = 0;
    int j = paramConfig.version.get();
    int k = SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramString);
    if (j != k)
    {
      if (paramConfig.msg_content_list.size() <= 0) {
        break label461;
      }
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramConfig != null) {
        break label330;
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, " handleConfigForTag content is null !");
      }
      i = 1;
      paramConfig = localObject2;
      label111:
      localObject1 = paramConfig;
      label114:
      paramConfig = (ConfigurationService.Config)localObject1;
      if (localObject1 == null) {
        paramConfig = "";
      }
      if (i == 0)
      {
        if (!"confess_config".equals(paramString)) {
          break label471;
        }
        SharedPreUtils.a(jdField_a_of_type_JavaLangString, "confess_config_sp").edit().putString("confess_config", paramConfig).apply();
        if (paramQQAppInterface.a(268))
        {
          localObject1 = ((ConfessManager)paramQQAppInterface.getManager(268)).a();
          if (localObject1 != null)
          {
            ((ConfessConfig)localObject1).a(paramConfig, false);
            ((ConfessHandler)paramQQAppInterface.a(125)).a(paramQQAppInterface, (ConfessConfig)localObject1);
          }
        }
      }
    }
    for (;;)
    {
      if (("batch_add_friend_for_troop_config".equals(paramString)) && (paramQQAppInterface.a(51))) {
        ((TroopManager)paramQQAppInterface.getManager(51)).a().a(paramConfig);
      }
      SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramString, j);
      localObject1 = paramConfig;
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.i("SPLASH_ConfigServlet", 2, String.format(Locale.getDefault(), "handleConfigForTag tag: %s, localVersion: %s, version: %s, result: %s, strContent: %s", new Object[] { paramString, Integer.valueOf(k), Integer.valueOf(j), Integer.valueOf(i), localObject1 }));
      return;
      label330:
      if (paramConfig.compress.get() == 1)
      {
        paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (paramConfig != null) {}
        for (;;)
        {
          try
          {
            paramConfig = new String(paramConfig, "UTF-8");
            i = 0;
          }
          catch (Throwable paramConfig)
          {
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, " handleConfigForTag Throwable:" + paramConfig.getMessage());
            }
            i = 2;
            paramConfig = null;
            continue;
          }
          i = 3;
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, " handleConfigForTag inflateConfigString error!");
          }
          paramConfig = null;
        }
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      i = 0;
      break label111;
      label461:
      i = 4;
      localObject1 = localObject3;
      break label114;
      label471:
      if ("extend_friend_config".equals(paramString))
      {
        SharedPreUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramString, paramConfig);
        if (paramQQAppInterface.a(263)) {
          ((ExtendFriendManager)paramQQAppInterface.getManager(263)).a(paramConfig);
        }
      }
      else
      {
        SharedPreUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramString, paramConfig);
      }
    }
  }
  
  public static void a(QQAppInterface paramQQAppInterface, String paramString)
  {
    jdField_a_of_type_JavaLangString = paramString;
    NewIntent localNewIntent = new NewIntent(paramQQAppInterface.getApp(), ConfigServlet.class);
    localNewIntent.putExtra("k_cmd_type", jdField_a_of_type_ArrayOfInt);
    localNewIntent.putExtra("key_uin", paramString);
    localNewIntent.putExtra("k_req_occasion", 0);
    localNewIntent.putExtra("key_is_all_config", true);
    paramQQAppInterface.startServlet(localNewIntent);
  }
  
  public static void a(QQAppInterface paramQQAppInterface, String paramString, int paramInt)
  {
    if ((paramQQAppInterface == null) || (TextUtils.isEmpty(paramString))) {
      if (QLog.isColorLevel()) {
        QLog.d("Q.nearby", 2, "HOTCHAT_SCENE_CONFIGS_CMD, app is null, or uin is empty");
      }
    }
    do
    {
      do
      {
        return;
        if ((paramInt == -1) || (SharedPreUtils.t(paramQQAppInterface.getApp()) != paramInt)) {
          break;
        }
      } while (!QLog.isColorLevel());
      QLog.d("Q.nearby", 2, "HOTCHAT_SCENE_CONFIGS_CMD, same version " + paramInt);
      return;
      jdField_a_of_type_JavaLangString = paramString;
      a(paramQQAppInterface, 49);
    } while (!QLog.isColorLevel());
    QLog.d("Q.nearby", 2, "HOTCHAT_SCENE_CONFIGS_CMD, " + paramInt);
  }
  
  public static void a(QQAppInterface paramQQAppInterface, String paramString1, int paramInt, String paramString2)
  {
    if ((paramQQAppInterface == null) || (TextUtils.isEmpty(paramString1)))
    {
      QLog.d("PatchLogTag", 1, "getPatchConfig app is null or uin is empty");
      return;
    }
    if ((paramInt != -1) && (PatchSharedPreUtil.a(paramQQAppInterface.getApplication()) == paramInt))
    {
      QLog.d("PatchLogTag", 1, "getPatchConfig same version=" + paramInt + ", reason=" + paramString2);
      return;
    }
    jdField_a_of_type_JavaLangString = paramString1;
    a(paramQQAppInterface, 46);
    QLog.d("PatchLogTag", 1, "getPatchConfig version=" + paramInt + ", reason=" + paramString2);
  }
  
  private void a(ConfigurationService.Config paramConfig, int paramInt, String paramString)
  {
    try
    {
      if ((paramConfig.content_list == null) || (paramConfig.content_list.size() <= 0)) {
        break label622;
      }
      k = 0;
      j = 0;
      i = 0;
    }
    catch (Exception paramConfig)
    {
      for (;;)
      {
        String str;
        JSONObject localJSONObject;
        label622:
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServlet", 2, "error: " + paramConfig.toString());
        }
        paramConfig.printStackTrace();
        continue;
        int m = j;
        int j = i;
        int i = m;
        label718:
        m = k + 1;
        int k = j;
        j = i;
        i = k;
        k = m;
      }
    }
    if (k < paramConfig.content_list.size())
    {
      str = (String)paramConfig.content_list.get(k);
      localJSONObject = new JSONObject(str);
      if (localJSONObject.has("apolloSwitch"))
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 67,content: " + str + ",version: " + paramConfig.version.get());
        }
        ApolloConfigUtils.a(str, getAppRuntime().getApplication());
        FileUtils.a(ApolloConstant.jdField_a_of_type_JavaLangString + "/apolloConfig.json", str);
        m = i;
        i = j;
        j = m;
        break label718;
      }
      if (localJSONObject.has("stepUrl"))
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 67,content: " + str + ",version: " + paramConfig.version.get());
        }
        ApolloConfigUtils.a(str);
        FileUtils.a(ApolloConstant.jdField_a_of_type_JavaLangString + "/apolloStepConfig" + paramString + ".json", str);
        i = j;
        j = 1;
        break label718;
      }
      if (localJSONObject.has("weatherConfig"))
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 67,content: " + str + ",version: " + paramConfig.version.get());
        }
        ApolloConfigUtils.b(str);
        FileUtils.a(ApolloConstant.jdField_a_of_type_JavaLangString + "/apolloWeatherConfig" + paramString + ".json", str);
        m = 1;
        j = i;
        i = m;
        break label718;
      }
    }
    else
    {
      if ((i == 0) && (FileUtils.a(ApolloConstant.jdField_a_of_type_JavaLangString + "/apolloStepConfig" + paramString + ".json")))
      {
        QLog.d("SPLASH_ConfigServlet", 1, "apollo config has not stepConfig so delete local file");
        FileUtils.d(ApolloConstant.jdField_a_of_type_JavaLangString + "/apolloStepConfig" + paramString + ".json");
      }
      if ((j == 0) && (FileUtils.a(ApolloConstant.jdField_a_of_type_JavaLangString + "/apolloWeatherConfig" + paramString + ".json")))
      {
        QLog.d("SPLASH_ConfigServlet", 1, "apollo config has not weatherConfig so delete local file");
        FileUtils.d(ApolloConstant.jdField_a_of_type_JavaLangString + "/apolloWeatherConfig" + paramString + ".json");
      }
      paramConfig = (QQAppInterface)getAppRuntime();
      if (paramConfig != null) {
        ((ApolloManager)paramConfig.getManager(152)).h();
      }
      for (;;)
      {
        SharedPreUtils.p(getAppRuntime().getApplication(), paramString, paramInt);
        return;
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 67,content_list is empty ,version: " + paramConfig.version.get());
        }
      }
    }
  }
  
  /* Error */
  private void a(ConfigurationService.Config paramConfig, QQAppInterface paramQQAppInterface)
  {
    // Byte code:
    //   0: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   3: ifeq +12 -> 15
    //   6: ldc 90
    //   8: iconst_2
    //   9: ldc_w 2708
    //   12: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   15: aload_1
    //   16: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   19: ifnull +419 -> 438
    //   22: aload_1
    //   23: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   26: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   29: ifle +409 -> 438
    //   32: aload_1
    //   33: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   36: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   39: istore_3
    //   40: aload_2
    //   41: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   44: ldc_w 1836
    //   47: aload_2
    //   48: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   51: invokestatic 985	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)I
    //   54: istore 4
    //   56: iload_3
    //   57: iload 4
    //   59: if_icmpeq +335 -> 394
    //   62: aload_2
    //   63: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   66: ldc_w 1836
    //   69: aload_2
    //   70: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   73: iload_3
    //   74: invokestatic 997	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;I)V
    //   77: aload_1
    //   78: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   81: invokevirtual 203	com/tencent/mobileqq/pb/PBRepeatMessageField:get	()Ljava/util/List;
    //   84: invokeinterface 128 1 0
    //   89: astore 6
    //   91: aload 6
    //   93: invokeinterface 133 1 0
    //   98: ifeq +226 -> 324
    //   101: aload 6
    //   103: invokeinterface 137 1 0
    //   108: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   111: astore 5
    //   113: aload 5
    //   115: ifnull +261 -> 376
    //   118: aload 5
    //   120: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   123: invokevirtual 1385	com/tencent/mobileqq/pb/PBBytesField:has	()Z
    //   126: ifeq +250 -> 376
    //   129: aload 5
    //   131: getfield 912	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:compress	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   134: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   137: iconst_1
    //   138: if_icmpne +222 -> 360
    //   141: aload 5
    //   143: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   146: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   149: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   152: invokestatic 932	com/tencent/mobileqq/olympic/utils/OlympicUtil:a	([B)[B
    //   155: astore 5
    //   157: aload 5
    //   159: ifnull +301 -> 460
    //   162: new 139	java/lang/String
    //   165: dup
    //   166: aload 5
    //   168: ldc_w 934
    //   171: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   174: astore 5
    //   176: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   179: ifeq +62 -> 241
    //   182: ldc 90
    //   184: iconst_2
    //   185: new 92	java/lang/StringBuilder
    //   188: dup
    //   189: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   192: ldc_w 2710
    //   195: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   198: aload_1
    //   199: getfield 192	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:type	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   202: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   205: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   208: ldc_w 2712
    //   211: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   214: aload_1
    //   215: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   218: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   221: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   224: ldc_w 2714
    //   227: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   230: aload 5
    //   232: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   235: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   238: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   241: aload 5
    //   243: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   246: ifne -155 -> 91
    //   249: aload_2
    //   250: invokevirtual 2328	com/tencent/mobileqq/app/QQAppInterface:getPreferences	()Landroid/content/SharedPreferences;
    //   253: invokeinterface 645 1 0
    //   258: new 92	java/lang/StringBuilder
    //   261: dup
    //   262: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   265: ldc_w 2716
    //   268: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   271: aload_2
    //   272: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   275: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   278: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   281: aload 5
    //   283: invokeinterface 1091 3 0
    //   288: invokeinterface 656 1 0
    //   293: pop
    //   294: aload_2
    //   295: aload 5
    //   297: invokestatic 2718	com/tencent/biz/pubaccount/util/PublicAccountConfigUtil:b	(Lcom/tencent/mobileqq/app/QQAppInterface;Ljava/lang/String;)V
    //   300: goto -209 -> 91
    //   303: astore_1
    //   304: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   307: ifeq +13 -> 320
    //   310: ldc 90
    //   312: iconst_2
    //   313: ldc_w 2720
    //   316: aload_1
    //   317: invokestatic 804	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V
    //   320: aload_1
    //   321: invokevirtual 605	java/lang/Exception:printStackTrace	()V
    //   324: return
    //   325: astore 5
    //   327: ldc 90
    //   329: iconst_1
    //   330: new 92	java/lang/StringBuilder
    //   333: dup
    //   334: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   337: ldc_w 2722
    //   340: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   343: aload 5
    //   345: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   348: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   351: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   354: aconst_null
    //   355: astore 5
    //   357: goto -181 -> 176
    //   360: aload 5
    //   362: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   365: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   368: invokevirtual 971	com/tencent/mobileqq/pb/ByteStringMicro:toStringUtf8	()Ljava/lang/String;
    //   371: astore 5
    //   373: goto -197 -> 176
    //   376: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   379: ifeq -288 -> 91
    //   382: ldc 90
    //   384: iconst_2
    //   385: ldc_w 2724
    //   388: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   391: goto -300 -> 91
    //   394: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   397: ifeq -73 -> 324
    //   400: ldc 90
    //   402: iconst_2
    //   403: new 92	java/lang/StringBuilder
    //   406: dup
    //   407: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   410: ldc_w 2726
    //   413: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   416: iload_3
    //   417: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   420: ldc_w 296
    //   423: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   426: iload 4
    //   428: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   431: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   434: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   437: return
    //   438: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   441: ifeq +12 -> 453
    //   444: ldc 90
    //   446: iconst_2
    //   447: ldc_w 2728
    //   450: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   453: ldc_w 2730
    //   456: putstatic 2731	com/tencent/biz/pubaccount/util/PublicAccountConfigUtil:d	Ljava/lang/String;
    //   459: return
    //   460: aconst_null
    //   461: astore 5
    //   463: goto -287 -> 176
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	466	0	this	ConfigServlet
    //   0	466	1	paramConfig	ConfigurationService.Config
    //   0	466	2	paramQQAppInterface	QQAppInterface
    //   39	378	3	i	int
    //   54	373	4	j	int
    //   111	185	5	localObject	Object
    //   325	19	5	localException	Exception
    //   355	107	5	str	String
    //   89	13	6	localIterator	Iterator
    // Exception table:
    //   from	to	target	type
    //   15	56	303	java/lang/Exception
    //   62	91	303	java/lang/Exception
    //   91	113	303	java/lang/Exception
    //   118	157	303	java/lang/Exception
    //   176	241	303	java/lang/Exception
    //   241	300	303	java/lang/Exception
    //   327	354	303	java/lang/Exception
    //   360	373	303	java/lang/Exception
    //   376	391	303	java/lang/Exception
    //   394	437	303	java/lang/Exception
    //   438	453	303	java/lang/Exception
    //   453	459	303	java/lang/Exception
    //   162	176	325	java/lang/Exception
  }
  
  private void a(ConfigurationService.ConfigSeq paramConfigSeq, QQAppInterface paramQQAppInterface, String paramString)
  {
    if (TextUtils.isEmpty(paramString))
    {
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, " initConfigVersionForTag tag is null !");
      }
      return;
    }
    if (SharedPreUtils.e(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramString) != AppSetting.jdField_a_of_type_Int)
    {
      SharedPreUtils.e(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramString, AppSetting.jdField_a_of_type_Int);
      SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramString, 0);
      paramConfigSeq.version.set(0);
      return;
    }
    int i = SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramString);
    paramConfigSeq.version.set(i);
  }
  
  private void a(ConfigurationService.ReqGetConfig paramReqGetConfig, ConfigurationService.ConfigSeq paramConfigSeq, QQAppInterface paramQQAppInterface)
  {
    int i;
    ArrayList localArrayList;
    for (;;)
    {
      try
      {
        if (SharedPreUtils.aC(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString) != AppSetting.jdField_a_of_type_Int)
        {
          SharedPreUtils.R(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, AppSetting.jdField_a_of_type_Int);
          SharedPreUtils.S(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 0);
          i = 0;
          paramConfigSeq.version.set(i);
          localArrayList = DeviceInfoUtil.a();
          if ((localArrayList == null) || (localArrayList.size() <= 0)) {
            break;
          }
          paramConfigSeq = localArrayList.iterator();
          if (!paramConfigSeq.hasNext()) {
            break;
          }
          localObject = (Integer)paramConfigSeq.next();
          paramReqGetConfig.carriers.add(localObject);
          continue;
          return;
        }
      }
      catch (Exception paramReqGetConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.i("CU_OPEN_CARD_GUIDE", 2, "onGetCUOpenCardGuideConfig", paramReqGetConfig);
        }
      }
      i = SharedPreUtils.aD(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
    }
    Object localObject = ((PhoneContactManager)paramQQAppInterface.getManager(10)).a();
    if (localObject != null)
    {
      paramQQAppInterface = ((RespondQueryQQBindingStat)localObject).nationCode;
      paramConfigSeq = paramQQAppInterface;
      if (paramQQAppInterface != null)
      {
        paramConfigSeq = paramQQAppInterface;
        if (paramQQAppInterface.startsWith("+")) {
          paramConfigSeq = paramQQAppInterface.substring(1);
        }
      }
      if ((TextUtils.isEmpty(paramConfigSeq)) && (TextUtils.isEmpty(((RespondQueryQQBindingStat)localObject).mobileNo))) {
        paramConfigSeq = "";
      }
    }
    for (;;)
    {
      if (!TextUtils.isEmpty(paramConfigSeq)) {
        paramReqGetConfig.bind_phone_no.set(paramConfigSeq);
      }
      if (!QLog.isColorLevel()) {
        break;
      }
      paramReqGetConfig = new StringBuilder(100);
      paramReqGetConfig.append("onGetCUOpenCardGuideConfig reqVersion=").append(i).append(", bindPhoneNum=").append(paramConfigSeq);
      paramReqGetConfig.append(", carrier[");
      if ((localArrayList != null) && (localArrayList.size() > 0))
      {
        paramConfigSeq = localArrayList.iterator();
        for (;;)
        {
          if (paramConfigSeq.hasNext())
          {
            paramReqGetConfig.append((Integer)paramConfigSeq.next()).append(",");
            continue;
            Locale localLocale = Locale.getDefault();
            paramQQAppInterface = paramConfigSeq;
            if (paramConfigSeq == null) {
              paramQQAppInterface = "";
            }
            paramConfigSeq = String.format(localLocale, "%s-%s", new Object[] { paramQQAppInterface, ((RespondQueryQQBindingStat)localObject).mobileNo });
            break;
          }
        }
      }
      paramReqGetConfig.append("]");
      QLog.i("CU_OPEN_CARD_GUIDE", 2, paramReqGetConfig.toString());
      return;
      paramConfigSeq = "";
    }
  }
  
  /* Error */
  private void a(ConfigurationService.RespGetConfig paramRespGetConfig, QQAppInterface paramQQAppInterface, Intent paramIntent, int[] paramArrayOfInt, boolean paramBoolean)
  {
    // Byte code:
    //   0: iload 5
    //   2: ifeq +30 -> 32
    //   5: aload_1
    //   6: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   12: ifne +20 -> 32
    //   15: aload_1
    //   16: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   19: ifnull +13 -> 32
    //   22: aload_1
    //   23: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   26: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   29: ifne +2244 -> 2273
    //   32: iload 5
    //   34: ifne +331 -> 365
    //   37: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   40: ifeq +12 -> 52
    //   43: ldc 90
    //   45: iconst_2
    //   46: ldc_w 2802
    //   49: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   52: iconst_0
    //   53: istore 6
    //   55: iload 6
    //   57: aload 4
    //   59: arraylength
    //   60: if_icmpge +14008 -> 14068
    //   63: aload 4
    //   65: iload 6
    //   67: iaload
    //   68: istore 7
    //   70: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   73: ifeq +30 -> 103
    //   76: ldc 90
    //   78: iconst_2
    //   79: new 92	java/lang/StringBuilder
    //   82: dup
    //   83: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   86: ldc_w 2804
    //   89: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   92: iload 7
    //   94: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   97: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   100: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   103: iload 7
    //   105: lookupswitch	default:+251->356, 46:+412->517, 69:+466->571, 86:+895->1000, 87:+714->819, 88:+557->662, 113:+1111->1216, 116:+323->428, 119:+1085->1190, 133:+1157->1262, 140:+1529->1634, 156:+251->356, 165:+1811->1916, 174:+1856->1961, 185:+1901->2006, 188:+1439->1544, 202:+1911->2016, 203:+1957->2062, 206:+1484->1589, 210:+2003->2108, 215:+2061->2166, 223:+1252->1357, 231:+2074->2179, 249:+1268->1373, 255:+2126->2231, 257:+1631->1736, 260:+1676->1781, 261:+2091->2196, 271:+1721->1826, 275:+1766->1871, 311:+1252->1357
    //   357: iconst_3
    //   358: iconst_1
    //   359: iadd
    //   360: istore 6
    //   362: goto -307 -> 55
    //   365: aload_1
    //   366: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   369: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   372: ifeq +21 -> 393
    //   375: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   378: ifeq -326 -> 52
    //   381: ldc 90
    //   383: iconst_2
    //   384: ldc_w 2806
    //   387: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   390: goto -338 -> 52
    //   393: aload_1
    //   394: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   397: ifnull +13 -> 410
    //   400: aload_1
    //   401: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   404: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   407: ifne -355 -> 52
    //   410: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   413: ifeq -361 -> 52
    //   416: ldc 90
    //   418: iconst_2
    //   419: ldc_w 2808
    //   422: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   425: goto -373 -> 52
    //   428: iload 5
    //   430: ifeq +13 -> 443
    //   433: aload_1
    //   434: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   437: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   440: ifeq -84 -> 356
    //   443: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   446: ifeq +12 -> 458
    //   449: ldc 90
    //   451: iconst_2
    //   452: ldc_w 2810
    //   455: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   458: aload_0
    //   459: getfield 2811	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_Boolean	Z
    //   462: ifne +35 -> 497
    //   465: aload_2
    //   466: ldc_w 2813
    //   469: ldc 13
    //   471: ldc 13
    //   473: ldc_w 2815
    //   476: ldc_w 2815
    //   479: iconst_0
    //   480: iconst_0
    //   481: ldc 13
    //   483: ldc 13
    //   485: ldc 13
    //   487: ldc 13
    //   489: invokestatic 2820	com/tencent/mobileqq/statistics/ReportController:b	(Lcom/tencent/mobileqq/app/QQAppInterface;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    //   492: aload_0
    //   493: iconst_1
    //   494: putfield 2811	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_Boolean	Z
    //   497: aload_2
    //   498: iconst_4
    //   499: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   502: checkcast 2034	com/tencent/mobileqq/app/ConfigHandler
    //   505: invokestatic 2825	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeController;
    //   508: invokevirtual 2828	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper;
    //   511: invokevirtual 2831	com/tencent/mobileqq/app/ConfigHandler:a	(Lcom/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper;)V
    //   514: goto -158 -> 356
    //   517: aload_1
    //   518: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   521: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   524: ifeq +23 -> 547
    //   527: getstatic 2835	com/tencent/common/app/BaseApplicationImpl:sApplication	Lcom/tencent/common/app/BaseApplicationImpl;
    //   530: aload_2
    //   531: invokevirtual 1822	com/tencent/mobileqq/app/QQAppInterface:c	()Ljava/lang/String;
    //   534: ldc_w 2837
    //   537: bipush 101
    //   539: ldc 13
    //   541: invokestatic 2842	com/tencent/hotpatch/utils/PatchReporter:a	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V
    //   544: goto -188 -> 356
    //   547: aload_1
    //   548: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   551: ifnull +13 -> 564
    //   554: aload_1
    //   555: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   558: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   561: ifne -205 -> 356
    //   564: aload_2
    //   565: invokestatic 2845	com/tencent/hotpatch/PatchFileManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)V
    //   568: goto -212 -> 356
    //   571: iload 5
    //   573: ifeq +13 -> 586
    //   576: aload_1
    //   577: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   580: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   583: ifeq -227 -> 356
    //   586: aload_2
    //   587: bipush 124
    //   589: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   592: checkcast 329	com/tencent/mobileqq/activity/qwallet/PasswdRedBagManager
    //   595: astore 16
    //   597: aload 16
    //   599: iconst_1
    //   600: putfield 340	com/tencent/mobileqq/activity/qwallet/PasswdRedBagManager:jdField_a_of_type_Boolean	Z
    //   603: aload 16
    //   605: getstatic 345	com/tencent/mobileqq/data/MessageForFoldMsgGrayTips:PASSWD_REDBAG_MSG_SWITCH_DEFAULT	Z
    //   608: putfield 347	com/tencent/mobileqq/activity/qwallet/PasswdRedBagManager:jdField_b_of_type_Boolean	Z
    //   611: aload 16
    //   613: getstatic 350	com/tencent/mobileqq/data/MessageForFoldMsgGrayTips:PASSWD_REDBAG_MSG_DISPLAY_NUM_DEFAULT	I
    //   616: putfield 352	com/tencent/mobileqq/activity/qwallet/PasswdRedBagManager:jdField_a_of_type_Int	I
    //   619: aload 16
    //   621: getstatic 360	com/tencent/mobileqq/data/MessageForFoldMsgGrayTips:PASSWD_REDBAG_MSG_INDEX_WITH_ID	Z
    //   624: putfield 362	com/tencent/mobileqq/activity/qwallet/PasswdRedBagManager:d	Z
    //   627: aload_2
    //   628: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   631: aload_2
    //   632: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   635: iconst_0
    //   636: aload 16
    //   638: getfield 347	com/tencent/mobileqq/activity/qwallet/PasswdRedBagManager:jdField_b_of_type_Boolean	Z
    //   641: aload 16
    //   643: getfield 352	com/tencent/mobileqq/activity/qwallet/PasswdRedBagManager:jdField_a_of_type_Int	I
    //   646: aload 16
    //   648: getfield 357	com/tencent/mobileqq/activity/qwallet/PasswdRedBagManager:c	Z
    //   651: aload 16
    //   653: getfield 362	com/tencent/mobileqq/activity/qwallet/PasswdRedBagManager:d	Z
    //   656: invokestatic 365	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;IZIZZ)V
    //   659: goto -303 -> 356
    //   662: iload 5
    //   664: ifne +51 -> 715
    //   667: aload_2
    //   668: bipush 88
    //   670: iconst_0
    //   671: iconst_0
    //   672: iconst_1
    //   673: iconst_1
    //   674: iconst_0
    //   675: invokestatic 2850	com/tencent/mobileqq/olympic/OlympicServlet:a	(Lmqq/app/AppRuntime;IIIIII)V
    //   678: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   681: ifeq -325 -> 356
    //   684: ldc_w 1940
    //   687: iconst_2
    //   688: new 92	java/lang/StringBuilder
    //   691: dup
    //   692: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   695: ldc_w 2852
    //   698: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   701: iload 5
    //   703: invokevirtual 833	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   706: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   709: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   712: goto -356 -> 356
    //   715: aload_1
    //   716: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   719: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   722: ifeq +61 -> 783
    //   725: aload_1
    //   726: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   729: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   732: istore 7
    //   734: aload_2
    //   735: bipush 88
    //   737: iconst_0
    //   738: iconst_0
    //   739: iconst_1
    //   740: iload 7
    //   742: iconst_0
    //   743: invokestatic 2850	com/tencent/mobileqq/olympic/OlympicServlet:a	(Lmqq/app/AppRuntime;IIIIII)V
    //   746: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   749: ifeq -393 -> 356
    //   752: ldc_w 1940
    //   755: iconst_2
    //   756: new 92	java/lang/StringBuilder
    //   759: dup
    //   760: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   763: ldc_w 2854
    //   766: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   769: iload 7
    //   771: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   774: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   777: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   780: goto -424 -> 356
    //   783: aload_1
    //   784: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   787: ifnull +13 -> 800
    //   790: aload_1
    //   791: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   794: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   797: ifne -441 -> 356
    //   800: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   803: ifeq -447 -> 356
    //   806: ldc_w 1940
    //   809: iconst_2
    //   810: ldc_w 2856
    //   813: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   816: goto -460 -> 356
    //   819: iload 5
    //   821: ifne +75 -> 896
    //   824: aload_2
    //   825: bipush 87
    //   827: iconst_0
    //   828: iconst_0
    //   829: iconst_1
    //   830: iconst_1
    //   831: iconst_0
    //   832: invokestatic 2850	com/tencent/mobileqq/olympic/OlympicServlet:a	(Lmqq/app/AppRuntime;IIIIII)V
    //   835: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   838: ifeq +31 -> 869
    //   841: ldc_w 1940
    //   844: iconst_2
    //   845: new 92	java/lang/StringBuilder
    //   848: dup
    //   849: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   852: ldc_w 2858
    //   855: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   858: iload 5
    //   860: invokevirtual 833	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   863: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   866: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   869: aload_2
    //   870: sipush 167
    //   873: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   876: checkcast 1912	com/tencent/mobileqq/ar/ArResourceManager
    //   879: astore 16
    //   881: aload 16
    //   883: ifnull -527 -> 356
    //   886: aload 16
    //   888: iconst_1
    //   889: iconst_0
    //   890: invokevirtual 2861	com/tencent/mobileqq/ar/ArResourceManager:a	(ZZ)V
    //   893: goto -537 -> 356
    //   896: aload_1
    //   897: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   900: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   903: ifeq +61 -> 964
    //   906: aload_1
    //   907: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   910: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   913: istore 7
    //   915: aload_2
    //   916: bipush 87
    //   918: iconst_0
    //   919: iconst_0
    //   920: iconst_1
    //   921: iload 7
    //   923: iconst_0
    //   924: invokestatic 2850	com/tencent/mobileqq/olympic/OlympicServlet:a	(Lmqq/app/AppRuntime;IIIIII)V
    //   927: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   930: ifeq -61 -> 869
    //   933: ldc_w 1940
    //   936: iconst_2
    //   937: new 92	java/lang/StringBuilder
    //   940: dup
    //   941: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   944: ldc_w 2863
    //   947: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   950: iload 7
    //   952: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   955: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   958: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   961: goto -92 -> 869
    //   964: aload_1
    //   965: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   968: ifnull +13 -> 981
    //   971: aload_1
    //   972: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   975: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   978: ifne -109 -> 869
    //   981: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   984: ifeq -115 -> 869
    //   987: ldc_w 1940
    //   990: iconst_2
    //   991: ldc_w 2865
    //   994: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   997: goto -128 -> 869
    //   1000: iload 5
    //   1002: ifne +81 -> 1083
    //   1005: aload_0
    //   1006: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   1009: bipush 86
    //   1011: iconst_0
    //   1012: iconst_0
    //   1013: iconst_1
    //   1014: iconst_1
    //   1015: iconst_0
    //   1016: invokestatic 2850	com/tencent/mobileqq/olympic/OlympicServlet:a	(Lmqq/app/AppRuntime;IIIIII)V
    //   1019: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1022: ifeq +31 -> 1053
    //   1025: ldc_w 1899
    //   1028: iconst_2
    //   1029: new 92	java/lang/StringBuilder
    //   1032: dup
    //   1033: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1036: ldc_w 2867
    //   1039: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1042: iload 5
    //   1044: invokevirtual 833	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   1047: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1050: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1053: aload_2
    //   1054: sipush 166
    //   1057: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   1060: checkcast 1879	com/tencent/mobileqq/olympic/OlympicManager
    //   1063: astore 16
    //   1065: aload 16
    //   1067: ifnull -711 -> 356
    //   1070: aload 16
    //   1072: invokevirtual 2869	com/tencent/mobileqq/olympic/OlympicManager:f	()V
    //   1075: aload 16
    //   1077: invokevirtual 2871	com/tencent/mobileqq/olympic/OlympicManager:g	()V
    //   1080: goto -724 -> 356
    //   1083: aload_1
    //   1084: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1087: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1090: ifeq +64 -> 1154
    //   1093: aload_1
    //   1094: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1097: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1100: istore 7
    //   1102: aload_0
    //   1103: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   1106: bipush 86
    //   1108: iconst_0
    //   1109: iconst_0
    //   1110: iconst_1
    //   1111: iload 7
    //   1113: iconst_0
    //   1114: invokestatic 2850	com/tencent/mobileqq/olympic/OlympicServlet:a	(Lmqq/app/AppRuntime;IIIIII)V
    //   1117: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1120: ifeq -67 -> 1053
    //   1123: ldc_w 1899
    //   1126: iconst_2
    //   1127: new 92	java/lang/StringBuilder
    //   1130: dup
    //   1131: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1134: ldc_w 2873
    //   1137: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1140: iload 7
    //   1142: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1145: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1148: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1151: goto -98 -> 1053
    //   1154: aload_1
    //   1155: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   1158: ifnull +13 -> 1171
    //   1161: aload_1
    //   1162: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   1165: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   1168: ifne -115 -> 1053
    //   1171: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1174: ifeq -121 -> 1053
    //   1177: ldc_w 1899
    //   1180: iconst_2
    //   1181: ldc_w 2875
    //   1184: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1187: goto -134 -> 1053
    //   1190: aload_2
    //   1191: bipush 53
    //   1193: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   1196: checkcast 2048	com/tencent/mobileqq/app/BabyQHandler
    //   1199: astore 16
    //   1201: aload 16
    //   1203: ifnull -847 -> 356
    //   1206: aload 16
    //   1208: iconst_0
    //   1209: iconst_0
    //   1210: invokevirtual 2876	com/tencent/mobileqq/app/BabyQHandler:a	(ZZ)V
    //   1213: goto -857 -> 356
    //   1216: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1219: ifeq +12 -> 1231
    //   1222: ldc 90
    //   1224: iconst_2
    //   1225: ldc_w 2878
    //   1228: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1231: aload_2
    //   1232: sipush 178
    //   1235: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   1238: checkcast 266	com/tencent/mobileqq/precover/PrecoverManager
    //   1241: astore 16
    //   1243: aload 16
    //   1245: ifnull -889 -> 356
    //   1248: aload 16
    //   1250: invokevirtual 271	com/tencent/mobileqq/precover/PrecoverManager:a	()V
    //   1253: aload 16
    //   1255: iconst_0
    //   1256: invokevirtual 274	com/tencent/mobileqq/precover/PrecoverManager:a	(Z)V
    //   1259: goto -903 -> 356
    //   1262: aload_2
    //   1263: sipush 189
    //   1266: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   1269: checkcast 1193	com/tencent/mobileqq/armap/config/ARMapConfigManager
    //   1272: astore 16
    //   1274: aload 16
    //   1276: invokevirtual 2881	com/tencent/mobileqq/armap/config/ARMapConfigManager:a	()Lcom/tencent/mobileqq/armap/config/ARMapConfig;
    //   1279: astore 17
    //   1281: aload_3
    //   1282: ldc_w 1436
    //   1285: iconst_0
    //   1286: invokevirtual 2884	android/content/Intent:getIntExtra	(Ljava/lang/String;I)I
    //   1289: istore 7
    //   1291: aload_1
    //   1292: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1295: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1298: istore 8
    //   1300: ldc 90
    //   1302: iconst_1
    //   1303: new 92	java/lang/StringBuilder
    //   1306: dup
    //   1307: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1310: ldc_w 2886
    //   1313: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1316: iload 8
    //   1318: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1321: ldc_w 2888
    //   1324: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1327: iload 7
    //   1329: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1332: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1335: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1338: aload 16
    //   1340: aload 17
    //   1342: iload 7
    //   1344: invokevirtual 2891	com/tencent/mobileqq/armap/config/ARMapConfigManager:a	(Lcom/tencent/mobileqq/armap/config/ARMapConfig;I)V
    //   1347: aload_2
    //   1348: iconst_0
    //   1349: iload 8
    //   1351: invokestatic 2896	com/tencent/mobileqq/armap/ArMapUtil:a	(Lcom/tencent/mobileqq/app/QQAppInterface;ZI)V
    //   1354: goto -998 -> 356
    //   1357: aload_2
    //   1358: invokestatic 1727	com/tencent/mobileqq/utils/BusinessCommonConfig:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)Lcom/tencent/mobileqq/utils/BusinessCommonConfig;
    //   1361: aload_2
    //   1362: iload 7
    //   1364: iload 5
    //   1366: aload_1
    //   1367: invokevirtual 2899	com/tencent/mobileqq/utils/BusinessCommonConfig:a	(Lcom/tencent/mobileqq/app/QQAppInterface;IZLcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig;)V
    //   1370: goto -1014 -> 356
    //   1373: iload 5
    //   1375: ifne +79 -> 1454
    //   1378: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1381: ifeq +30 -> 1411
    //   1384: ldc 90
    //   1386: iconst_2
    //   1387: new 92	java/lang/StringBuilder
    //   1390: dup
    //   1391: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1394: ldc_w 2901
    //   1397: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1400: iload 5
    //   1402: invokevirtual 833	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   1405: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1408: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1411: aload_2
    //   1412: sipush 253
    //   1415: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   1418: checkcast 2313	com/tencent/av/redpacket/config/AVRedPacketConfigManager
    //   1421: astore 16
    //   1423: aload 16
    //   1425: invokevirtual 2904	com/tencent/av/redpacket/config/AVRedPacketConfigManager:a	()Lcom/tencent/av/service/AVRedPacketConfig;
    //   1428: astore 17
    //   1430: ldc 90
    //   1432: iconst_1
    //   1433: ldc_w 2906
    //   1436: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1439: aload 16
    //   1441: aload 17
    //   1443: iconst_0
    //   1444: invokevirtual 2909	com/tencent/av/redpacket/config/AVRedPacketConfigManager:a	(Lcom/tencent/av/service/AVRedPacketConfig;Z)V
    //   1447: iconst_0
    //   1448: invokestatic 2912	com/tencent/av/redpacket/AVRedPacketDataCollector:a	(Z)V
    //   1451: goto -1095 -> 356
    //   1454: aload_1
    //   1455: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1458: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1461: ifeq +48 -> 1509
    //   1464: aload_1
    //   1465: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1468: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1471: istore 7
    //   1473: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1476: ifeq -65 -> 1411
    //   1479: ldc 90
    //   1481: iconst_2
    //   1482: new 92	java/lang/StringBuilder
    //   1485: dup
    //   1486: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1489: ldc_w 2914
    //   1492: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1495: iload 7
    //   1497: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1500: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1503: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1506: goto -95 -> 1411
    //   1509: aload_1
    //   1510: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   1513: ifnull +13 -> 1526
    //   1516: aload_1
    //   1517: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   1520: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   1523: ifne -112 -> 1411
    //   1526: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1529: ifeq -118 -> 1411
    //   1532: ldc 90
    //   1534: iconst_2
    //   1535: ldc_w 2916
    //   1538: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1541: goto -130 -> 1411
    //   1544: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1547: ifeq -1191 -> 356
    //   1550: aload_1
    //   1551: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1554: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1557: istore 7
    //   1559: ldc 90
    //   1561: iconst_2
    //   1562: new 92	java/lang/StringBuilder
    //   1565: dup
    //   1566: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1569: ldc_w 2918
    //   1572: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1575: iload 7
    //   1577: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1580: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1583: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1586: goto -1230 -> 356
    //   1589: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1592: ifeq -1236 -> 356
    //   1595: aload_1
    //   1596: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1599: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1602: istore 7
    //   1604: ldc 90
    //   1606: iconst_2
    //   1607: new 92	java/lang/StringBuilder
    //   1610: dup
    //   1611: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1614: ldc_w 2920
    //   1617: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1620: iload 7
    //   1622: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1625: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1628: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1631: goto -1275 -> 356
    //   1634: aload_1
    //   1635: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1638: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1641: istore 7
    //   1643: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1646: ifeq +30 -> 1676
    //   1649: ldc 90
    //   1651: iconst_2
    //   1652: new 92	java/lang/StringBuilder
    //   1655: dup
    //   1656: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1659: ldc_w 2922
    //   1662: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1665: iload 7
    //   1667: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1670: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1673: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1676: new 2924	java/util/HashMap
    //   1679: dup
    //   1680: invokespecial 2925	java/util/HashMap:<init>	()V
    //   1683: astore 16
    //   1685: aload 16
    //   1687: ldc_w 2927
    //   1690: new 92	java/lang/StringBuilder
    //   1693: dup
    //   1694: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1697: iload 7
    //   1699: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1702: ldc 13
    //   1704: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1707: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1710: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   1713: pop
    //   1714: invokestatic 76	com/tencent/qphone/base/util/BaseApplication:getContext	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   1717: invokestatic 1906	com/tencent/mobileqq/statistics/StatisticCollector:a	(Landroid/content/Context;)Lcom/tencent/mobileqq/statistics/StatisticCollector;
    //   1720: aconst_null
    //   1721: ldc_w 2932
    //   1724: iconst_0
    //   1725: lconst_0
    //   1726: lconst_0
    //   1727: aload 16
    //   1729: aconst_null
    //   1730: invokevirtual 2935	com/tencent/mobileqq/statistics/StatisticCollector:a	(Ljava/lang/String;Ljava/lang/String;ZJJLjava/util/HashMap;Ljava/lang/String;)V
    //   1733: goto -1377 -> 356
    //   1736: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1739: ifeq -1383 -> 356
    //   1742: aload_1
    //   1743: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1746: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1749: istore 7
    //   1751: ldc 90
    //   1753: iconst_2
    //   1754: invokestatic 1345	java/util/Locale:getDefault	()Ljava/util/Locale;
    //   1757: ldc_w 2937
    //   1760: iconst_1
    //   1761: anewarray 179	java/lang/Object
    //   1764: dup
    //   1765: iconst_0
    //   1766: iload 7
    //   1768: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1771: aastore
    //   1772: invokestatic 1350	java/lang/String:format	(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   1775: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1778: goto -1422 -> 356
    //   1781: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1784: ifeq -1428 -> 356
    //   1787: aload_1
    //   1788: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1791: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1794: istore 7
    //   1796: ldc 90
    //   1798: iconst_2
    //   1799: invokestatic 1345	java/util/Locale:getDefault	()Ljava/util/Locale;
    //   1802: ldc_w 2939
    //   1805: iconst_1
    //   1806: anewarray 179	java/lang/Object
    //   1809: dup
    //   1810: iconst_0
    //   1811: iload 7
    //   1813: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1816: aastore
    //   1817: invokestatic 1350	java/lang/String:format	(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   1820: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1823: goto -1467 -> 356
    //   1826: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1829: ifeq -1473 -> 356
    //   1832: aload_1
    //   1833: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1836: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1839: istore 7
    //   1841: ldc 90
    //   1843: iconst_2
    //   1844: invokestatic 1345	java/util/Locale:getDefault	()Ljava/util/Locale;
    //   1847: ldc_w 2941
    //   1850: iconst_1
    //   1851: anewarray 179	java/lang/Object
    //   1854: dup
    //   1855: iconst_0
    //   1856: iload 7
    //   1858: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1861: aastore
    //   1862: invokestatic 1350	java/lang/String:format	(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   1865: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1868: goto -1512 -> 356
    //   1871: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1874: ifeq -1518 -> 356
    //   1877: aload_1
    //   1878: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1881: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1884: istore 7
    //   1886: ldc 90
    //   1888: iconst_2
    //   1889: invokestatic 1345	java/util/Locale:getDefault	()Ljava/util/Locale;
    //   1892: ldc_w 2943
    //   1895: iconst_1
    //   1896: anewarray 179	java/lang/Object
    //   1899: dup
    //   1900: iconst_0
    //   1901: iload 7
    //   1903: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1906: aastore
    //   1907: invokestatic 1350	java/lang/String:format	(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   1910: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1913: goto -1557 -> 356
    //   1916: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1919: ifeq -1563 -> 356
    //   1922: aload_1
    //   1923: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1926: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1929: istore 7
    //   1931: ldc 90
    //   1933: iconst_2
    //   1934: new 92	java/lang/StringBuilder
    //   1937: dup
    //   1938: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1941: ldc_w 2945
    //   1944: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1947: iload 7
    //   1949: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1952: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1955: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   1958: goto -1602 -> 356
    //   1961: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1964: ifeq -1608 -> 356
    //   1967: aload_1
    //   1968: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   1971: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   1974: istore 7
    //   1976: ldc 90
    //   1978: iconst_2
    //   1979: new 92	java/lang/StringBuilder
    //   1982: dup
    //   1983: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1986: ldc_w 2947
    //   1989: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1992: iload 7
    //   1994: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1997: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2000: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   2003: goto -1647 -> 356
    //   2006: aload_2
    //   2007: invokestatic 2952	com/tencent/mobileqq/scribble/ScribbleResMgr:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)Lcom/tencent/mobileqq/scribble/ScribbleResMgr;
    //   2010: invokevirtual 2954	com/tencent/mobileqq/scribble/ScribbleResMgr:b	()V
    //   2013: goto -1657 -> 356
    //   2016: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   2019: ifeq -1663 -> 356
    //   2022: aload_1
    //   2023: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   2026: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   2029: istore 7
    //   2031: ldc_w 2752
    //   2034: iconst_2
    //   2035: new 92	java/lang/StringBuilder
    //   2038: dup
    //   2039: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   2042: ldc_w 2956
    //   2045: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2048: iload 7
    //   2050: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   2053: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2056: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   2059: goto -1703 -> 356
    //   2062: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   2065: ifeq -1709 -> 356
    //   2068: aload_1
    //   2069: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   2072: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   2075: istore 7
    //   2077: ldc_w 2958
    //   2080: iconst_2
    //   2081: new 92	java/lang/StringBuilder
    //   2084: dup
    //   2085: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   2088: ldc_w 2956
    //   2091: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2094: iload 7
    //   2096: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   2099: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2102: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   2105: goto -1749 -> 356
    //   2108: aload_2
    //   2109: sipush 227
    //   2112: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   2115: checkcast 2308	com/tencent/mobileqq/ocr/OCRManager
    //   2118: astore 16
    //   2120: aload_1
    //   2121: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   2124: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   2127: istore 7
    //   2129: ldc 90
    //   2131: iconst_1
    //   2132: new 92	java/lang/StringBuilder
    //   2135: dup
    //   2136: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   2139: ldc_w 2960
    //   2142: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2145: iload 7
    //   2147: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   2150: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2153: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   2156: aload 16
    //   2158: iconst_0
    //   2159: aconst_null
    //   2160: invokevirtual 2963	com/tencent/mobileqq/ocr/OCRManager:a	(ZLcom/tencent/mobileqq/ocr/data/OcrConfig;)V
    //   2163: goto -1807 -> 356
    //   2166: aload_1
    //   2167: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   2170: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   2173: invokestatic 2964	com/tencent/mobileqq/shortvideo/ShortVideoResourceManager:a	(I)V
    //   2176: goto -1820 -> 356
    //   2179: aload_2
    //   2180: sipush 231
    //   2183: aload_1
    //   2184: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   2187: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   2190: invokestatic 2967	com/tencent/mobileqq/activity/richmedia/subtitles/RDConfigServletProxy:a	(Lcom/tencent/mobileqq/app/QQAppInterface;II)V
    //   2193: goto -1837 -> 356
    //   2196: ldc 90
    //   2198: iconst_1
    //   2199: new 92	java/lang/StringBuilder
    //   2202: dup
    //   2203: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   2206: ldc_w 2969
    //   2209: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2212: aload_1
    //   2213: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   2216: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   2219: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   2222: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2225: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   2228: goto -1872 -> 356
    //   2231: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   2234: ifeq -1878 -> 356
    //   2237: ldc_w 2971
    //   2240: iconst_2
    //   2241: new 92	java/lang/StringBuilder
    //   2244: dup
    //   2245: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   2248: ldc_w 2973
    //   2251: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2254: aload_1
    //   2255: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   2258: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   2261: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   2264: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2267: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   2270: goto -1914 -> 356
    //   2273: invokestatic 2976	java/lang/System:currentTimeMillis	()J
    //   2276: lstore 12
    //   2278: aload_1
    //   2279: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   2282: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   2285: istore 8
    //   2287: new 215	java/util/ArrayList
    //   2290: dup
    //   2291: aload 4
    //   2293: arraylength
    //   2294: invokespecial 1407	java/util/ArrayList:<init>	(I)V
    //   2297: astore 18
    //   2299: iconst_0
    //   2300: istore 6
    //   2302: iload 6
    //   2304: aload 4
    //   2306: arraylength
    //   2307: if_icmpge +28 -> 2335
    //   2310: aload 18
    //   2312: aload 4
    //   2314: iload 6
    //   2316: iaload
    //   2317: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   2320: invokeinterface 252 2 0
    //   2325: pop
    //   2326: iload 6
    //   2328: iconst_1
    //   2329: iadd
    //   2330: istore 6
    //   2332: goto -30 -> 2302
    //   2335: aconst_null
    //   2336: astore 4
    //   2338: iconst_0
    //   2339: istore 10
    //   2341: iconst_0
    //   2342: istore 6
    //   2344: iload 6
    //   2346: iload 8
    //   2348: if_icmpge +9701 -> 12049
    //   2351: aload_1
    //   2352: getfield 2800	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:config_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   2355: iload 6
    //   2357: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   2360: checkcast 60	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config
    //   2363: astore 19
    //   2365: aload 19
    //   2367: ifnonnull +28 -> 2395
    //   2370: iload 10
    //   2372: istore 11
    //   2374: aload 4
    //   2376: astore 16
    //   2378: iload 6
    //   2380: iconst_1
    //   2381: iadd
    //   2382: istore 6
    //   2384: aload 16
    //   2386: astore 4
    //   2388: iload 11
    //   2390: istore 10
    //   2392: goto -48 -> 2344
    //   2395: aload 4
    //   2397: astore 16
    //   2399: iload 10
    //   2401: istore 11
    //   2403: aload 19
    //   2405: getfield 192	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:type	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   2408: invokevirtual 286	com/tencent/mobileqq/pb/PBInt32Field:has	()Z
    //   2411: ifeq -33 -> 2378
    //   2414: new 183	java/lang/Integer
    //   2417: dup
    //   2418: aload 19
    //   2420: getfield 192	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:type	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   2423: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   2426: invokespecial 2977	java/lang/Integer:<init>	(I)V
    //   2429: astore 16
    //   2431: aload 18
    //   2433: aload 16
    //   2435: invokeinterface 2980 2 0
    //   2440: pop
    //   2441: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   2444: ifeq +41 -> 2485
    //   2447: ldc 90
    //   2449: iconst_2
    //   2450: new 92	java/lang/StringBuilder
    //   2453: dup
    //   2454: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   2457: ldc_w 2982
    //   2460: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2463: aload 16
    //   2465: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   2468: ldc_w 2984
    //   2471: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2474: iload 8
    //   2476: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   2479: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2482: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   2485: aload 16
    //   2487: invokevirtual 490	java/lang/Integer:intValue	()I
    //   2490: lookupswitch	default:+11475->13965, 1:+3013->5503, 2:+3417->5907, 3:+3907->6397, 5:+4145->6635, 6:+6961->9451, 10:+4860->7350, 12:+4370->6860, 13:+5054->7544, 18:+11566->14056, 23:+5780->8270, 26:+5280->7770, 31:+5130->7620, 32:+5916->8406, 33:+5934->8424, 34:+5112->7602, 35:+5925->8415, 38:+6215->8705, 42:+6731->9221, 43:+6943->9433, 44:+2590->5080, 46:+6749->9239, 47:+2778->5268, 49:+6740->9230, 50:+6758->9248, 53:+5790->8280, 55:+4686->7176, 56:+6767->9257, 60:+6812->9302, 61:+6776->9266, 63:+6794->9284, 64:+6803->9293, 65:+2967->5457, 66:+6821->9311, 67:+6830->9320, 68:+6889->9379, 69:+6898->9388, 70:+6860->9350, 72:+6851->9341, 73:+6880->9370, 74:+6907->9397, 75:+6916->9406, 76:+5446->7936, 78:+5800->8290, 79:+6992->9482, 80:+6974->9464, 81:+7010->9500, 82:+7037->9527, 83:+7019->9509, 84:+5829->8319, 85:+7028->9518, 86:+7458->9948, 87:+7477->9967, 88:+7487->9977, 90:+7046->9536, 92:+7001->9491, 93:+6426->8916, 94:+5596->8086, 95:+7528->10018, 96:+7538->10028, 97:+7548->10038, 101:+5072->7562, 102:+5121->7611, 106:+7558->10048, 109:+7871->10361, 111:+6983->9473, 113:+6952->9442, 115:+5092->7582, 116:+2040->4530, 118:+7900->10390, 119:+7950->10440, 120:+7890->10380, 121:+7960->10450, 124:+7245->9735, 129:+7930->10420, 130:+7980->10470, 132:+7558->10048, 133:+8008->10498, 136:+8154->10644, 139:+5860->8350, 140:+8164->10654, 142:+7910->10400, 143:+7940->10430, 145:+8230->10720, 146:+7861->10351, 147:+7448->9938, 148:+6785->9275, 149:+7784->10274, 153:+8220->10710, 155:+8240->10730, 156:+11575->14065, 157:+7970->10460, 158:+5770->8260, 159:+8250->10740, 160:+8144->10634, 164:+8270->10760, 165:+8309->10799, 166:+8319->10809, 167:+5850->8340, 168:+8280->10770, 170:+8260->10750, 171:+8341->10831, 172:+7680->10170, 174:+8401->10891, 176:+7558->10048, 177:+8484->10974, 178:+8474->10964, 180:+8431->10921, 181:+8361->10851, 182:+8421->10911, 184:+8351->10841, 185:+8569->11059, 186:+8494->10984, 187:+8512->11002, 188:+7497->9987, 189:+8519->11009, 190:+8676->11166, 191:+8559->11049, 192:+7726->10216, 193:+1634->4124, 194:+8299->10789, 195:+8539->11029, 199:+8579->11069, 201:+7920->10410, 202:+8666->11156, 203:+8686->11176, 204:+9214->11704, 205:+7517->10007, 206:+7507->9997, 207:+8529->11019, 210:+8696->11186, 211:+7998->10488, 212:+8706->11196, 215:+8715->11205, 216:+7558->10048, 218:+8728->11218, 222:+8770->11260, 223:+5887->8377, 225:+8621->11111, 226:+5839->8329, 227:+8549->11039, 228:+6925->9415, 231:+8818->11308, 232:+7990->10480, 234:+8798->11288, 235:+8808->11298, 238:+8833->11323, 242:+8843->11333, 244:+8853->11343, 245:+8863->11353, 247:+8381->10871, 249:+8101->10591, 250:+8503->10993, 252:+8371->10861, 253:+8873->11363, 254:+9154->11644, 255:+8916->11406, 256:+6934->9424, 257:+8174->10664, 258:+8906->11396, 259:+9164->11654, 260:+8184->10674, 261:+9184->11674, 262:+9174->11664, 263:+7612->10102, 267:+9224->11714, 268:+9194->11684, 269:+9204->11694, 270:+6637->9127, 271:+8194->10684, 272:+8391->10881, 274:+9234->11724, 275:+8207->10697, 276:+5878->8368, 279:+9244->11734, 280:+9316->11806, 281:+9344->11834, 284:+9354->11844, 285:+9326->11816, 286:+5102->7592, 287:+5810->8300, 289:+9421->11911, 290:+9382->11872, 292:+6870->9360, 293:+9364->11854, 294:+5082->7572, 295:+8883->11373, 296:+8893->11383, 297:+9431->11921, 298:+5907->8397, 301:+9404->11894, 302:+9549->12039, 304:+9475->11965, 305:+9465->11955, 306:+9495->11985, 307:+9455->11945, 308:+9265->11755, 309:+9485->11975, 310:+5869->8359, 311:+5887->8377, 312:+9298->11788, 313:+9286->11776, 315:+8411->10901, 3205:+9445->11935
    //   4125: ldc_w -19456
    //   4128: ifnull -14810 -> -10682
    //   4131: idiv
    //   4132: aload 19
    //   4134: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   4137: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   4140: ifle +9825 -> 13965
    //   4143: aload 19
    //   4145: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   4148: iconst_0
    //   4149: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   4152: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   4155: astore 16
    //   4157: aload 16
    //   4159: ifnull +344 -> 4503
    //   4162: aload 16
    //   4164: getfield 912	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:compress	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   4167: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   4170: iconst_1
    //   4171: if_icmpne +232 -> 4403
    //   4174: aload 16
    //   4176: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   4179: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   4182: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   4185: invokestatic 932	com/tencent/mobileqq/olympic/utils/OlympicUtil:a	([B)[B
    //   4188: astore 17
    //   4190: aload 17
    //   4192: ifnull +9767 -> 13959
    //   4195: new 139	java/lang/String
    //   4198: dup
    //   4199: aload 17
    //   4201: ldc_w 934
    //   4204: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   4207: astore 16
    //   4209: aload 16
    //   4211: ifnull +9741 -> 13952
    //   4214: aload 19
    //   4216: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   4219: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   4222: istore 7
    //   4224: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4227: ifeq +42 -> 4269
    //   4230: ldc_w 2039
    //   4233: iconst_2
    //   4234: new 92	java/lang/StringBuilder
    //   4237: dup
    //   4238: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   4241: ldc_w 2986
    //   4244: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4247: iload 7
    //   4249: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   4252: ldc_w 2988
    //   4255: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4258: aload 16
    //   4260: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4263: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4266: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   4269: aload 16
    //   4271: invokestatic 2993	com/tencent/mobileqq/app/upgrade/UpgradeTIMWrapper:a	(Ljava/lang/String;)Lcom/tencent/mobileqq/app/upgrade/UpgradeTIMWrapper;
    //   4274: astore 17
    //   4276: aload 17
    //   4278: astore 4
    //   4280: aload_0
    //   4281: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   4284: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   4287: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   4290: iload 7
    //   4292: invokestatic 2995	com/tencent/mobileqq/utils/SharedPreUtils:v	(Landroid/content/Context;Ljava/lang/String;I)V
    //   4295: aload_2
    //   4296: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   4299: ldc_w 2997
    //   4302: invokestatic 3000	com/tencent/mobileqq/utils/PackageUtil:a	(Landroid/content/Context;Ljava/lang/String;)Z
    //   4305: ifne +114 -> 4419
    //   4308: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4311: ifeq +13 -> 4324
    //   4314: ldc_w 2039
    //   4317: iconst_2
    //   4318: ldc_w 3002
    //   4321: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4324: aload 16
    //   4326: invokestatic 3003	com/tencent/mobileqq/app/upgrade/UpgradeTIMWrapper:a	(Ljava/lang/String;)V
    //   4329: aload_2
    //   4330: aload 4
    //   4332: invokestatic 3006	com/tencent/mobileqq/app/upgrade/UpgradeTIMWrapper:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/app/upgrade/UpgradeTIMWrapper;)V
    //   4335: aload 4
    //   4337: astore 16
    //   4339: aload 16
    //   4341: astore 4
    //   4343: goto +9622 -> 13965
    //   4346: astore 16
    //   4348: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4351: ifeq +9625 -> 13976
    //   4354: aload 16
    //   4356: invokevirtual 3007	java/io/UnsupportedEncodingException:printStackTrace	()V
    //   4359: goto +9617 -> 13976
    //   4362: astore 16
    //   4364: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4367: ifeq +8 -> 4375
    //   4370: aload 16
    //   4372: invokevirtual 3008	java/lang/OutOfMemoryError:printStackTrace	()V
    //   4375: invokestatic 966	java/lang/System:gc	()V
    //   4378: new 139	java/lang/String
    //   4381: dup
    //   4382: aload 17
    //   4384: ldc_w 934
    //   4387: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   4390: astore 16
    //   4392: goto -183 -> 4209
    //   4395: astore 16
    //   4397: aconst_null
    //   4398: astore 16
    //   4400: goto -191 -> 4209
    //   4403: aload 16
    //   4405: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   4408: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   4411: invokevirtual 971	com/tencent/mobileqq/pb/ByteStringMicro:toStringUtf8	()Ljava/lang/String;
    //   4414: astore 16
    //   4416: goto -207 -> 4209
    //   4419: aload 4
    //   4421: astore 16
    //   4423: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4426: ifeq -87 -> 4339
    //   4429: ldc_w 2039
    //   4432: iconst_2
    //   4433: ldc_w 3010
    //   4436: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4439: aload 4
    //   4441: astore 16
    //   4443: goto -104 -> 4339
    //   4446: astore 17
    //   4448: aload 4
    //   4450: astore 16
    //   4452: iload 10
    //   4454: istore 11
    //   4456: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4459: ifeq -2081 -> 2378
    //   4462: ldc 90
    //   4464: iconst_2
    //   4465: new 92	java/lang/StringBuilder
    //   4468: dup
    //   4469: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   4472: ldc_w 3012
    //   4475: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4478: aload 17
    //   4480: invokevirtual 612	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   4483: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4486: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4489: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4492: aload 4
    //   4494: astore 16
    //   4496: iload 10
    //   4498: istore 11
    //   4500: goto -2122 -> 2378
    //   4503: aload 4
    //   4505: astore 16
    //   4507: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4510: ifeq -171 -> 4339
    //   4513: ldc_w 2039
    //   4516: iconst_2
    //   4517: ldc_w 3014
    //   4520: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4523: aload 4
    //   4525: astore 16
    //   4527: goto -188 -> 4339
    //   4530: aload_0
    //   4531: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   4534: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   4537: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   4540: invokestatic 2020	com/tencent/mobileqq/utils/SharedPreUtils:S	(Landroid/content/Context;Ljava/lang/String;)I
    //   4543: istore 7
    //   4545: aload 19
    //   4547: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   4550: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   4553: istore 9
    //   4555: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4558: ifeq +35 -> 4593
    //   4561: ldc 90
    //   4563: iconst_2
    //   4564: ldc_w 3016
    //   4567: iconst_2
    //   4568: anewarray 179	java/lang/Object
    //   4571: dup
    //   4572: iconst_0
    //   4573: iload 7
    //   4575: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   4578: aastore
    //   4579: dup
    //   4580: iconst_1
    //   4581: iload 9
    //   4583: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   4586: aastore
    //   4587: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   4590: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4593: aconst_null
    //   4594: astore 17
    //   4596: iload 7
    //   4598: iload 9
    //   4600: if_icmpeq +299 -> 4899
    //   4603: aload 19
    //   4605: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   4608: ifnull +14 -> 4622
    //   4611: aload 19
    //   4613: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   4616: invokevirtual 3018	com/tencent/mobileqq/pb/PBRepeatField:isEmpty	()Z
    //   4619: ifeq +198 -> 4817
    //   4622: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4625: ifeq +12 -> 4637
    //   4628: ldc 90
    //   4630: iconst_2
    //   4631: ldc_w 3020
    //   4634: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4637: ldc_w 3022
    //   4640: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   4643: invokestatic 3025	com/tencent/mobileqq/app/upgrade/UpgradeConfigManager:a	(Ljava/lang/String;Ljava/lang/String;)Z
    //   4646: pop
    //   4647: aconst_null
    //   4648: astore 16
    //   4650: aload_0
    //   4651: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   4654: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   4657: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   4660: iload 9
    //   4662: invokestatic 3027	com/tencent/mobileqq/utils/SharedPreUtils:u	(Landroid/content/Context;Ljava/lang/String;I)V
    //   4665: aload_2
    //   4666: iconst_4
    //   4667: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   4670: checkcast 2034	com/tencent/mobileqq/app/ConfigHandler
    //   4673: astore 19
    //   4675: aload 16
    //   4677: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4680: ifne +381 -> 5061
    //   4683: invokestatic 2825	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeController;
    //   4686: invokevirtual 2828	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper;
    //   4689: astore 17
    //   4691: aload 17
    //   4693: aload 16
    //   4695: invokevirtual 3030	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:a	(Ljava/lang/String;)V
    //   4698: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4701: ifeq +42 -> 4743
    //   4704: ldc 90
    //   4706: iconst_2
    //   4707: ldc_w 3032
    //   4710: iconst_2
    //   4711: anewarray 179	java/lang/Object
    //   4714: dup
    //   4715: iconst_0
    //   4716: getstatic 399	com/tencent/common/config/AppSetting:jdField_a_of_type_Int	I
    //   4719: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   4722: aastore
    //   4723: dup
    //   4724: iconst_1
    //   4725: aload 17
    //   4727: getfield 3035	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_b_of_type_ProtocolKQQConfigUpgradeInfo	Lprotocol/KQQConfig/UpgradeInfo;
    //   4730: getfield 3040	protocol/KQQConfig/UpgradeInfo:iUpgradeSdkId	I
    //   4733: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   4736: aastore
    //   4737: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   4740: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4743: getstatic 399	com/tencent/common/config/AppSetting:jdField_a_of_type_Int	I
    //   4746: aload 17
    //   4748: getfield 3035	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_b_of_type_ProtocolKQQConfigUpgradeInfo	Lprotocol/KQQConfig/UpgradeInfo;
    //   4751: getfield 3040	protocol/KQQConfig/UpgradeInfo:iUpgradeSdkId	I
    //   4754: if_icmplt +171 -> 4925
    //   4757: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4760: ifeq +12 -> 4772
    //   4763: ldc 90
    //   4765: iconst_2
    //   4766: ldc_w 3042
    //   4769: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4772: aload_2
    //   4773: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   4776: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   4779: iconst_0
    //   4780: invokestatic 3027	com/tencent/mobileqq/utils/SharedPreUtils:u	(Landroid/content/Context;Ljava/lang/String;I)V
    //   4783: ldc_w 3022
    //   4786: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   4789: invokestatic 3025	com/tencent/mobileqq/app/upgrade/UpgradeConfigManager:a	(Ljava/lang/String;Ljava/lang/String;)Z
    //   4792: pop
    //   4793: aload 17
    //   4795: getfield 3035	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_b_of_type_ProtocolKQQConfigUpgradeInfo	Lprotocol/KQQConfig/UpgradeInfo;
    //   4798: iconst_0
    //   4799: putfield 3045	protocol/KQQConfig/UpgradeInfo:iUpgradeType	I
    //   4802: aload 19
    //   4804: aload 17
    //   4806: invokevirtual 2831	com/tencent/mobileqq/app/ConfigHandler:a	(Lcom/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper;)V
    //   4809: aload 19
    //   4811: invokevirtual 3046	com/tencent/mobileqq/app/ConfigHandler:d	()V
    //   4814: goto +9151 -> 13965
    //   4817: aload 19
    //   4819: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   4822: iconst_0
    //   4823: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   4826: checkcast 139	java/lang/String
    //   4829: astore 16
    //   4831: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4834: ifeq +30 -> 4864
    //   4837: ldc 90
    //   4839: iconst_2
    //   4840: new 92	java/lang/StringBuilder
    //   4843: dup
    //   4844: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   4847: ldc_w 3048
    //   4850: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4853: aload 16
    //   4855: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   4858: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   4861: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4864: aload 16
    //   4866: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4869: ifeq +16 -> 4885
    //   4872: ldc_w 3022
    //   4875: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   4878: invokestatic 3025	com/tencent/mobileqq/app/upgrade/UpgradeConfigManager:a	(Ljava/lang/String;Ljava/lang/String;)Z
    //   4881: pop
    //   4882: goto -232 -> 4650
    //   4885: ldc_w 3022
    //   4888: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   4891: aload 16
    //   4893: invokestatic 3051	com/tencent/mobileqq/app/upgrade/UpgradeConfigManager:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    //   4896: goto -246 -> 4650
    //   4899: aload 17
    //   4901: astore 16
    //   4903: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4906: ifeq -241 -> 4665
    //   4909: ldc 90
    //   4911: iconst_2
    //   4912: ldc_w 3053
    //   4915: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4918: aload 17
    //   4920: astore 16
    //   4922: goto -257 -> 4665
    //   4925: aload_0
    //   4926: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   4929: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   4932: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   4935: invokestatic 2976	java/lang/System:currentTimeMillis	()J
    //   4938: invokestatic 3056	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;J)V
    //   4941: aload 17
    //   4943: monitorenter
    //   4944: aload 17
    //   4946: getfield 3057	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_a_of_type_Boolean	Z
    //   4949: ifne +27 -> 4976
    //   4952: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4955: ifeq +12 -> 4967
    //   4958: ldc 90
    //   4960: iconst_2
    //   4961: ldc_w 3059
    //   4964: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4967: aload 17
    //   4969: monitorexit
    //   4970: iconst_1
    //   4971: istore 10
    //   4973: goto +8992 -> 13965
    //   4976: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   4979: ifeq +12 -> 4991
    //   4982: ldc 90
    //   4984: iconst_2
    //   4985: ldc_w 3061
    //   4988: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   4991: aload 17
    //   4993: getfield 3063	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_b_of_type_Int	I
    //   4996: ifne +21 -> 5017
    //   4999: aload 17
    //   5001: getfield 3064	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_a_of_type_Int	I
    //   5004: iconst_1
    //   5005: if_icmpne +8982 -> 13987
    //   5008: iconst_1
    //   5009: istore 10
    //   5011: aload_2
    //   5012: iload 10
    //   5014: invokestatic 3065	com/tencent/mobileqq/app/ConfigHandler:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Z)V
    //   5017: aload 19
    //   5019: invokevirtual 3046	com/tencent/mobileqq/app/ConfigHandler:d	()V
    //   5022: invokestatic 2825	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeController;
    //   5025: aload 17
    //   5027: getfield 3035	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_b_of_type_ProtocolKQQConfigUpgradeInfo	Lprotocol/KQQConfig/UpgradeInfo;
    //   5030: aload 19
    //   5032: invokevirtual 3068	com/tencent/mobileqq/app/upgrade/UpgradeController:a	(Lprotocol/KQQConfig/UpgradeInfo;Lcom/tencent/mobileqq/app/upgrade/UpgradeController$OnHandleUpgradeFinishListener;)Z
    //   5035: pop
    //   5036: aload 17
    //   5038: monitorexit
    //   5039: iconst_1
    //   5040: istore 10
    //   5042: goto +8923 -> 13965
    //   5045: astore 16
    //   5047: aload 17
    //   5049: monitorexit
    //   5050: aload 16
    //   5052: athrow
    //   5053: astore 17
    //   5055: iconst_1
    //   5056: istore 10
    //   5058: goto -610 -> 4448
    //   5061: aload 19
    //   5063: invokevirtual 3046	com/tencent/mobileqq/app/ConfigHandler:d	()V
    //   5066: aload 19
    //   5068: invokestatic 2825	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeController;
    //   5071: invokevirtual 2828	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper;
    //   5074: invokevirtual 2831	com/tencent/mobileqq/app/ConfigHandler:a	(Lcom/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper;)V
    //   5077: goto +8888 -> 13965
    //   5080: aload 19
    //   5082: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5085: ifnull +141 -> 5226
    //   5088: aload 19
    //   5090: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5093: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   5096: ifle +130 -> 5226
    //   5099: aload_0
    //   5100: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   5103: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   5106: aload 19
    //   5108: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5111: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5114: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   5117: invokestatic 3070	com/tencent/mobileqq/utils/SharedPreUtils:i	(Landroid/content/Context;ILjava/lang/String;)V
    //   5120: iconst_0
    //   5121: istore 7
    //   5123: iload 7
    //   5125: aload 19
    //   5127: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5130: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   5133: if_icmpge +8869 -> 14002
    //   5136: aload 19
    //   5138: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5141: iload 7
    //   5143: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   5146: checkcast 139	java/lang/String
    //   5149: astore 16
    //   5151: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   5154: ifeq +47 -> 5201
    //   5157: ldc 90
    //   5159: iconst_2
    //   5160: new 92	java/lang/StringBuilder
    //   5163: dup
    //   5164: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   5167: ldc_w 3072
    //   5170: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5173: aload 16
    //   5175: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5178: ldc_w 325
    //   5181: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5184: aload 19
    //   5186: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5189: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5192: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5195: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5198: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   5201: aload 16
    //   5203: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   5206: ifne +8787 -> 13993
    //   5209: aload_2
    //   5210: bipush 59
    //   5212: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   5215: checkcast 3074	com/tencent/mobileqq/app/HotChatManager
    //   5218: aload 16
    //   5220: invokevirtual 3076	com/tencent/mobileqq/app/HotChatManager:d	(Ljava/lang/String;)V
    //   5223: goto +8770 -> 13993
    //   5226: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   5229: ifeq +8736 -> 13965
    //   5232: ldc 90
    //   5234: iconst_2
    //   5235: new 92	java/lang/StringBuilder
    //   5238: dup
    //   5239: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   5242: ldc_w 3078
    //   5245: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5248: aload 19
    //   5250: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5253: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5256: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5259: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5262: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   5265: goto +8700 -> 13965
    //   5268: aload 19
    //   5270: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5273: ifnull +142 -> 5415
    //   5276: aload 19
    //   5278: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5281: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   5284: ifle +131 -> 5415
    //   5287: aload_0
    //   5288: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   5291: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   5294: aload 19
    //   5296: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5299: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5302: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   5305: invokestatic 3080	com/tencent/mobileqq/utils/SharedPreUtils:g	(Landroid/content/Context;ILjava/lang/String;)V
    //   5308: iconst_0
    //   5309: istore 7
    //   5311: iload 7
    //   5313: aload 19
    //   5315: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5318: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   5321: if_icmpge +8693 -> 14014
    //   5324: aload 19
    //   5326: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5329: iload 7
    //   5331: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   5334: checkcast 139	java/lang/String
    //   5337: astore 16
    //   5339: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   5342: ifeq +47 -> 5389
    //   5345: ldc 90
    //   5347: iconst_2
    //   5348: new 92	java/lang/StringBuilder
    //   5351: dup
    //   5352: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   5355: ldc_w 3082
    //   5358: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5361: aload 16
    //   5363: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5366: ldc_w 325
    //   5369: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5372: aload 19
    //   5374: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5377: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5380: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5383: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5386: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   5389: aload 16
    //   5391: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   5394: ifne +8611 -> 14005
    //   5397: aload_2
    //   5398: bipush 51
    //   5400: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   5403: checkcast 3084	com/tencent/device/devicemgr/SmartDeviceProxyMgr
    //   5406: aload 16
    //   5408: iconst_0
    //   5409: invokevirtual 3085	com/tencent/device/devicemgr/SmartDeviceProxyMgr:a	(Ljava/lang/String;Z)V
    //   5412: goto +8593 -> 14005
    //   5415: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   5418: ifeq +8547 -> 13965
    //   5421: ldc 90
    //   5423: iconst_2
    //   5424: new 92	java/lang/StringBuilder
    //   5427: dup
    //   5428: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   5431: ldc_w 3087
    //   5434: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5437: aload 19
    //   5439: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5442: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5445: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5448: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5451: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   5454: goto +8511 -> 13965
    //   5457: aload 19
    //   5459: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5462: ifnull +8503 -> 13965
    //   5465: aload_0
    //   5466: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   5469: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   5472: aload 19
    //   5474: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5477: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5480: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   5483: invokestatic 3089	com/tencent/mobileqq/utils/SharedPreUtils:h	(Landroid/content/Context;ILjava/lang/String;)V
    //   5486: aload_2
    //   5487: bipush 51
    //   5489: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   5492: checkcast 3084	com/tencent/device/devicemgr/SmartDeviceProxyMgr
    //   5495: aload 19
    //   5497: invokevirtual 3090	com/tencent/device/devicemgr/SmartDeviceProxyMgr:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   5500: goto +8465 -> 13965
    //   5503: aload 19
    //   5505: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5508: ifnull +276 -> 5784
    //   5511: aload 19
    //   5513: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5516: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   5519: ifle +265 -> 5784
    //   5522: new 1838	java/io/File
    //   5525: dup
    //   5526: new 92	java/lang/StringBuilder
    //   5529: dup
    //   5530: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   5533: aload_0
    //   5534: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   5537: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   5540: invokevirtual 3094	mqq/app/MobileQQ:getFilesDir	()Ljava/io/File;
    //   5543: invokevirtual 3097	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   5546: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5549: ldc_w 3099
    //   5552: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5555: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5558: invokespecial 1842	java/io/File:<init>	(Ljava/lang/String;)V
    //   5561: astore 16
    //   5563: aload 16
    //   5565: invokevirtual 1845	java/io/File:exists	()Z
    //   5568: ifne +152 -> 5720
    //   5571: aload 16
    //   5573: invokevirtual 3102	java/io/File:mkdirs	()Z
    //   5576: pop
    //   5577: aload 19
    //   5579: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5582: invokevirtual 575	com/tencent/mobileqq/pb/PBRepeatField:get	()Ljava/util/List;
    //   5585: invokeinterface 128 1 0
    //   5590: astore 16
    //   5592: aload 16
    //   5594: invokeinterface 133 1 0
    //   5599: ifeq +8427 -> 14026
    //   5602: aload 16
    //   5604: invokeinterface 137 1 0
    //   5609: checkcast 139	java/lang/String
    //   5612: astore 17
    //   5614: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   5617: ifeq +47 -> 5664
    //   5620: ldc 90
    //   5622: iconst_2
    //   5623: new 92	java/lang/StringBuilder
    //   5626: dup
    //   5627: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   5630: ldc_w 3104
    //   5633: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5636: aload 17
    //   5638: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5641: ldc_w 325
    //   5644: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5647: aload 19
    //   5649: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5652: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5655: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5658: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5661: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   5664: aload_0
    //   5665: aload 17
    //   5667: aload 19
    //   5669: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5672: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5675: invokespecial 3106	com/tencent/mobileqq/config/splashlogo/ConfigServlet:f	(Ljava/lang/String;I)V
    //   5678: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   5681: ifeq -89 -> 5592
    //   5684: ldc 90
    //   5686: iconst_2
    //   5687: new 92	java/lang/StringBuilder
    //   5690: dup
    //   5691: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   5694: ldc_w 3108
    //   5697: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5700: aload 19
    //   5702: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5705: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5708: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5711: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5714: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   5717: goto -125 -> 5592
    //   5720: aload 16
    //   5722: ifnull -145 -> 5577
    //   5725: aload 16
    //   5727: invokevirtual 3111	java/io/File:isDirectory	()Z
    //   5730: ifeq -153 -> 5577
    //   5733: aload 16
    //   5735: invokevirtual 3115	java/io/File:listFiles	()[Ljava/io/File;
    //   5738: astore 16
    //   5740: aload 16
    //   5742: arraylength
    //   5743: istore 9
    //   5745: iconst_0
    //   5746: istore 7
    //   5748: iload 7
    //   5750: iload 9
    //   5752: if_icmpge -175 -> 5577
    //   5755: aload 16
    //   5757: iload 7
    //   5759: aaload
    //   5760: astore 17
    //   5762: aload 17
    //   5764: ifnull +8253 -> 14017
    //   5767: aload 17
    //   5769: invokevirtual 1845	java/io/File:exists	()Z
    //   5772: ifeq +8245 -> 14017
    //   5775: aload 17
    //   5777: invokevirtual 3118	java/io/File:delete	()Z
    //   5780: pop
    //   5781: goto +8236 -> 14017
    //   5784: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   5787: ifeq +36 -> 5823
    //   5790: ldc 90
    //   5792: iconst_2
    //   5793: new 92	java/lang/StringBuilder
    //   5796: dup
    //   5797: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   5800: ldc_w 3120
    //   5803: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5806: aload 19
    //   5808: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5811: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5814: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   5817: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5820: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   5823: new 1838	java/io/File
    //   5826: dup
    //   5827: new 92	java/lang/StringBuilder
    //   5830: dup
    //   5831: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   5834: aload_0
    //   5835: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   5838: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   5841: invokevirtual 3094	mqq/app/MobileQQ:getFilesDir	()Ljava/io/File;
    //   5844: invokevirtual 3097	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   5847: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5850: ldc_w 3122
    //   5853: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5856: ldc_w 3124
    //   5859: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5862: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   5865: invokespecial 1842	java/io/File:<init>	(Ljava/lang/String;)V
    //   5868: astore 16
    //   5870: aload 16
    //   5872: ifnull +9 -> 5881
    //   5875: aload 16
    //   5877: invokevirtual 3118	java/io/File:delete	()Z
    //   5880: pop
    //   5881: aload_0
    //   5882: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   5885: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   5888: aload 19
    //   5890: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   5893: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   5896: ldc_w 3126
    //   5899: ldc 13
    //   5901: invokestatic 3129	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;ILjava/lang/String;Ljava/lang/String;)V
    //   5904: goto +8061 -> 13965
    //   5907: aload 19
    //   5909: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5912: ifnull +323 -> 6235
    //   5915: aload 19
    //   5917: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5920: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   5923: ifle +312 -> 6235
    //   5926: getstatic 3134	com/tencent/mobileqq/config/Config:a	Lcom/tencent/mobileqq/config/struct/PicAndAdConf;
    //   5929: invokevirtual 3137	com/tencent/mobileqq/config/struct/PicAndAdConf:b	()V
    //   5932: aload 19
    //   5934: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   5937: invokevirtual 575	com/tencent/mobileqq/pb/PBRepeatField:get	()Ljava/util/List;
    //   5940: invokeinterface 128 1 0
    //   5945: astore 16
    //   5947: aload 16
    //   5949: invokeinterface 133 1 0
    //   5954: ifeq +82 -> 6036
    //   5957: aload 16
    //   5959: invokeinterface 137 1 0
    //   5964: checkcast 139	java/lang/String
    //   5967: astore 17
    //   5969: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   5972: ifeq +47 -> 6019
    //   5975: ldc 90
    //   5977: iconst_2
    //   5978: new 92	java/lang/StringBuilder
    //   5981: dup
    //   5982: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   5985: ldc_w 3139
    //   5988: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5991: aload 17
    //   5993: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   5996: ldc_w 325
    //   5999: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6002: aload 19
    //   6004: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6007: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6010: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6013: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6016: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   6019: aload_0
    //   6020: aload 17
    //   6022: aload 19
    //   6024: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6027: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6030: invokespecial 3141	com/tencent/mobileqq/config/splashlogo/ConfigServlet:d	(Ljava/lang/String;I)V
    //   6033: goto -86 -> 5947
    //   6036: new 3143	com/tencent/mobileqq/config/ConfigManager
    //   6039: dup
    //   6040: aload_0
    //   6041: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6044: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   6047: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   6050: invokespecial 3145	com/tencent/mobileqq/config/ConfigManager:<init>	(Landroid/content/Context;Ljava/lang/String;)V
    //   6053: astore 16
    //   6055: aload 16
    //   6057: ifnull +13 -> 6070
    //   6060: aload 16
    //   6062: invokevirtual 3146	com/tencent/mobileqq/config/ConfigManager:b	()V
    //   6065: aload 16
    //   6067: invokevirtual 3147	com/tencent/mobileqq/config/ConfigManager:c	()V
    //   6070: invokestatic 76	com/tencent/qphone/base/util/BaseApplication:getContext	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   6073: ldc_w 3149
    //   6076: iconst_0
    //   6077: invokevirtual 639	com/tencent/qphone/base/util/BaseApplication:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   6080: astore 16
    //   6082: aload 16
    //   6084: invokeinterface 645 1 0
    //   6089: new 92	java/lang/StringBuilder
    //   6092: dup
    //   6093: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6096: ldc_w 3151
    //   6099: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6102: aload_0
    //   6103: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6106: invokevirtual 3152	mqq/app/AppRuntime:getAccount	()Ljava/lang/String;
    //   6109: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6112: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6115: iconst_1
    //   6116: invokeinterface 653 3 0
    //   6121: invokeinterface 656 1 0
    //   6126: pop
    //   6127: aload 16
    //   6129: invokeinterface 645 1 0
    //   6134: new 92	java/lang/StringBuilder
    //   6137: dup
    //   6138: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6141: ldc_w 3154
    //   6144: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6147: aload_0
    //   6148: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6151: invokevirtual 3152	mqq/app/AppRuntime:getAccount	()Ljava/lang/String;
    //   6154: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6157: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6160: iconst_1
    //   6161: invokeinterface 653 3 0
    //   6166: invokeinterface 656 1 0
    //   6171: pop
    //   6172: aload_0
    //   6173: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6176: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   6179: aload 19
    //   6181: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6184: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6187: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   6190: invokestatic 3070	com/tencent/mobileqq/utils/SharedPreUtils:i	(Landroid/content/Context;ILjava/lang/String;)V
    //   6193: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   6196: ifeq +7833 -> 14029
    //   6199: ldc 90
    //   6201: iconst_2
    //   6202: new 92	java/lang/StringBuilder
    //   6205: dup
    //   6206: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6209: ldc_w 3156
    //   6212: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6215: aload 19
    //   6217: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6220: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6223: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6226: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6229: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   6232: goto +7797 -> 14029
    //   6235: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   6238: ifeq +36 -> 6274
    //   6241: ldc 90
    //   6243: iconst_2
    //   6244: new 92	java/lang/StringBuilder
    //   6247: dup
    //   6248: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6251: ldc_w 3158
    //   6254: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6257: aload 19
    //   6259: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6262: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6265: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6268: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6271: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   6274: getstatic 3134	com/tencent/mobileqq/config/Config:a	Lcom/tencent/mobileqq/config/struct/PicAndAdConf;
    //   6277: invokevirtual 3137	com/tencent/mobileqq/config/struct/PicAndAdConf:b	()V
    //   6280: getstatic 3134	com/tencent/mobileqq/config/Config:a	Lcom/tencent/mobileqq/config/struct/PicAndAdConf;
    //   6283: invokevirtual 3159	com/tencent/mobileqq/config/struct/PicAndAdConf:c	()V
    //   6286: new 3143	com/tencent/mobileqq/config/ConfigManager
    //   6289: dup
    //   6290: aload_0
    //   6291: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6294: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   6297: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   6300: invokespecial 3145	com/tencent/mobileqq/config/ConfigManager:<init>	(Landroid/content/Context;Ljava/lang/String;)V
    //   6303: astore 16
    //   6305: aload 16
    //   6307: ifnull +13 -> 6320
    //   6310: aload 16
    //   6312: invokevirtual 3146	com/tencent/mobileqq/config/ConfigManager:b	()V
    //   6315: aload 16
    //   6317: invokevirtual 3147	com/tencent/mobileqq/config/ConfigManager:c	()V
    //   6320: invokestatic 76	com/tencent/qphone/base/util/BaseApplication:getContext	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   6323: ldc_w 3149
    //   6326: iconst_0
    //   6327: invokevirtual 639	com/tencent/qphone/base/util/BaseApplication:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   6330: invokeinterface 645 1 0
    //   6335: new 92	java/lang/StringBuilder
    //   6338: dup
    //   6339: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6342: ldc_w 3154
    //   6345: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6348: aload_0
    //   6349: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6352: invokevirtual 3152	mqq/app/AppRuntime:getAccount	()Ljava/lang/String;
    //   6355: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6358: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6361: iconst_0
    //   6362: invokeinterface 653 3 0
    //   6367: invokeinterface 656 1 0
    //   6372: pop
    //   6373: aload_0
    //   6374: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6377: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   6380: aload 19
    //   6382: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6385: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6388: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   6391: invokestatic 3070	com/tencent/mobileqq/utils/SharedPreUtils:i	(Landroid/content/Context;ILjava/lang/String;)V
    //   6394: goto +7571 -> 13965
    //   6397: aload 19
    //   6399: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   6402: ifnull +95 -> 6497
    //   6405: aload 19
    //   6407: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   6410: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   6413: ifle +84 -> 6497
    //   6416: aload 19
    //   6418: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   6421: iconst_0
    //   6422: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   6425: checkcast 139	java/lang/String
    //   6428: astore 16
    //   6430: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   6433: ifeq +47 -> 6480
    //   6436: ldc 90
    //   6438: iconst_2
    //   6439: new 92	java/lang/StringBuilder
    //   6442: dup
    //   6443: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6446: ldc_w 3161
    //   6449: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6452: aload 16
    //   6454: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6457: ldc_w 325
    //   6460: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6463: aload 19
    //   6465: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6468: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6471: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6474: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6477: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   6480: aload_0
    //   6481: aload 16
    //   6483: aload 19
    //   6485: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6488: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6491: invokespecial 3163	com/tencent/mobileqq/config/splashlogo/ConfigServlet:e	(Ljava/lang/String;I)V
    //   6494: goto +7471 -> 13965
    //   6497: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   6500: ifeq +36 -> 6536
    //   6503: ldc 90
    //   6505: iconst_2
    //   6506: new 92	java/lang/StringBuilder
    //   6509: dup
    //   6510: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6513: ldc_w 3165
    //   6516: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6519: aload 19
    //   6521: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6524: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6527: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6530: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6533: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   6536: new 1838	java/io/File
    //   6539: dup
    //   6540: new 92	java/lang/StringBuilder
    //   6543: dup
    //   6544: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6547: aload_0
    //   6548: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6551: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   6554: invokevirtual 3094	mqq/app/MobileQQ:getFilesDir	()Ljava/io/File;
    //   6557: invokevirtual 3097	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   6560: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6563: ldc_w 3122
    //   6566: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6569: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   6572: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6575: ldc_w 3122
    //   6578: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6581: ldc_w 3167
    //   6584: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6587: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6590: invokespecial 1842	java/io/File:<init>	(Ljava/lang/String;)V
    //   6593: astore 16
    //   6595: aload 16
    //   6597: invokevirtual 1845	java/io/File:exists	()Z
    //   6600: ifeq +9 -> 6609
    //   6603: aload 16
    //   6605: invokevirtual 3118	java/io/File:delete	()Z
    //   6608: pop
    //   6609: aload_0
    //   6610: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6613: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   6616: aload 19
    //   6618: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6621: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6624: ldc 13
    //   6626: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   6629: invokestatic 3169	com/tencent/mobileqq/utils/SharedPreUtils:b	(Landroid/content/Context;ILjava/lang/String;Ljava/lang/String;)V
    //   6632: goto +7333 -> 13965
    //   6635: aload 19
    //   6637: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   6640: ifnull +178 -> 6818
    //   6643: aload 19
    //   6645: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   6648: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   6651: ifle +167 -> 6818
    //   6654: new 215	java/util/ArrayList
    //   6657: dup
    //   6658: invokespecial 216	java/util/ArrayList:<init>	()V
    //   6661: astore 16
    //   6663: iconst_0
    //   6664: istore 7
    //   6666: iload 7
    //   6668: aload 19
    //   6670: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   6673: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   6676: if_icmpge +92 -> 6768
    //   6679: aload 19
    //   6681: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   6684: iload 7
    //   6686: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   6689: checkcast 139	java/lang/String
    //   6692: astore 17
    //   6694: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   6697: ifeq +47 -> 6744
    //   6700: ldc 90
    //   6702: iconst_2
    //   6703: new 92	java/lang/StringBuilder
    //   6706: dup
    //   6707: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6710: ldc_w 3171
    //   6713: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6716: aload 17
    //   6718: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6721: ldc_w 325
    //   6724: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6727: aload 19
    //   6729: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6732: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6735: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6738: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6741: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   6744: aload_0
    //   6745: aload 17
    //   6747: invokespecial 3173	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Ljava/lang/String;)Lcom/tencent/mobileqq/config/operation/QQOperationViopTipTask;
    //   6750: astore 17
    //   6752: aload 17
    //   6754: ifnull +7278 -> 14032
    //   6757: aload 16
    //   6759: aload 17
    //   6761: invokevirtual 1410	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   6764: pop
    //   6765: goto +7267 -> 14032
    //   6768: aload_0
    //   6769: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6772: checkcast 213	com/tencent/mobileqq/app/QQAppInterface
    //   6775: invokestatic 3178	com/tencent/mobileqq/config/operation/QQOperateManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)Lcom/tencent/mobileqq/config/operation/QQOperateManager;
    //   6778: aload_0
    //   6779: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6782: checkcast 213	com/tencent/mobileqq/app/QQAppInterface
    //   6785: aload 16
    //   6787: invokevirtual 3181	com/tencent/mobileqq/config/operation/QQOperateManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Ljava/util/ArrayList;)V
    //   6790: aload_0
    //   6791: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6794: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   6797: aload_0
    //   6798: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   6801: invokevirtual 3152	mqq/app/AppRuntime:getAccount	()Ljava/lang/String;
    //   6804: aload 19
    //   6806: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6809: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6812: invokestatic 3182	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;Ljava/lang/String;I)V
    //   6815: goto +7150 -> 13965
    //   6818: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   6821: ifeq +7144 -> 13965
    //   6824: ldc 90
    //   6826: iconst_2
    //   6827: new 92	java/lang/StringBuilder
    //   6830: dup
    //   6831: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6834: ldc_w 3184
    //   6837: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6840: aload 19
    //   6842: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6845: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6848: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6851: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6854: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   6857: goto +7108 -> 13965
    //   6860: aload_2
    //   6861: bipush 73
    //   6863: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   6866: checkcast 1600	com/tencent/mobileqq/config/struct/NearbyBannerManager
    //   6869: astore 16
    //   6871: aload 16
    //   6873: invokevirtual 3187	com/tencent/mobileqq/config/struct/NearbyBannerManager:a	()Ljava/util/Set;
    //   6876: astore 20
    //   6878: new 3136	com/tencent/mobileqq/config/struct/PicAndAdConf
    //   6881: dup
    //   6882: bipush 21
    //   6884: iconst_2
    //   6885: invokespecial 3190	com/tencent/mobileqq/config/struct/PicAndAdConf:<init>	(SB)V
    //   6888: astore 17
    //   6890: aload 19
    //   6892: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   6895: ifnull +129 -> 7024
    //   6898: aload 19
    //   6900: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   6903: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   6906: ifle +118 -> 7024
    //   6909: aload 19
    //   6911: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   6914: invokevirtual 575	com/tencent/mobileqq/pb/PBRepeatField:get	()Ljava/util/List;
    //   6917: invokeinterface 128 1 0
    //   6922: astore 21
    //   6924: aload 21
    //   6926: invokeinterface 133 1 0
    //   6931: ifeq +132 -> 7063
    //   6934: aload 21
    //   6936: invokeinterface 137 1 0
    //   6941: checkcast 139	java/lang/String
    //   6944: astore 22
    //   6946: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   6949: ifeq +47 -> 6996
    //   6952: ldc 90
    //   6954: iconst_2
    //   6955: new 92	java/lang/StringBuilder
    //   6958: dup
    //   6959: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   6962: ldc_w 3192
    //   6965: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6968: aload 22
    //   6970: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6973: ldc_w 325
    //   6976: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   6979: aload 19
    //   6981: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   6984: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   6987: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   6990: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   6993: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   6996: aload 17
    //   6998: aload 22
    //   7000: aload 20
    //   7002: invokestatic 3195	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/config/struct/PicAndAdConf;Ljava/lang/String;Ljava/util/Set;)Z
    //   7005: pop
    //   7006: aload 16
    //   7008: aload 17
    //   7010: aload 19
    //   7012: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7015: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7018: invokevirtual 3198	com/tencent/mobileqq/config/struct/NearbyBannerManager:a	(Lcom/tencent/mobileqq/config/struct/PicAndAdConf;I)V
    //   7021: goto -97 -> 6924
    //   7024: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   7027: ifeq +36 -> 7063
    //   7030: ldc 90
    //   7032: iconst_2
    //   7033: new 92	java/lang/StringBuilder
    //   7036: dup
    //   7037: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   7040: ldc_w 3200
    //   7043: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7046: aload 19
    //   7048: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7051: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7054: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7057: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7060: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   7063: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   7066: ifeq +76 -> 7142
    //   7069: new 92	java/lang/StringBuilder
    //   7072: dup
    //   7073: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   7076: ldc_w 3202
    //   7079: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7082: astore 20
    //   7084: aload 19
    //   7086: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7089: ifnonnull +69 -> 7158
    //   7092: iconst_0
    //   7093: istore 7
    //   7095: ldc 90
    //   7097: iconst_2
    //   7098: aload 20
    //   7100: iload 7
    //   7102: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7105: ldc_w 3204
    //   7108: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7111: aload 17
    //   7113: invokevirtual 3205	com/tencent/mobileqq/config/struct/PicAndAdConf:a	()I
    //   7116: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7119: ldc_w 3207
    //   7122: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7125: aload 19
    //   7127: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7130: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7133: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7136: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7139: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   7142: aload 16
    //   7144: aload 19
    //   7146: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7149: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7152: invokevirtual 3208	com/tencent/mobileqq/config/struct/NearbyBannerManager:a	(I)V
    //   7155: goto +6810 -> 13965
    //   7158: aload 19
    //   7160: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7163: invokevirtual 575	com/tencent/mobileqq/pb/PBRepeatField:get	()Ljava/util/List;
    //   7166: invokeinterface 124 1 0
    //   7171: istore 7
    //   7173: goto -78 -> 7095
    //   7176: aload 19
    //   7178: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7181: ifnull +127 -> 7308
    //   7184: aload 19
    //   7186: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7189: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   7192: ifle +116 -> 7308
    //   7195: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   7198: ifeq +57 -> 7255
    //   7201: ldc 90
    //   7203: iconst_2
    //   7204: new 92	java/lang/StringBuilder
    //   7207: dup
    //   7208: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   7211: ldc_w 3210
    //   7214: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7217: aload 19
    //   7219: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7222: iconst_0
    //   7223: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   7226: checkcast 139	java/lang/String
    //   7229: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7232: ldc_w 325
    //   7235: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7238: aload 19
    //   7240: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7243: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7246: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7249: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7252: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   7255: aload_2
    //   7256: sipush 137
    //   7259: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   7262: checkcast 3212	com/tencent/mobileqq/activity/bless/BlessManager
    //   7265: aload 19
    //   7267: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7270: iconst_0
    //   7271: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   7274: checkcast 139	java/lang/String
    //   7277: invokevirtual 3213	com/tencent/mobileqq/activity/bless/BlessManager:a	(Ljava/lang/String;)V
    //   7280: aload_0
    //   7281: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   7284: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   7287: aload_0
    //   7288: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   7291: invokevirtual 3152	mqq/app/AppRuntime:getAccount	()Ljava/lang/String;
    //   7294: aload 19
    //   7296: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7299: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7302: invokestatic 3214	com/tencent/mobileqq/utils/SharedPreUtils:b	(Landroid/content/Context;Ljava/lang/String;I)V
    //   7305: goto +6660 -> 13965
    //   7308: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   7311: ifeq +6654 -> 13965
    //   7314: ldc 90
    //   7316: iconst_2
    //   7317: new 92	java/lang/StringBuilder
    //   7320: dup
    //   7321: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   7324: ldc_w 3216
    //   7327: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7330: aload 19
    //   7332: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7335: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7338: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7341: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7344: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   7347: goto +6618 -> 13965
    //   7350: aconst_null
    //   7351: astore 17
    //   7353: aload 17
    //   7355: astore 16
    //   7357: aload 19
    //   7359: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7362: ifnull +28 -> 7390
    //   7365: aload 17
    //   7367: astore 16
    //   7369: aload 19
    //   7371: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7374: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   7377: ifle +13 -> 7390
    //   7380: aload 19
    //   7382: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7385: invokevirtual 575	com/tencent/mobileqq/pb/PBRepeatField:get	()Ljava/util/List;
    //   7388: astore 16
    //   7390: aload 16
    //   7392: ifnull +106 -> 7498
    //   7395: aload 16
    //   7397: invokeinterface 124 1 0
    //   7402: ifle +96 -> 7498
    //   7405: aload 16
    //   7407: iconst_0
    //   7408: invokeinterface 527 2 0
    //   7413: checkcast 139	java/lang/String
    //   7416: astore 16
    //   7418: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   7421: ifeq +47 -> 7468
    //   7424: ldc 90
    //   7426: iconst_2
    //   7427: new 92	java/lang/StringBuilder
    //   7430: dup
    //   7431: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   7434: ldc_w 3218
    //   7437: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7440: aload 16
    //   7442: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7445: ldc_w 325
    //   7448: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7451: aload 19
    //   7453: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7456: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7459: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7462: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7465: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   7468: aload 16
    //   7470: invokestatic 3221	com/tencent/biz/bmqq/util/BmqqSegmentUtil:a	(Ljava/lang/String;)V
    //   7473: aload 19
    //   7475: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7478: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7481: istore 7
    //   7483: aload_0
    //   7484: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   7487: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   7490: iload 7
    //   7492: invokestatic 3224	com/tencent/mobileqq/utils/SharedPreUtils:b	(Landroid/content/Context;I)V
    //   7495: goto +6470 -> 13965
    //   7498: aconst_null
    //   7499: invokestatic 3221	com/tencent/biz/bmqq/util/BmqqSegmentUtil:a	(Ljava/lang/String;)V
    //   7502: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   7505: ifeq -32 -> 7473
    //   7508: ldc 90
    //   7510: iconst_2
    //   7511: new 92	java/lang/StringBuilder
    //   7514: dup
    //   7515: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   7518: ldc_w 3226
    //   7521: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7524: aload 19
    //   7526: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7529: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7532: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7535: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7538: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   7541: goto -68 -> 7473
    //   7544: invokestatic 76	com/tencent/qphone/base/util/BaseApplication:getContext	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   7547: aload_2
    //   7548: invokevirtual 311	com/tencent/mobileqq/app/QQAppInterface:getAccount	()Ljava/lang/String;
    //   7551: invokestatic 1641	cooperation/pluginbridge/BridgeHelper:a	(Landroid/content/Context;Ljava/lang/String;)Lcooperation/pluginbridge/BridgeHelper;
    //   7554: aload 19
    //   7556: invokevirtual 3227	cooperation/pluginbridge/BridgeHelper:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   7559: goto +6406 -> 13965
    //   7562: aload_0
    //   7563: aload_3
    //   7564: aload 19
    //   7566: invokespecial 3230	com/tencent/mobileqq/config/splashlogo/ConfigServlet:l	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   7569: goto +6396 -> 13965
    //   7572: aload_0
    //   7573: aload_3
    //   7574: aload 19
    //   7576: invokespecial 3232	com/tencent/mobileqq/config/splashlogo/ConfigServlet:n	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   7579: goto +6386 -> 13965
    //   7582: aload_0
    //   7583: aload_3
    //   7584: aload 19
    //   7586: invokespecial 3234	com/tencent/mobileqq/config/splashlogo/ConfigServlet:j	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   7589: goto +6376 -> 13965
    //   7592: aload_0
    //   7593: aload_3
    //   7594: aload 19
    //   7596: invokespecial 3236	com/tencent/mobileqq/config/splashlogo/ConfigServlet:k	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   7599: goto +6366 -> 13965
    //   7602: aload_0
    //   7603: aload 19
    //   7605: invokespecial 3238	com/tencent/mobileqq/config/splashlogo/ConfigServlet:m	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   7608: goto +6357 -> 13965
    //   7611: aload_0
    //   7612: aload 19
    //   7614: invokespecial 3240	com/tencent/mobileqq/config/splashlogo/ConfigServlet:l	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   7617: goto +6348 -> 13965
    //   7620: aload 19
    //   7622: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7625: ifnull +103 -> 7728
    //   7628: aload 19
    //   7630: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7633: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   7636: ifle +92 -> 7728
    //   7639: aload 19
    //   7641: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7644: iconst_0
    //   7645: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   7648: checkcast 139	java/lang/String
    //   7651: astore 16
    //   7653: aload 19
    //   7655: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7658: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7661: istore 7
    //   7663: aload_2
    //   7664: invokevirtual 3243	com/tencent/mobileqq/app/QQAppInterface:a	()Lcom/tencent/av/gaudio/AVNotifyCenter;
    //   7667: aload_2
    //   7668: aload 16
    //   7670: iload 7
    //   7672: invokevirtual 3247	com/tencent/av/gaudio/AVNotifyCenter:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Ljava/lang/String;I)V
    //   7675: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   7678: ifeq +6363 -> 14041
    //   7681: ldc 90
    //   7683: iconst_2
    //   7684: new 92	java/lang/StringBuilder
    //   7687: dup
    //   7688: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   7691: ldc_w 3249
    //   7694: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7697: aload 16
    //   7699: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7702: ldc_w 325
    //   7705: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7708: aload 19
    //   7710: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7713: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7716: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7719: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7722: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   7725: goto +6316 -> 14041
    //   7728: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   7731: ifeq +6234 -> 13965
    //   7734: ldc 90
    //   7736: iconst_2
    //   7737: new 92	java/lang/StringBuilder
    //   7740: dup
    //   7741: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   7744: ldc_w 3251
    //   7747: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7750: aload 19
    //   7752: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7755: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7758: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7761: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7764: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   7767: goto +6198 -> 13965
    //   7770: aload 19
    //   7772: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7775: ifnull +119 -> 7894
    //   7778: aload 19
    //   7780: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7783: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   7786: ifle +108 -> 7894
    //   7789: aload_2
    //   7790: bipush 16
    //   7792: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   7795: checkcast 3253	com/tencent/mobileqq/app/ClubContentUpdateHandler
    //   7798: astore 16
    //   7800: aload 16
    //   7802: ifnull +29 -> 7831
    //   7805: aload 16
    //   7807: aload_2
    //   7808: aload 19
    //   7810: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7813: iconst_0
    //   7814: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   7817: checkcast 139	java/lang/String
    //   7820: aload 19
    //   7822: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7825: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7828: invokevirtual 3254	com/tencent/mobileqq/app/ClubContentUpdateHandler:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Ljava/lang/String;I)V
    //   7831: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   7834: ifeq +6210 -> 14044
    //   7837: ldc 90
    //   7839: iconst_2
    //   7840: new 92	java/lang/StringBuilder
    //   7843: dup
    //   7844: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   7847: ldc_w 3256
    //   7850: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7853: aload 19
    //   7855: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7858: iconst_0
    //   7859: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   7862: checkcast 139	java/lang/String
    //   7865: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7868: ldc_w 325
    //   7871: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7874: aload 19
    //   7876: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7879: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7882: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7885: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7888: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   7891: goto +6153 -> 14044
    //   7894: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   7897: ifeq +6068 -> 13965
    //   7900: ldc 90
    //   7902: iconst_2
    //   7903: new 92	java/lang/StringBuilder
    //   7906: dup
    //   7907: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   7910: ldc_w 3258
    //   7913: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   7916: aload 19
    //   7918: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7921: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7924: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   7927: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   7930: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   7933: goto +6032 -> 13965
    //   7936: aload 19
    //   7938: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7941: ifnull +103 -> 8044
    //   7944: aload 19
    //   7946: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7949: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   7952: ifle +92 -> 8044
    //   7955: aload 19
    //   7957: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   7960: iconst_0
    //   7961: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   7964: checkcast 139	java/lang/String
    //   7967: astore 16
    //   7969: aload 19
    //   7971: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7974: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7977: istore 7
    //   7979: invokestatic 3263	com/tencent/mobileqq/vip/AioVipKeywordHelper:a	()Lcom/tencent/mobileqq/vip/AioVipKeywordHelper;
    //   7982: aload_2
    //   7983: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   7986: aload 16
    //   7988: aload_2
    //   7989: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   7992: iload 7
    //   7994: invokevirtual 3264	com/tencent/mobileqq/vip/AioVipKeywordHelper:a	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;I)V
    //   7997: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8000: ifeq +6047 -> 14047
    //   8003: ldc 90
    //   8005: iconst_2
    //   8006: new 92	java/lang/StringBuilder
    //   8009: dup
    //   8010: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8013: ldc_w 3266
    //   8016: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8019: aload 16
    //   8021: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8024: ldc_w 325
    //   8027: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8030: iload 7
    //   8032: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8035: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8038: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   8041: goto +6006 -> 14047
    //   8044: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8047: ifeq +5918 -> 13965
    //   8050: ldc 90
    //   8052: iconst_2
    //   8053: new 92	java/lang/StringBuilder
    //   8056: dup
    //   8057: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8060: ldc_w 3268
    //   8063: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8066: aload 19
    //   8068: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8071: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8074: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8077: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8080: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   8083: goto +5882 -> 13965
    //   8086: aload_2
    //   8087: sipush 176
    //   8090: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   8093: checkcast 3270	com/tencent/mobileqq/vas/IndividuationABTestManager
    //   8096: astore 16
    //   8098: aload 19
    //   8100: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8103: ifnull +98 -> 8201
    //   8106: aload 19
    //   8108: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8111: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   8114: ifle +87 -> 8201
    //   8117: aload 19
    //   8119: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8122: iconst_0
    //   8123: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   8126: checkcast 139	java/lang/String
    //   8129: astore 17
    //   8131: aload 19
    //   8133: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8136: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8139: istore 7
    //   8141: aload 16
    //   8143: aload 17
    //   8145: aload_2
    //   8146: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   8149: iload 7
    //   8151: invokevirtual 3273	com/tencent/mobileqq/vas/IndividuationABTestManager:a	(Ljava/lang/String;Ljava/lang/String;I)V
    //   8154: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8157: ifeq +5893 -> 14050
    //   8160: ldc 90
    //   8162: iconst_2
    //   8163: new 92	java/lang/StringBuilder
    //   8166: dup
    //   8167: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8170: ldc_w 3275
    //   8173: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8176: aload 17
    //   8178: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8181: ldc_w 325
    //   8184: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8187: iload 7
    //   8189: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8192: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8195: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   8198: goto +5852 -> 14050
    //   8201: aload 16
    //   8203: aload 19
    //   8205: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8208: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8211: aload_2
    //   8212: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   8215: invokevirtual 3276	com/tencent/mobileqq/vas/IndividuationABTestManager:a	(ILjava/lang/String;)V
    //   8218: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8221: ifeq +5832 -> 14053
    //   8224: ldc 90
    //   8226: iconst_2
    //   8227: new 92	java/lang/StringBuilder
    //   8230: dup
    //   8231: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8234: ldc_w 3278
    //   8237: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8240: aload 19
    //   8242: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8245: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8248: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8251: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8254: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   8257: goto +5796 -> 14053
    //   8260: aload_0
    //   8261: aload_2
    //   8262: aload 19
    //   8264: invokespecial 3280	com/tencent/mobileqq/config/splashlogo/ConfigServlet:V	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8267: goto +5698 -> 13965
    //   8270: aload_0
    //   8271: aload_3
    //   8272: aload 19
    //   8274: invokespecial 3282	com/tencent/mobileqq/config/splashlogo/ConfigServlet:i	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8277: goto +5688 -> 13965
    //   8280: aload_0
    //   8281: aload_3
    //   8282: aload 19
    //   8284: invokespecial 3284	com/tencent/mobileqq/config/splashlogo/ConfigServlet:e	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8287: goto +5678 -> 13965
    //   8290: aload_0
    //   8291: aload_3
    //   8292: aload 19
    //   8294: invokespecial 3286	com/tencent/mobileqq/config/splashlogo/ConfigServlet:f	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8297: goto +5668 -> 13965
    //   8300: aload_3
    //   8301: aload 19
    //   8303: aload_0
    //   8304: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   8307: checkcast 213	com/tencent/mobileqq/app/QQAppInterface
    //   8310: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   8313: invokestatic 3291	com/tencent/av/utils/QAVConfigUtils:a	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;Landroid/content/Context;)V
    //   8316: goto +5649 -> 13965
    //   8319: aload_0
    //   8320: aload_3
    //   8321: aload 19
    //   8323: invokespecial 3293	com/tencent/mobileqq/config/splashlogo/ConfigServlet:g	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8326: goto +5639 -> 13965
    //   8329: aload_0
    //   8330: aload_2
    //   8331: aload_3
    //   8332: aload 19
    //   8334: invokespecial 3296	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/app/QQAppInterface;Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8337: goto +5628 -> 13965
    //   8340: aload_0
    //   8341: aload_3
    //   8342: aload 19
    //   8344: invokespecial 3298	com/tencent/mobileqq/config/splashlogo/ConfigServlet:h	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8347: goto +5618 -> 13965
    //   8350: aload_0
    //   8351: aload 19
    //   8353: invokespecial 3300	com/tencent/mobileqq/config/splashlogo/ConfigServlet:j	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8356: goto +5609 -> 13965
    //   8359: aload_0
    //   8360: aload 19
    //   8362: invokespecial 3302	com/tencent/mobileqq/config/splashlogo/ConfigServlet:k	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8365: goto +5600 -> 13965
    //   8368: aload_3
    //   8369: aload 19
    //   8371: invokestatic 3304	com/tencent/mobileqq/utils/QAVGroupConfig:a	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8374: goto +5591 -> 13965
    //   8377: aload_2
    //   8378: invokestatic 1727	com/tencent/mobileqq/utils/BusinessCommonConfig:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)Lcom/tencent/mobileqq/utils/BusinessCommonConfig;
    //   8381: aload_2
    //   8382: aload 16
    //   8384: invokevirtual 490	java/lang/Integer:intValue	()I
    //   8387: aload_3
    //   8388: aload 19
    //   8390: invokevirtual 3307	com/tencent/mobileqq/utils/BusinessCommonConfig:a	(Lcom/tencent/mobileqq/app/QQAppInterface;ILandroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)Ljava/lang/Boolean;
    //   8393: pop
    //   8394: goto +5571 -> 13965
    //   8397: aload_3
    //   8398: aload 19
    //   8400: invokestatic 3308	com/tencent/av/gameplay/QavGPDownloader:a	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8403: goto +5562 -> 13965
    //   8406: aload_0
    //   8407: aload 19
    //   8409: invokespecial 3310	com/tencent/mobileqq/config/splashlogo/ConfigServlet:n	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8412: goto +5553 -> 13965
    //   8415: aload_0
    //   8416: aload 19
    //   8418: invokespecial 3312	com/tencent/mobileqq/config/splashlogo/ConfigServlet:o	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   8421: goto +5544 -> 13965
    //   8424: aload 19
    //   8426: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8429: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8432: istore 7
    //   8434: iload 7
    //   8436: aload_2
    //   8437: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   8440: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   8443: invokestatic 1748	com/tencent/mobileqq/utils/SharedPreUtils:q	(Landroid/content/Context;Ljava/lang/String;)I
    //   8446: if_icmpeq +48 -> 8494
    //   8449: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   8452: invokestatic 3315	com/tencent/mobileqq/jumplightalk/AIOJumpLightalkConfig:a	(Ljava/lang/String;)V
    //   8455: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   8458: invokestatic 3318	com/tencent/mobileqq/jumplightalk/PCJumpLightalkConfig:a	(Ljava/lang/String;)V
    //   8461: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   8464: invokestatic 3321	com/tencent/mobileqq/jumplightalk/CLJumpLightalkConfig:a	(Ljava/lang/String;)V
    //   8467: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   8470: invokestatic 3324	com/tencent/mobileqq/jumplightalk/CallTabLightalkConfig:a	(Ljava/lang/String;)V
    //   8473: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   8476: invokestatic 3327	com/tencent/mobileqq/jumplightalk/QQCallLightalkConfig:a	(Ljava/lang/String;)V
    //   8479: aload_0
    //   8480: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   8483: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   8486: iload 7
    //   8488: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   8491: invokestatic 3329	com/tencent/mobileqq/utils/SharedPreUtils:l	(Landroid/content/Context;ILjava/lang/String;)V
    //   8494: aload 19
    //   8496: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8499: ifnull +164 -> 8663
    //   8502: aload 19
    //   8504: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8507: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   8510: ifle +153 -> 8663
    //   8513: aload 19
    //   8515: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8518: invokevirtual 575	com/tencent/mobileqq/pb/PBRepeatField:get	()Ljava/util/List;
    //   8521: invokeinterface 128 1 0
    //   8526: astore 16
    //   8528: aload 16
    //   8530: invokeinterface 133 1 0
    //   8535: ifeq +167 -> 8702
    //   8538: aload 16
    //   8540: invokeinterface 137 1 0
    //   8545: checkcast 139	java/lang/String
    //   8548: astore 17
    //   8550: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8553: ifeq +47 -> 8600
    //   8556: ldc 90
    //   8558: iconst_2
    //   8559: new 92	java/lang/StringBuilder
    //   8562: dup
    //   8563: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8566: ldc_w 3331
    //   8569: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8572: aload 17
    //   8574: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8577: ldc_w 325
    //   8580: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8583: aload 19
    //   8585: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8588: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8591: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8594: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8597: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   8600: aload_0
    //   8601: aload 17
    //   8603: aload 19
    //   8605: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8608: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8611: invokespecial 3332	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Ljava/lang/String;I)V
    //   8614: goto -86 -> 8528
    //   8617: astore 16
    //   8619: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8622: ifeq +33 -> 8655
    //   8625: ldc 90
    //   8627: iconst_2
    //   8628: new 92	java/lang/StringBuilder
    //   8631: dup
    //   8632: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8635: ldc_w 2705
    //   8638: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8641: aload 16
    //   8643: invokevirtual 1007	java/lang/Exception:toString	()Ljava/lang/String;
    //   8646: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8649: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8652: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   8655: aload 16
    //   8657: invokevirtual 605	java/lang/Exception:printStackTrace	()V
    //   8660: goto +5305 -> 13965
    //   8663: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8666: ifeq +36 -> 8702
    //   8669: ldc 90
    //   8671: iconst_2
    //   8672: new 92	java/lang/StringBuilder
    //   8675: dup
    //   8676: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8679: ldc_w 3334
    //   8682: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8685: aload 19
    //   8687: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8690: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8693: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8696: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8699: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   8702: goto +5263 -> 13965
    //   8705: aload 19
    //   8707: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8710: ifnull +164 -> 8874
    //   8713: aload 19
    //   8715: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8718: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   8721: ifle +153 -> 8874
    //   8724: aload 19
    //   8726: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8729: invokevirtual 575	com/tencent/mobileqq/pb/PBRepeatField:get	()Ljava/util/List;
    //   8732: invokeinterface 128 1 0
    //   8737: astore 16
    //   8739: aload 16
    //   8741: invokeinterface 133 1 0
    //   8746: ifeq +167 -> 8913
    //   8749: aload 16
    //   8751: invokeinterface 137 1 0
    //   8756: checkcast 139	java/lang/String
    //   8759: astore 17
    //   8761: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8764: ifeq +47 -> 8811
    //   8767: ldc 90
    //   8769: iconst_2
    //   8770: new 92	java/lang/StringBuilder
    //   8773: dup
    //   8774: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8777: ldc_w 3336
    //   8780: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8783: aload 17
    //   8785: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8788: ldc_w 325
    //   8791: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8794: aload 19
    //   8796: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8799: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8802: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8805: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8808: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   8811: aload_0
    //   8812: aload 17
    //   8814: aload 19
    //   8816: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8819: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8822: invokespecial 3338	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Ljava/lang/String;I)V
    //   8825: goto -86 -> 8739
    //   8828: astore 16
    //   8830: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8833: ifeq +33 -> 8866
    //   8836: ldc 90
    //   8838: iconst_2
    //   8839: new 92	java/lang/StringBuilder
    //   8842: dup
    //   8843: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8846: ldc_w 3340
    //   8849: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8852: aload 16
    //   8854: invokevirtual 1007	java/lang/Exception:toString	()Ljava/lang/String;
    //   8857: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8860: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8863: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   8866: aload 16
    //   8868: invokevirtual 605	java/lang/Exception:printStackTrace	()V
    //   8871: goto +5094 -> 13965
    //   8874: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8877: ifeq +36 -> 8913
    //   8880: ldc 90
    //   8882: iconst_2
    //   8883: new 92	java/lang/StringBuilder
    //   8886: dup
    //   8887: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8890: ldc_w 3342
    //   8893: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8896: aload 19
    //   8898: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   8901: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   8904: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   8907: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   8910: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   8913: goto +5052 -> 13965
    //   8916: aload 19
    //   8918: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8921: ifnull +164 -> 9085
    //   8924: aload 19
    //   8926: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8929: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   8932: ifle +153 -> 9085
    //   8935: aload 19
    //   8937: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   8940: invokevirtual 575	com/tencent/mobileqq/pb/PBRepeatField:get	()Ljava/util/List;
    //   8943: invokeinterface 128 1 0
    //   8948: astore 16
    //   8950: aload 16
    //   8952: invokeinterface 133 1 0
    //   8957: ifeq +167 -> 9124
    //   8960: aload 16
    //   8962: invokeinterface 137 1 0
    //   8967: checkcast 139	java/lang/String
    //   8970: astore 17
    //   8972: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   8975: ifeq +47 -> 9022
    //   8978: ldc 90
    //   8980: iconst_2
    //   8981: new 92	java/lang/StringBuilder
    //   8984: dup
    //   8985: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   8988: ldc_w 3344
    //   8991: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8994: aload 17
    //   8996: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   8999: ldc_w 325
    //   9002: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9005: aload 19
    //   9007: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9010: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9013: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   9016: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   9019: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   9022: aload_0
    //   9023: aload 17
    //   9025: aload 19
    //   9027: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9030: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9033: invokespecial 3346	com/tencent/mobileqq/config/splashlogo/ConfigServlet:c	(Ljava/lang/String;I)V
    //   9036: goto -86 -> 8950
    //   9039: astore 16
    //   9041: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   9044: ifeq +33 -> 9077
    //   9047: ldc 90
    //   9049: iconst_2
    //   9050: new 92	java/lang/StringBuilder
    //   9053: dup
    //   9054: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   9057: ldc_w 3348
    //   9060: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9063: aload 16
    //   9065: invokevirtual 1007	java/lang/Exception:toString	()Ljava/lang/String;
    //   9068: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9071: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   9074: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   9077: aload 16
    //   9079: invokevirtual 605	java/lang/Exception:printStackTrace	()V
    //   9082: goto +4883 -> 13965
    //   9085: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   9088: ifeq +36 -> 9124
    //   9091: ldc 90
    //   9093: iconst_2
    //   9094: new 92	java/lang/StringBuilder
    //   9097: dup
    //   9098: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   9101: ldc_w 3350
    //   9104: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9107: aload 19
    //   9109: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9112: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9115: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   9118: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   9121: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   9124: goto +4841 -> 13965
    //   9127: aload 19
    //   9129: aload_2
    //   9130: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   9133: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   9136: invokestatic 1757	com/tencent/mobileqq/utils/SharedPreUtils:t	(Landroid/content/Context;Ljava/lang/String;)I
    //   9139: aload 16
    //   9141: invokevirtual 490	java/lang/Integer:intValue	()I
    //   9144: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   9147: astore 17
    //   9149: aload 17
    //   9151: ifnull +28 -> 9179
    //   9154: aload_2
    //   9155: aload 17
    //   9157: aload 19
    //   9159: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9162: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9165: aload 16
    //   9167: invokevirtual 490	java/lang/Integer:intValue	()I
    //   9170: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   9173: invokestatic 3355	com/tencent/av/utils/ScoreManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Ljava/lang/String;IILjava/lang/String;)V
    //   9176: goto +4789 -> 13965
    //   9179: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   9182: ifeq +4783 -> 13965
    //   9185: ldc 90
    //   9187: iconst_2
    //   9188: new 92	java/lang/StringBuilder
    //   9191: dup
    //   9192: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   9195: ldc_w 3357
    //   9198: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9201: aload 19
    //   9203: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9206: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9209: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   9212: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   9215: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   9218: goto +4747 -> 13965
    //   9221: aload_0
    //   9222: aload 19
    //   9224: invokespecial 3359	com/tencent/mobileqq/config/splashlogo/ConfigServlet:w	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9227: goto +4738 -> 13965
    //   9230: aload_0
    //   9231: aload 19
    //   9233: invokespecial 3361	com/tencent/mobileqq/config/splashlogo/ConfigServlet:r	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9236: goto +4729 -> 13965
    //   9239: aload_0
    //   9240: aload 19
    //   9242: invokespecial 3363	com/tencent/mobileqq/config/splashlogo/ConfigServlet:s	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9245: goto +4720 -> 13965
    //   9248: aload_0
    //   9249: aload 19
    //   9251: invokespecial 3365	com/tencent/mobileqq/config/splashlogo/ConfigServlet:v	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9254: goto +4711 -> 13965
    //   9257: aload_0
    //   9258: aload 19
    //   9260: invokespecial 3367	com/tencent/mobileqq/config/splashlogo/ConfigServlet:A	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9263: goto +4702 -> 13965
    //   9266: aload_0
    //   9267: aload 19
    //   9269: invokespecial 3369	com/tencent/mobileqq/config/splashlogo/ConfigServlet:y	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9272: goto +4693 -> 13965
    //   9275: aload_0
    //   9276: aload 19
    //   9278: invokespecial 3371	com/tencent/mobileqq/config/splashlogo/ConfigServlet:f	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9281: goto +4684 -> 13965
    //   9284: aload_0
    //   9285: aload 19
    //   9287: invokespecial 3373	com/tencent/mobileqq/config/splashlogo/ConfigServlet:x	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9290: goto +4675 -> 13965
    //   9293: aload_0
    //   9294: aload 19
    //   9296: invokespecial 3375	com/tencent/mobileqq/config/splashlogo/ConfigServlet:z	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9299: goto +4666 -> 13965
    //   9302: aload_0
    //   9303: aload 19
    //   9305: invokespecial 3377	com/tencent/mobileqq/config/splashlogo/ConfigServlet:e	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9308: goto +4657 -> 13965
    //   9311: aload_0
    //   9312: aload 19
    //   9314: invokespecial 3379	com/tencent/mobileqq/config/splashlogo/ConfigServlet:p	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9317: goto +4648 -> 13965
    //   9320: aload_0
    //   9321: aload 19
    //   9323: aload 19
    //   9325: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9328: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9331: aload_2
    //   9332: invokevirtual 1822	com/tencent/mobileqq/app/QQAppInterface:c	()Ljava/lang/String;
    //   9335: invokespecial 3381	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;ILjava/lang/String;)V
    //   9338: goto +4627 -> 13965
    //   9341: aload_0
    //   9342: aload 19
    //   9344: invokevirtual 3383	com/tencent/mobileqq/config/splashlogo/ConfigServlet:c	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9347: goto +4618 -> 13965
    //   9350: aload_0
    //   9351: aload 19
    //   9353: aload_2
    //   9354: invokespecial 3385	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;Lcom/tencent/mobileqq/app/QQAppInterface;)V
    //   9357: goto +4608 -> 13965
    //   9360: aload_0
    //   9361: aload 19
    //   9363: aload_2
    //   9364: invokespecial 3387	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;Lcom/tencent/mobileqq/app/QQAppInterface;)V
    //   9367: goto +4598 -> 13965
    //   9370: aload_0
    //   9371: aload 19
    //   9373: invokevirtual 3389	com/tencent/mobileqq/config/splashlogo/ConfigServlet:d	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9376: goto +4589 -> 13965
    //   9379: aload_0
    //   9380: aload 19
    //   9382: invokespecial 3391	com/tencent/mobileqq/config/splashlogo/ConfigServlet:C	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9385: goto +4580 -> 13965
    //   9388: aload_0
    //   9389: aload 19
    //   9391: invokespecial 3393	com/tencent/mobileqq/config/splashlogo/ConfigServlet:D	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9394: goto +4571 -> 13965
    //   9397: aload_0
    //   9398: aload 19
    //   9400: invokespecial 3395	com/tencent/mobileqq/config/splashlogo/ConfigServlet:E	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9403: goto +4562 -> 13965
    //   9406: aload_0
    //   9407: aload 19
    //   9409: invokespecial 3397	com/tencent/mobileqq/config/splashlogo/ConfigServlet:H	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9412: goto +4553 -> 13965
    //   9415: aload_0
    //   9416: aload 19
    //   9418: invokespecial 3399	com/tencent/mobileqq/config/splashlogo/ConfigServlet:F	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9421: goto +4544 -> 13965
    //   9424: aload_0
    //   9425: aload 19
    //   9427: invokespecial 3401	com/tencent/mobileqq/config/splashlogo/ConfigServlet:G	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9430: goto +4535 -> 13965
    //   9433: aload_0
    //   9434: aload 19
    //   9436: invokespecial 3403	com/tencent/mobileqq/config/splashlogo/ConfigServlet:q	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9439: goto +4526 -> 13965
    //   9442: aload_0
    //   9443: aload 19
    //   9445: invokespecial 3405	com/tencent/mobileqq/config/splashlogo/ConfigServlet:B	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9448: goto +4517 -> 13965
    //   9451: invokestatic 3408	com/tencent/mobileqq/app/DeviceProfileManager:a	()Lcom/tencent/mobileqq/app/DeviceProfileManager;
    //   9454: aload_1
    //   9455: ldc 13
    //   9457: invokevirtual 3411	com/tencent/mobileqq/app/DeviceProfileManager:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig;Ljava/lang/String;)Z
    //   9460: pop
    //   9461: goto +4504 -> 13965
    //   9464: aload_0
    //   9465: aload 19
    //   9467: invokespecial 3413	com/tencent/mobileqq/config/splashlogo/ConfigServlet:h	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9470: goto +4495 -> 13965
    //   9473: aload_0
    //   9474: aload 19
    //   9476: invokespecial 3415	com/tencent/mobileqq/config/splashlogo/ConfigServlet:i	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9479: goto +4486 -> 13965
    //   9482: aload_0
    //   9483: aload 19
    //   9485: invokevirtual 3416	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9488: goto +4477 -> 13965
    //   9491: aload_0
    //   9492: aload 19
    //   9494: invokevirtual 3418	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9497: goto +4468 -> 13965
    //   9500: aload_0
    //   9501: aload 19
    //   9503: invokespecial 3420	com/tencent/mobileqq/config/splashlogo/ConfigServlet:g	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9506: goto +4459 -> 13965
    //   9509: aload_0
    //   9510: aload 19
    //   9512: invokespecial 3422	com/tencent/mobileqq/config/splashlogo/ConfigServlet:I	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9515: goto +4450 -> 13965
    //   9518: aload_0
    //   9519: aload 19
    //   9521: invokespecial 3424	com/tencent/mobileqq/config/splashlogo/ConfigServlet:J	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9524: goto +4441 -> 13965
    //   9527: aload_0
    //   9528: aload 19
    //   9530: invokespecial 3426	com/tencent/mobileqq/config/splashlogo/ConfigServlet:K	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9533: goto +4432 -> 13965
    //   9536: aload 19
    //   9538: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   9541: ifnull +141 -> 9682
    //   9544: aload 19
    //   9546: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   9549: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   9552: ifle +130 -> 9682
    //   9555: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   9558: ifeq +68 -> 9626
    //   9561: ldc 90
    //   9563: iconst_2
    //   9564: new 92	java/lang/StringBuilder
    //   9567: dup
    //   9568: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   9571: ldc_w 2710
    //   9574: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9577: aload 16
    //   9579: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   9582: ldc_w 3428
    //   9585: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9588: aload 19
    //   9590: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   9593: iconst_0
    //   9594: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   9597: checkcast 139	java/lang/String
    //   9600: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9603: ldc_w 325
    //   9606: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9609: aload 19
    //   9611: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9614: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9617: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   9620: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   9623: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   9626: aload_2
    //   9627: sipush 168
    //   9630: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   9633: checkcast 3430	cooperation/photoplus/PhotoPlusManager
    //   9636: aload 19
    //   9638: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   9641: iconst_0
    //   9642: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   9645: checkcast 139	java/lang/String
    //   9648: invokevirtual 3431	cooperation/photoplus/PhotoPlusManager:a	(Ljava/lang/String;)Z
    //   9651: ifeq +4314 -> 13965
    //   9654: aload_0
    //   9655: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   9658: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   9661: aload_0
    //   9662: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   9665: invokevirtual 3152	mqq/app/AppRuntime:getAccount	()Ljava/lang/String;
    //   9668: aload 19
    //   9670: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9673: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9676: invokestatic 3433	com/tencent/mobileqq/utils/SharedPreUtils:w	(Landroid/content/Context;Ljava/lang/String;I)V
    //   9679: goto +4286 -> 13965
    //   9682: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   9685: ifeq +4280 -> 13965
    //   9688: ldc 90
    //   9690: iconst_2
    //   9691: new 92	java/lang/StringBuilder
    //   9694: dup
    //   9695: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   9698: ldc_w 2710
    //   9701: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9704: aload 16
    //   9706: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   9709: ldc_w 3435
    //   9712: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9715: aload 19
    //   9717: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9720: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9723: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   9726: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   9729: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   9732: goto +4233 -> 13965
    //   9735: aload 19
    //   9737: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   9740: ifnull +145 -> 9885
    //   9743: aload 19
    //   9745: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   9748: invokevirtual 284	com/tencent/mobileqq/pb/PBRepeatField:size	()I
    //   9751: ifle +134 -> 9885
    //   9754: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   9757: ifeq +68 -> 9825
    //   9760: ldc 90
    //   9762: iconst_2
    //   9763: new 92	java/lang/StringBuilder
    //   9766: dup
    //   9767: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   9770: ldc_w 2710
    //   9773: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9776: aload 16
    //   9778: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   9781: ldc_w 3428
    //   9784: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9787: aload 19
    //   9789: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   9792: iconst_0
    //   9793: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   9796: checkcast 139	java/lang/String
    //   9799: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9802: ldc_w 325
    //   9805: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9808: aload 19
    //   9810: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9813: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9816: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   9819: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   9822: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   9825: aload_2
    //   9826: sipush 187
    //   9829: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   9832: checkcast 1872	com/tencent/biz/qqstory/takevideo/artfilter/ArtFilterManager
    //   9835: aload 19
    //   9837: getfield 281	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:content_list	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   9840: iconst_0
    //   9841: invokevirtual 321	com/tencent/mobileqq/pb/PBRepeatField:get	(I)Ljava/lang/Object;
    //   9844: checkcast 139	java/lang/String
    //   9847: aload_2
    //   9848: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   9851: invokevirtual 3436	com/tencent/biz/qqstory/takevideo/artfilter/ArtFilterManager:a	(Ljava/lang/String;Ljava/lang/String;)Z
    //   9854: ifeq +4111 -> 13965
    //   9857: aload_0
    //   9858: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   9861: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   9864: aload_0
    //   9865: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   9868: invokevirtual 3152	mqq/app/AppRuntime:getAccount	()Ljava/lang/String;
    //   9871: aload 19
    //   9873: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9876: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9879: invokestatic 1875	com/tencent/mobileqq/utils/SharedPreUtils:x	(Landroid/content/Context;Ljava/lang/String;I)V
    //   9882: goto +4083 -> 13965
    //   9885: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   9888: ifeq +4077 -> 13965
    //   9891: ldc 90
    //   9893: iconst_2
    //   9894: new 92	java/lang/StringBuilder
    //   9897: dup
    //   9898: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   9901: ldc_w 2710
    //   9904: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9907: aload 16
    //   9909: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   9912: ldc_w 3435
    //   9915: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   9918: aload 19
    //   9920: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9923: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9926: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   9929: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   9932: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   9935: goto +4030 -> 13965
    //   9938: aload_0
    //   9939: aload_2
    //   9940: aload 19
    //   9942: invokevirtual 3438	com/tencent/mobileqq/config/splashlogo/ConfigServlet:e	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9945: goto +4020 -> 13965
    //   9948: aload_0
    //   9949: aload_3
    //   9950: iload 5
    //   9952: aload 19
    //   9954: aload_1
    //   9955: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   9958: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   9961: invokevirtual 3441	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Landroid/content/Intent;ZLcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;I)V
    //   9964: goto +4001 -> 13965
    //   9967: aload_0
    //   9968: aload_3
    //   9969: aload 19
    //   9971: invokespecial 3443	com/tencent/mobileqq/config/splashlogo/ConfigServlet:c	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9974: goto +3991 -> 13965
    //   9977: aload_0
    //   9978: aload_3
    //   9979: aload 19
    //   9981: invokespecial 3445	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9984: goto +3981 -> 13965
    //   9987: aload_0
    //   9988: aload_3
    //   9989: aload 19
    //   9991: invokespecial 3447	com/tencent/mobileqq/config/splashlogo/ConfigServlet:d	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   9994: goto +3971 -> 13965
    //   9997: aload_0
    //   9998: aload_3
    //   9999: aload 19
    //   10001: invokevirtual 3448	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10004: goto +3961 -> 13965
    //   10007: aload_0
    //   10008: aload_2
    //   10009: aload_3
    //   10010: aload 19
    //   10012: invokevirtual 3450	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10015: goto +3950 -> 13965
    //   10018: aload_0
    //   10019: aload_2
    //   10020: aload 19
    //   10022: invokespecial 3453	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ah	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10025: goto +3940 -> 13965
    //   10028: aload_0
    //   10029: aload_2
    //   10030: aload 19
    //   10032: invokespecial 3455	com/tencent/mobileqq/config/splashlogo/ConfigServlet:W	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10035: goto +3930 -> 13965
    //   10038: aload_0
    //   10039: aload_2
    //   10040: aload 19
    //   10042: invokespecial 3457	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ag	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10045: goto +3920 -> 13965
    //   10048: aload 19
    //   10050: aload_2
    //   10051: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   10054: aload 16
    //   10056: invokevirtual 490	java/lang/Integer:intValue	()I
    //   10059: invokestatic 1986	com/tencent/av/business/manager/EffectConfigBase:a	(Landroid/content/Context;I)I
    //   10062: aload 16
    //   10064: invokevirtual 490	java/lang/Integer:intValue	()I
    //   10067: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   10070: astore 17
    //   10072: aload 17
    //   10074: ifnull +3985 -> 14059
    //   10077: aload_2
    //   10078: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   10081: aload 17
    //   10083: aload 19
    //   10085: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   10088: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   10091: aload 16
    //   10093: invokevirtual 490	java/lang/Integer:intValue	()I
    //   10096: invokestatic 3458	com/tencent/av/business/manager/EffectConfigBase:a	(Landroid/content/Context;Ljava/lang/String;II)V
    //   10099: goto +3960 -> 14059
    //   10102: aload 19
    //   10104: aload_2
    //   10105: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   10108: aload_2
    //   10109: invokevirtual 1822	com/tencent/mobileqq/app/QQAppInterface:c	()Ljava/lang/String;
    //   10112: invokestatic 1988	com/tencent/mobileqq/utils/SharedPreUtils:u	(Landroid/content/Context;Ljava/lang/String;)I
    //   10115: aload 16
    //   10117: invokevirtual 490	java/lang/Integer:intValue	()I
    //   10120: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   10123: astore 17
    //   10125: aload 17
    //   10127: ifnull +3838 -> 13965
    //   10130: aload_2
    //   10131: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   10134: aload 17
    //   10136: aload 16
    //   10138: invokevirtual 490	java/lang/Integer:intValue	()I
    //   10141: aload_2
    //   10142: invokevirtual 1822	com/tencent/mobileqq/app/QQAppInterface:c	()Ljava/lang/String;
    //   10145: invokestatic 3461	com/tencent/av/business/manager/EffectOperateManager:a	(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;)V
    //   10148: aload_2
    //   10149: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   10152: aload 19
    //   10154: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   10157: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   10160: aload_2
    //   10161: invokevirtual 1822	com/tencent/mobileqq/app/QQAppInterface:c	()Ljava/lang/String;
    //   10164: invokestatic 3463	com/tencent/mobileqq/utils/SharedPreUtils:p	(Landroid/content/Context;ILjava/lang/String;)V
    //   10167: goto +3798 -> 13965
    //   10170: aload 19
    //   10172: invokestatic 1993	com/tencent/av/ui/VoiceChangeData:a	()Lcom/tencent/av/ui/VoiceChangeData;
    //   10175: invokevirtual 1996	com/tencent/av/ui/VoiceChangeData:a	()I
    //   10178: sipush 172
    //   10181: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   10184: astore 16
    //   10186: aload 16
    //   10188: ifnull +3777 -> 13965
    //   10191: invokestatic 1993	com/tencent/av/ui/VoiceChangeData:a	()Lcom/tencent/av/ui/VoiceChangeData;
    //   10194: aload 16
    //   10196: invokevirtual 3464	com/tencent/av/ui/VoiceChangeData:a	(Ljava/lang/String;)V
    //   10199: invokestatic 1993	com/tencent/av/ui/VoiceChangeData:a	()Lcom/tencent/av/ui/VoiceChangeData;
    //   10202: aload 19
    //   10204: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   10207: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   10210: invokevirtual 3465	com/tencent/av/ui/VoiceChangeData:a	(I)V
    //   10213: goto +3752 -> 13965
    //   10216: aload 19
    //   10218: invokestatic 2001	com/tencent/av/ui/AIOTopRightButtonConfig:a	()Lcom/tencent/av/ui/AIOTopRightButtonConfig;
    //   10221: aload_2
    //   10222: invokevirtual 1822	com/tencent/mobileqq/app/QQAppInterface:c	()Ljava/lang/String;
    //   10225: invokevirtual 2004	com/tencent/av/ui/AIOTopRightButtonConfig:a	(Ljava/lang/String;)I
    //   10228: sipush 192
    //   10231: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   10234: astore 16
    //   10236: aload 16
    //   10238: ifnull +3727 -> 13965
    //   10241: invokestatic 2001	com/tencent/av/ui/AIOTopRightButtonConfig:a	()Lcom/tencent/av/ui/AIOTopRightButtonConfig;
    //   10244: aload_2
    //   10245: invokevirtual 1822	com/tencent/mobileqq/app/QQAppInterface:c	()Ljava/lang/String;
    //   10248: aload 16
    //   10250: invokevirtual 3467	com/tencent/av/ui/AIOTopRightButtonConfig:b	(Ljava/lang/String;Ljava/lang/String;)V
    //   10253: invokestatic 2001	com/tencent/av/ui/AIOTopRightButtonConfig:a	()Lcom/tencent/av/ui/AIOTopRightButtonConfig;
    //   10256: aload_2
    //   10257: invokevirtual 1822	com/tencent/mobileqq/app/QQAppInterface:c	()Ljava/lang/String;
    //   10260: aload 19
    //   10262: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   10265: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   10268: invokevirtual 3468	com/tencent/av/ui/AIOTopRightButtonConfig:a	(Ljava/lang/String;I)V
    //   10271: goto +3694 -> 13965
    //   10274: aload 19
    //   10276: aload_2
    //   10277: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   10280: invokestatic 2005	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;)I
    //   10283: sipush 149
    //   10286: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   10289: astore 16
    //   10291: aload 16
    //   10293: ifnull +3672 -> 13965
    //   10296: aload_2
    //   10297: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   10300: aload 19
    //   10302: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   10305: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   10308: invokestatic 3470	com/tencent/mobileqq/utils/SharedPreUtils:a	(Landroid/content/Context;I)V
    //   10311: aload_2
    //   10312: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   10315: invokestatic 3473	com/tencent/mobileqq/utils/SharedPreUtils:d	(Ljava/lang/String;)Landroid/content/SharedPreferences;
    //   10318: astore 17
    //   10320: aload 17
    //   10322: ifnull +3740 -> 14062
    //   10325: aload 17
    //   10327: invokeinterface 645 1 0
    //   10332: ldc_w 3475
    //   10335: aload 16
    //   10337: invokeinterface 1091 3 0
    //   10342: invokeinterface 656 1 0
    //   10347: pop
    //   10348: goto +3714 -> 14062
    //   10351: aload_0
    //   10352: aload_2
    //   10353: aload 19
    //   10355: invokevirtual 3477	com/tencent/mobileqq/config/splashlogo/ConfigServlet:d	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10358: goto +3607 -> 13965
    //   10361: aload_0
    //   10362: aload_3
    //   10363: iload 5
    //   10365: aload 19
    //   10367: aload_1
    //   10368: getfield 2797	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:result	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   10371: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   10374: invokevirtual 3479	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Landroid/content/Intent;ZLcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;I)V
    //   10377: goto +3588 -> 13965
    //   10380: aload_0
    //   10381: aload_2
    //   10382: aload 19
    //   10384: invokespecial 3481	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ab	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10387: goto +3578 -> 13965
    //   10390: aload_0
    //   10391: aload_2
    //   10392: aload 19
    //   10394: invokespecial 3483	com/tencent/mobileqq/config/splashlogo/ConfigServlet:X	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10397: goto +3568 -> 13965
    //   10400: aload_0
    //   10401: aload_2
    //   10402: aload 19
    //   10404: invokespecial 3485	com/tencent/mobileqq/config/splashlogo/ConfigServlet:Y	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10407: goto +3558 -> 13965
    //   10410: aload_0
    //   10411: aload_2
    //   10412: aload 19
    //   10414: invokespecial 3487	com/tencent/mobileqq/config/splashlogo/ConfigServlet:Z	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10417: goto +3548 -> 13965
    //   10420: aload_0
    //   10421: aload_2
    //   10422: aload 19
    //   10424: invokespecial 3489	com/tencent/mobileqq/config/splashlogo/ConfigServlet:aa	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10427: goto +3538 -> 13965
    //   10430: aload_0
    //   10431: aload_2
    //   10432: aload 19
    //   10434: invokevirtual 3491	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10437: goto +3528 -> 13965
    //   10440: aload_0
    //   10441: aload_2
    //   10442: aload 19
    //   10444: invokespecial 3494	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ai	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10447: goto +3518 -> 13965
    //   10450: aload_0
    //   10451: aload_2
    //   10452: aload 19
    //   10454: invokespecial 3496	com/tencent/mobileqq/config/splashlogo/ConfigServlet:aj	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10457: goto +3508 -> 13965
    //   10460: aload_0
    //   10461: aload_2
    //   10462: aload 19
    //   10464: invokespecial 3498	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ak	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10467: goto +3498 -> 13965
    //   10470: aload_0
    //   10471: aload_2
    //   10472: aload 19
    //   10474: invokespecial 3501	com/tencent/mobileqq/config/splashlogo/ConfigServlet:al	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10477: goto +3488 -> 13965
    //   10480: aload 19
    //   10482: invokestatic 3502	com/tencent/mobileqq/search/util/SearchConfigUtils:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10485: goto +3480 -> 13965
    //   10488: aload_0
    //   10489: aload_2
    //   10490: aload 19
    //   10492: invokespecial 3505	com/tencent/mobileqq/config/splashlogo/ConfigServlet:an	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10495: goto +3470 -> 13965
    //   10498: aload_3
    //   10499: ldc_w 1436
    //   10502: iconst_0
    //   10503: invokevirtual 2884	android/content/Intent:getIntExtra	(Ljava/lang/String;I)I
    //   10506: istore 7
    //   10508: aload_0
    //   10509: aload_2
    //   10510: aload 19
    //   10512: invokespecial 3507	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)Lcom/tencent/mobileqq/armap/config/ARMapConfig;
    //   10515: astore 16
    //   10517: aload_2
    //   10518: sipush 189
    //   10521: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   10524: checkcast 1193	com/tencent/mobileqq/armap/config/ARMapConfigManager
    //   10527: astore 17
    //   10529: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   10532: ifeq +41 -> 10573
    //   10535: ldc 90
    //   10537: iconst_2
    //   10538: new 92	java/lang/StringBuilder
    //   10541: dup
    //   10542: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   10545: ldc_w 3509
    //   10548: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10551: iload 7
    //   10553: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   10556: ldc_w 3511
    //   10559: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   10562: aload 16
    //   10564: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   10567: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   10570: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   10573: aload 17
    //   10575: aload 16
    //   10577: iload 7
    //   10579: invokevirtual 2891	com/tencent/mobileqq/armap/config/ARMapConfigManager:a	(Lcom/tencent/mobileqq/armap/config/ARMapConfig;I)V
    //   10582: aload_2
    //   10583: iconst_1
    //   10584: iconst_0
    //   10585: invokestatic 2896	com/tencent/mobileqq/armap/ArMapUtil:a	(Lcom/tencent/mobileqq/app/QQAppInterface;ZI)V
    //   10588: goto +3377 -> 13965
    //   10591: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   10594: ifeq +12 -> 10606
    //   10597: ldc 90
    //   10599: iconst_2
    //   10600: ldc_w 3513
    //   10603: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   10606: aload_2
    //   10607: sipush 253
    //   10610: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   10613: checkcast 2313	com/tencent/av/redpacket/config/AVRedPacketConfigManager
    //   10616: aload_0
    //   10617: aload_2
    //   10618: aload 19
    //   10620: invokevirtual 3516	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)Lcom/tencent/av/service/AVRedPacketConfig;
    //   10623: iconst_1
    //   10624: invokevirtual 2909	com/tencent/av/redpacket/config/AVRedPacketConfigManager:a	(Lcom/tencent/av/service/AVRedPacketConfig;Z)V
    //   10627: iconst_1
    //   10628: invokestatic 2912	com/tencent/av/redpacket/AVRedPacketDataCollector:a	(Z)V
    //   10631: goto +3334 -> 13965
    //   10634: aload_0
    //   10635: aload_2
    //   10636: aload 19
    //   10638: invokespecial 3519	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ar	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10641: goto +3324 -> 13965
    //   10644: aload_0
    //   10645: aload_2
    //   10646: aload 19
    //   10648: invokespecial 3521	com/tencent/mobileqq/config/splashlogo/ConfigServlet:am	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10651: goto +3314 -> 13965
    //   10654: aload_0
    //   10655: aload_2
    //   10656: aload 19
    //   10658: invokespecial 3523	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ao	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10661: goto +3304 -> 13965
    //   10664: aload_0
    //   10665: aload_2
    //   10666: aload 19
    //   10668: invokespecial 3526	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ap	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10671: goto +3294 -> 13965
    //   10674: aload_0
    //   10675: aload_2
    //   10676: aload 19
    //   10678: invokespecial 3528	com/tencent/mobileqq/config/splashlogo/ConfigServlet:aq	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10681: goto +3284 -> 13965
    //   10684: aload_0
    //   10685: aload_2
    //   10686: aload 19
    //   10688: ldc_w 2134
    //   10691: invokespecial 3530	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;Ljava/lang/String;)V
    //   10694: goto +3271 -> 13965
    //   10697: aload_0
    //   10698: aload_2
    //   10699: aload 19
    //   10701: ldc_w 2139
    //   10704: invokespecial 3530	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;Ljava/lang/String;)V
    //   10707: goto +3258 -> 13965
    //   10710: aload_0
    //   10711: aload_2
    //   10712: aload 19
    //   10714: invokevirtual 3532	com/tencent/mobileqq/config/splashlogo/ConfigServlet:f	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10717: goto +3248 -> 13965
    //   10720: aload_0
    //   10721: aload_3
    //   10722: aload 19
    //   10724: invokespecial 3534	com/tencent/mobileqq/config/splashlogo/ConfigServlet:m	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10727: goto +3238 -> 13965
    //   10730: aload_0
    //   10731: aload_2
    //   10732: aload 19
    //   10734: invokespecial 3537	com/tencent/mobileqq/config/splashlogo/ConfigServlet:as	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10737: goto +3228 -> 13965
    //   10740: aload_0
    //   10741: aload_2
    //   10742: aload 19
    //   10744: invokevirtual 3539	com/tencent/mobileqq/config/splashlogo/ConfigServlet:g	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10747: goto +3218 -> 13965
    //   10750: aload_0
    //   10751: aload_2
    //   10752: aload 19
    //   10754: invokevirtual 3541	com/tencent/mobileqq/config/splashlogo/ConfigServlet:h	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10757: goto +3208 -> 13965
    //   10760: aload_0
    //   10761: aload_2
    //   10762: aload 19
    //   10764: invokevirtual 3543	com/tencent/mobileqq/config/splashlogo/ConfigServlet:l	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10767: goto +3198 -> 13965
    //   10770: aload_2
    //   10771: sipush 216
    //   10774: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   10777: checkcast 2160	com/tencent/mobileqq/flashchat/FlashChatManager
    //   10780: aload_2
    //   10781: aload 19
    //   10783: invokevirtual 3545	com/tencent/mobileqq/flashchat/FlashChatManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10786: goto +3179 -> 13965
    //   10789: aload_0
    //   10790: aload_2
    //   10791: aload 19
    //   10793: invokevirtual 3547	com/tencent/mobileqq/config/splashlogo/ConfigServlet:q	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10796: goto +3169 -> 13965
    //   10799: aload_0
    //   10800: aload_2
    //   10801: aload 19
    //   10803: invokevirtual 3549	com/tencent/mobileqq/config/splashlogo/ConfigServlet:k	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10806: goto +3159 -> 13965
    //   10809: aload_2
    //   10810: sipush 207
    //   10813: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   10816: checkcast 2169	com/tencent/biz/qqstory/troop/TroopStoryManager
    //   10819: getfield 2172	com/tencent/biz/qqstory/troop/TroopStoryManager:a	Lcom/tencent/biz/qqstory/troop/TroopDynamicConfig;
    //   10822: aload_2
    //   10823: aload 19
    //   10825: invokevirtual 3550	com/tencent/biz/qqstory/troop/TroopDynamicConfig:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10828: goto +3137 -> 13965
    //   10831: aload_0
    //   10832: aload_2
    //   10833: aload 19
    //   10835: invokevirtual 3552	com/tencent/mobileqq/config/splashlogo/ConfigServlet:j	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10838: goto +3127 -> 13965
    //   10841: aload_0
    //   10842: aload_2
    //   10843: aload 19
    //   10845: invokevirtual 3554	com/tencent/mobileqq/config/splashlogo/ConfigServlet:m	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10848: goto +3117 -> 13965
    //   10851: aload_0
    //   10852: aload_2
    //   10853: aload 19
    //   10855: invokevirtual 3556	com/tencent/mobileqq/config/splashlogo/ConfigServlet:r	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10858: goto +3107 -> 13965
    //   10861: aload_0
    //   10862: aload_2
    //   10863: aload 19
    //   10865: invokevirtual 3558	com/tencent/mobileqq/config/splashlogo/ConfigServlet:s	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10868: goto +3097 -> 13965
    //   10871: aload_0
    //   10872: aload_2
    //   10873: aload 19
    //   10875: invokevirtual 3560	com/tencent/mobileqq/config/splashlogo/ConfigServlet:t	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10878: goto +3087 -> 13965
    //   10881: aload_0
    //   10882: aload_2
    //   10883: aload 19
    //   10885: invokevirtual 3562	com/tencent/mobileqq/config/splashlogo/ConfigServlet:u	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10888: goto +3077 -> 13965
    //   10891: aload_0
    //   10892: aload_2
    //   10893: aload 19
    //   10895: invokevirtual 3564	com/tencent/mobileqq/config/splashlogo/ConfigServlet:w	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10898: goto +3067 -> 13965
    //   10901: aload_0
    //   10902: aload_2
    //   10903: aload 19
    //   10905: invokespecial 3567	com/tencent/mobileqq/config/splashlogo/ConfigServlet:at	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10908: goto +3057 -> 13965
    //   10911: aload_0
    //   10912: aload_2
    //   10913: aload 19
    //   10915: invokevirtual 3569	com/tencent/mobileqq/config/splashlogo/ConfigServlet:v	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10918: goto +3047 -> 13965
    //   10921: aload 19
    //   10923: aload_2
    //   10924: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   10927: invokestatic 2256	com/tencent/av/opengl/effects/EffectBeautyTools:a	(Landroid/content/Context;)I
    //   10930: sipush 180
    //   10933: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   10936: astore 16
    //   10938: aload 16
    //   10940: ifnull +3025 -> 13965
    //   10943: aload_2
    //   10944: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   10947: aload 16
    //   10949: aload 19
    //   10951: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   10954: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   10957: iconst_1
    //   10958: invokestatic 3572	com/tencent/av/opengl/effects/EffectBeautyTools:a	(Landroid/content/Context;Ljava/lang/String;IZ)V
    //   10961: goto +3004 -> 13965
    //   10964: aload_0
    //   10965: aload_2
    //   10966: aload 19
    //   10968: invokevirtual 3574	com/tencent/mobileqq/config/splashlogo/ConfigServlet:x	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10971: goto +2994 -> 13965
    //   10974: aload_0
    //   10975: aload_2
    //   10976: aload 19
    //   10978: invokevirtual 3576	com/tencent/mobileqq/config/splashlogo/ConfigServlet:i	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10981: goto +2984 -> 13965
    //   10984: aload_0
    //   10985: aload 19
    //   10987: invokespecial 3578	com/tencent/mobileqq/config/splashlogo/ConfigServlet:t	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10990: goto +2975 -> 13965
    //   10993: aload_0
    //   10994: aload 19
    //   10996: invokespecial 3580	com/tencent/mobileqq/config/splashlogo/ConfigServlet:u	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   10999: goto +2966 -> 13965
    //   11002: aload_0
    //   11003: aload_2
    //   11004: aload 19
    //   11006: invokevirtual 3582	com/tencent/mobileqq/config/splashlogo/ConfigServlet:y	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11009: aload_0
    //   11010: aload_2
    //   11011: aload 19
    //   11013: invokevirtual 3584	com/tencent/mobileqq/config/splashlogo/ConfigServlet:n	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11016: goto +2949 -> 13965
    //   11019: aload_0
    //   11020: aload_2
    //   11021: aload 19
    //   11023: invokevirtual 3586	com/tencent/mobileqq/config/splashlogo/ConfigServlet:o	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11026: goto +2939 -> 13965
    //   11029: aload_0
    //   11030: aload_2
    //   11031: aload 19
    //   11033: invokespecial 3588	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ac	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11036: goto +2929 -> 13965
    //   11039: aload_0
    //   11040: aload_2
    //   11041: aload 19
    //   11043: invokespecial 3590	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ad	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11046: goto +2919 -> 13965
    //   11049: aload_0
    //   11050: aload_2
    //   11051: aload 19
    //   11053: invokevirtual 3592	com/tencent/mobileqq/config/splashlogo/ConfigServlet:p	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11056: goto +2909 -> 13965
    //   11059: aload_0
    //   11060: aload_2
    //   11061: aload 19
    //   11063: invokevirtual 3594	com/tencent/mobileqq/config/splashlogo/ConfigServlet:z	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11066: goto +2899 -> 13965
    //   11069: aload 19
    //   11071: aload_2
    //   11072: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   11075: invokestatic 2288	com/tencent/mobileqq/activity/richmedia/VideoFilterTools:a	(Landroid/content/Context;)I
    //   11078: sipush 199
    //   11081: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   11084: astore 16
    //   11086: aload 16
    //   11088: ifnull +2877 -> 13965
    //   11091: aload_2
    //   11092: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   11095: aload 16
    //   11097: aload 19
    //   11099: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   11102: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   11105: invokestatic 3595	com/tencent/mobileqq/activity/richmedia/VideoFilterTools:a	(Landroid/content/Context;Ljava/lang/String;I)V
    //   11108: goto +2857 -> 13965
    //   11111: aload 19
    //   11113: aload_2
    //   11114: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   11117: invokestatic 2291	com/tencent/mobileqq/richmedia/capture/data/CaptureVideoFilterManager:a	(Landroid/content/Context;)I
    //   11120: sipush 225
    //   11123: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   11126: astore 16
    //   11128: aload 16
    //   11130: ifnull +2835 -> 13965
    //   11133: invokestatic 3598	com/tencent/mobileqq/richmedia/capture/data/CaptureVideoFilterManager:a	()Lcom/tencent/mobileqq/richmedia/capture/data/CaptureVideoFilterManager;
    //   11136: aload_2
    //   11137: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   11140: aload 16
    //   11142: aload 19
    //   11144: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   11147: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   11150: invokevirtual 3599	com/tencent/mobileqq/richmedia/capture/data/CaptureVideoFilterManager:a	(Landroid/content/Context;Ljava/lang/String;I)V
    //   11153: goto +2812 -> 13965
    //   11156: aload_0
    //   11157: aload_2
    //   11158: aload 19
    //   11160: invokevirtual 3601	com/tencent/mobileqq/config/splashlogo/ConfigServlet:A	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11163: goto +2802 -> 13965
    //   11166: aload_0
    //   11167: aload_2
    //   11168: aload 19
    //   11170: invokevirtual 3603	com/tencent/mobileqq/config/splashlogo/ConfigServlet:c	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11173: goto +2792 -> 13965
    //   11176: aload_0
    //   11177: aload_2
    //   11178: aload 19
    //   11180: invokespecial 3605	com/tencent/mobileqq/config/splashlogo/ConfigServlet:au	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11183: goto +2782 -> 13965
    //   11186: aload_0
    //   11187: aload_2
    //   11188: aload 19
    //   11190: invokespecial 3607	com/tencent/mobileqq/config/splashlogo/ConfigServlet:av	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11193: goto +2772 -> 13965
    //   11196: aload_2
    //   11197: aload 19
    //   11199: invokestatic 3609	com/tencent/mobileqq/config/splashlogo/ConfigServlet:B	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11202: goto +2763 -> 13965
    //   11205: aload_0
    //   11206: aload_2
    //   11207: aload 19
    //   11209: invokespecial 3611	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)I
    //   11212: invokestatic 3612	com/tencent/mobileqq/shortvideo/ShortVideoResourceManager:b	(I)V
    //   11215: goto +2750 -> 13965
    //   11218: aload 19
    //   11220: aload_2
    //   11221: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   11224: invokestatic 2324	com/tencent/av/utils/SignalStrengthReport:a	(Landroid/content/Context;)I
    //   11227: sipush 218
    //   11230: invokestatic 411	com/tencent/mobileqq/config/splashlogo/ConfigServlet:b	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   11233: astore 16
    //   11235: aload 16
    //   11237: ifnull +2728 -> 13965
    //   11240: aload_2
    //   11241: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   11244: aload 16
    //   11246: aload 19
    //   11248: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   11251: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   11254: invokestatic 3613	com/tencent/av/utils/SignalStrengthReport:a	(Landroid/content/Context;Ljava/lang/String;I)V
    //   11257: goto +2708 -> 13965
    //   11260: aload_2
    //   11261: sipush 237
    //   11264: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   11267: checkcast 3615	com/tencent/biz/pubaccount/Advertisement/manager/AdvertisementVideoPreloadManager
    //   11270: astore 16
    //   11272: aload 16
    //   11274: ifnull +2691 -> 13965
    //   11277: aload 16
    //   11279: aload_2
    //   11280: aload 19
    //   11282: invokevirtual 3616	com/tencent/biz/pubaccount/Advertisement/manager/AdvertisementVideoPreloadManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11285: goto +2680 -> 13965
    //   11288: aload_0
    //   11289: aload_2
    //   11290: aload 19
    //   11292: invokevirtual 3618	com/tencent/mobileqq/config/splashlogo/ConfigServlet:D	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11295: goto +2670 -> 13965
    //   11298: aload_0
    //   11299: aload_2
    //   11300: aload 19
    //   11302: invokespecial 3620	com/tencent/mobileqq/config/splashlogo/ConfigServlet:U	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11305: goto +2660 -> 13965
    //   11308: aload_2
    //   11309: sipush 231
    //   11312: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   11315: aload 19
    //   11317: invokestatic 3623	com/tencent/mobileqq/activity/richmedia/subtitles/RDConfigServletProxy:a	(Lcom/tencent/mobileqq/app/QQAppInterface;ILjava/lang/String;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11320: goto +2645 -> 13965
    //   11323: aload_0
    //   11324: aload_2
    //   11325: aload 19
    //   11327: invokevirtual 3625	com/tencent/mobileqq/config/splashlogo/ConfigServlet:C	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11330: goto +2635 -> 13965
    //   11333: aload_0
    //   11334: aload_2
    //   11335: aload 19
    //   11337: invokevirtual 3626	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11340: goto +2625 -> 13965
    //   11343: aload_0
    //   11344: aload_2
    //   11345: aload 19
    //   11347: invokevirtual 3628	com/tencent/mobileqq/config/splashlogo/ConfigServlet:M	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11350: goto +2615 -> 13965
    //   11353: aload_0
    //   11354: aload_2
    //   11355: aload 19
    //   11357: invokevirtual 3630	com/tencent/mobileqq/config/splashlogo/ConfigServlet:E	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11360: goto +2605 -> 13965
    //   11363: aload_0
    //   11364: aload_2
    //   11365: aload 19
    //   11367: invokevirtual 3632	com/tencent/mobileqq/config/splashlogo/ConfigServlet:G	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11370: goto +2595 -> 13965
    //   11373: aload_0
    //   11374: aload_2
    //   11375: aload 19
    //   11377: invokevirtual 3634	com/tencent/mobileqq/config/splashlogo/ConfigServlet:H	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11380: goto +2585 -> 13965
    //   11383: aload_0
    //   11384: aload_2
    //   11385: aload 19
    //   11387: ldc_w 2353
    //   11390: invokespecial 3530	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;Ljava/lang/String;)V
    //   11393: goto +2572 -> 13965
    //   11396: aload_0
    //   11397: aload_2
    //   11398: aload 19
    //   11400: invokevirtual 3636	com/tencent/mobileqq/config/splashlogo/ConfigServlet:K	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11403: goto +2562 -> 13965
    //   11406: aload 19
    //   11408: ifnull +2660 -> 14068
    //   11411: aload 19
    //   11413: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   11416: ifnonnull +4 -> 11420
    //   11419: return
    //   11420: aload 19
    //   11422: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   11425: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   11428: aload_2
    //   11429: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   11432: invokestatic 2355	com/tencent/mobileqq/utils/SharedPreUtils:d	(Landroid/content/Context;)I
    //   11435: if_icmpeq +2633 -> 14068
    //   11438: aconst_null
    //   11439: astore 17
    //   11441: aload 17
    //   11443: astore 16
    //   11445: aload 19
    //   11447: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   11450: ifnull +79 -> 11529
    //   11453: aload 17
    //   11455: astore 16
    //   11457: aload 19
    //   11459: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   11462: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   11465: ifle +64 -> 11529
    //   11468: aload 19
    //   11470: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   11473: iconst_0
    //   11474: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   11477: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   11480: astore 16
    //   11482: aload 16
    //   11484: getfield 912	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:compress	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   11487: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   11490: iconst_1
    //   11491: if_icmpne +114 -> 11605
    //   11494: aload 16
    //   11496: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   11499: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   11502: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   11505: invokestatic 932	com/tencent/mobileqq/olympic/utils/OlympicUtil:a	([B)[B
    //   11508: astore 17
    //   11510: aload 17
    //   11512: ifnull +2434 -> 13946
    //   11515: new 139	java/lang/String
    //   11518: dup
    //   11519: aload 17
    //   11521: ldc_w 934
    //   11524: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   11527: astore 16
    //   11529: aload 16
    //   11531: ifnull +33 -> 11564
    //   11534: new 141	org/json/JSONObject
    //   11537: dup
    //   11538: aload 16
    //   11540: invokespecial 144	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   11543: invokestatic 3639	com/tencent/mfsdk/Config:a	(Lorg/json/JSONObject;)V
    //   11546: aload_0
    //   11547: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   11550: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   11553: aload 19
    //   11555: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   11558: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   11561: invokestatic 3641	com/tencent/mobileqq/utils/SharedPreUtils:c	(Landroid/content/Context;I)V
    //   11564: goto +2401 -> 13965
    //   11567: astore 16
    //   11569: aconst_null
    //   11570: astore 16
    //   11572: goto -43 -> 11529
    //   11575: astore 16
    //   11577: invokestatic 966	java/lang/System:gc	()V
    //   11580: new 139	java/lang/String
    //   11583: dup
    //   11584: aload 17
    //   11586: ldc_w 934
    //   11589: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   11592: astore 16
    //   11594: goto -65 -> 11529
    //   11597: astore 16
    //   11599: aconst_null
    //   11600: astore 16
    //   11602: goto -73 -> 11529
    //   11605: aload 16
    //   11607: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   11610: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   11613: invokevirtual 971	com/tencent/mobileqq/pb/ByteStringMicro:toStringUtf8	()Ljava/lang/String;
    //   11616: astore 16
    //   11618: goto -89 -> 11529
    //   11621: astore 16
    //   11623: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   11626: ifeq +2443 -> 14069
    //   11629: ldc 90
    //   11631: iconst_2
    //   11632: aload 16
    //   11634: iconst_0
    //   11635: anewarray 179	java/lang/Object
    //   11638: invokestatic 3643	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/Throwable;[Ljava/lang/Object;)V
    //   11641: goto +2428 -> 14069
    //   11644: aload_0
    //   11645: aload_2
    //   11646: aload 19
    //   11648: invokevirtual 3645	com/tencent/mobileqq/config/splashlogo/ConfigServlet:I	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11651: goto +2314 -> 13965
    //   11654: aload_0
    //   11655: aload_2
    //   11656: aload 19
    //   11658: invokevirtual 3647	com/tencent/mobileqq/config/splashlogo/ConfigServlet:J	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11661: goto +2304 -> 13965
    //   11664: aload_0
    //   11665: aload_2
    //   11666: aload 19
    //   11668: invokevirtual 3649	com/tencent/mobileqq/config/splashlogo/ConfigServlet:L	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11671: goto +2294 -> 13965
    //   11674: aload_0
    //   11675: aload_2
    //   11676: aload 19
    //   11678: invokevirtual 3651	com/tencent/mobileqq/config/splashlogo/ConfigServlet:F	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11681: goto +2284 -> 13965
    //   11684: aload_0
    //   11685: aload_2
    //   11686: aload 19
    //   11688: invokespecial 3653	com/tencent/mobileqq/config/splashlogo/ConfigServlet:ae	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11691: goto +2274 -> 13965
    //   11694: aload_0
    //   11695: aload_2
    //   11696: aload 19
    //   11698: invokespecial 3655	com/tencent/mobileqq/config/splashlogo/ConfigServlet:af	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11701: goto +2264 -> 13965
    //   11704: aload_0
    //   11705: aload_2
    //   11706: aload 19
    //   11708: invokespecial 3657	com/tencent/mobileqq/config/splashlogo/ConfigServlet:T	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11711: goto +2254 -> 13965
    //   11714: aload_0
    //   11715: aload_2
    //   11716: aload 19
    //   11718: invokevirtual 3659	com/tencent/mobileqq/config/splashlogo/ConfigServlet:O	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11721: goto +2244 -> 13965
    //   11724: aload_0
    //   11725: aload_2
    //   11726: aload 19
    //   11728: invokevirtual 3661	com/tencent/mobileqq/config/splashlogo/ConfigServlet:N	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11731: goto +2234 -> 13965
    //   11734: aload_2
    //   11735: bipush 51
    //   11737: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   11740: checkcast 808	com/tencent/mobileqq/app/TroopManager
    //   11743: getfield 2377	com/tencent/mobileqq/app/TroopManager:jdField_a_of_type_ComTencentMobileqqTroopHomeworkConfigHomeworkConfig	Lcom/tencent/mobileqq/troop/homework/config/HomeworkConfig;
    //   11746: aload_2
    //   11747: aload 19
    //   11749: invokevirtual 3662	com/tencent/mobileqq/troop/homework/config/HomeworkConfig:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11752: goto +2213 -> 13965
    //   11755: aload_2
    //   11756: bipush 51
    //   11758: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   11761: checkcast 808	com/tencent/mobileqq/app/TroopManager
    //   11764: getfield 2383	com/tencent/mobileqq/app/TroopManager:jdField_a_of_type_ComTencentMobileqqTroopHomeworkReciteConfigReciteConfig	Lcom/tencent/mobileqq/troop/homework/recite/config/ReciteConfig;
    //   11767: aload_2
    //   11768: aload 19
    //   11770: invokevirtual 3663	com/tencent/mobileqq/troop/homework/recite/config/ReciteConfig:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11773: goto +2192 -> 13965
    //   11776: aload_2
    //   11777: invokestatic 3668	com/tencent/biz/qqstory/base/QQStoryFeedManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)Lcom/tencent/biz/qqstory/base/QQStoryFeedManager;
    //   11780: aload 19
    //   11782: invokevirtual 3669	com/tencent/biz/qqstory/base/QQStoryFeedManager:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11785: goto +2180 -> 13965
    //   11788: aload_2
    //   11789: sipush 196
    //   11792: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   11795: checkcast 3671	com/tencent/biz/qqstory/base/StoryHaloManager
    //   11798: aload 19
    //   11800: invokevirtual 3672	com/tencent/biz/qqstory/base/StoryHaloManager:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11803: goto +2162 -> 13965
    //   11806: aload_2
    //   11807: aload 19
    //   11809: invokestatic 3673	com/tencent/mobileqq/shortvideo/util/RecentDanceConfigMgr:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)I
    //   11812: pop
    //   11813: goto +2152 -> 13965
    //   11816: aload_2
    //   11817: sipush 264
    //   11820: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   11823: checkcast 3675	com/tencent/mobileqq/now/enter/NowEnterManager
    //   11826: aload 19
    //   11828: invokevirtual 3676	com/tencent/mobileqq/now/enter/NowEnterManager:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11831: goto +2134 -> 13965
    //   11834: aload_0
    //   11835: aload_2
    //   11836: aload 19
    //   11838: invokevirtual 3678	com/tencent/mobileqq/config/splashlogo/ConfigServlet:P	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11841: goto +2124 -> 13965
    //   11844: aload_0
    //   11845: aload_2
    //   11846: aload 19
    //   11848: invokevirtual 3680	com/tencent/mobileqq/config/splashlogo/ConfigServlet:Q	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11851: goto +2114 -> 13965
    //   11854: aload_2
    //   11855: sipush 271
    //   11858: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   11861: checkcast 3682	com/tencent/mobileqq/teamwork/spread/AIOMessageSpreadManager
    //   11864: aload 19
    //   11866: invokevirtual 3683	com/tencent/mobileqq/teamwork/spread/AIOMessageSpreadManager:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11869: goto +2096 -> 13965
    //   11872: aload_2
    //   11873: sipush 152
    //   11876: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   11879: checkcast 2697	com/tencent/mobileqq/apollo/ApolloManager
    //   11882: aload_2
    //   11883: aload 19
    //   11885: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   11888: invokevirtual 3684	com/tencent/mobileqq/apollo/ApolloManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;Ljava/lang/String;)V
    //   11891: goto +2074 -> 13965
    //   11894: aload_2
    //   11895: aload 19
    //   11897: aload 16
    //   11899: invokevirtual 490	java/lang/Integer:intValue	()I
    //   11902: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   11905: invokestatic 3689	com/tencent/mobileqq/statistics/QZoneReport:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;ILjava/lang/String;)V
    //   11908: goto +2057 -> 13965
    //   11911: aload_0
    //   11912: aload_2
    //   11913: aload 19
    //   11915: invokevirtual 3691	com/tencent/mobileqq/config/splashlogo/ConfigServlet:S	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11918: goto +2047 -> 13965
    //   11921: aload_2
    //   11922: aload 16
    //   11924: invokevirtual 490	java/lang/Integer:intValue	()I
    //   11927: aload 19
    //   11929: invokestatic 3696	com/tencent/mobileqq/data/nativemonitor/NativeMonitorConfigHelper:a	(Lcom/tencent/mobileqq/app/QQAppInterface;ILcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11932: goto +2033 -> 13965
    //   11935: aload_0
    //   11936: aload_2
    //   11937: aload 19
    //   11939: invokevirtual 3698	com/tencent/mobileqq/config/splashlogo/ConfigServlet:R	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11942: goto +2023 -> 13965
    //   11945: aload_0
    //   11946: aload_3
    //   11947: aload 19
    //   11949: invokespecial 3700	com/tencent/mobileqq/config/splashlogo/ConfigServlet:o	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11952: goto +2013 -> 13965
    //   11955: aload_0
    //   11956: aload_3
    //   11957: aload 19
    //   11959: invokespecial 3702	com/tencent/mobileqq/config/splashlogo/ConfigServlet:q	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11962: goto +2003 -> 13965
    //   11965: aload_0
    //   11966: aload_3
    //   11967: aload 19
    //   11969: invokespecial 3704	com/tencent/mobileqq/config/splashlogo/ConfigServlet:p	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11972: goto +1993 -> 13965
    //   11975: aload_0
    //   11976: aload_3
    //   11977: aload 19
    //   11979: invokespecial 3706	com/tencent/mobileqq/config/splashlogo/ConfigServlet:r	(Landroid/content/Intent;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   11982: goto +1983 -> 13965
    //   11985: aload 19
    //   11987: aload_2
    //   11988: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   11991: invokestatic 2446	dov/com/tencent/mobileqq/activity/richmedia/VideoFilterTools:a	(Landroid/content/Context;)I
    //   11994: sipush 306
    //   11997: invokestatic 3708	com/tencent/mobileqq/config/splashlogo/ConfigServlet:a	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;II)Ljava/lang/String;
    //   12000: astore 16
    //   12002: aload 16
    //   12004: ifnull +1961 -> 13965
    //   12007: new 3710	dov/com/qq/im/capture/util/ConfigSimplifier
    //   12010: dup
    //   12011: invokespecial 3711	dov/com/qq/im/capture/util/ConfigSimplifier:<init>	()V
    //   12014: aload 16
    //   12016: getstatic 3714	com/tencent/av/opengl/effects/EffectFilterTools:jdField_b_of_type_JavaLangString	Ljava/lang/String;
    //   12019: ldc_w 3716
    //   12022: new 3718	absr
    //   12025: dup
    //   12026: aload_0
    //   12027: aload_2
    //   12028: aload 19
    //   12030: invokespecial 3721	absr:<init>	(Lcom/tencent/mobileqq/config/splashlogo/ConfigServlet;Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   12033: invokevirtual 3724	dov/com/qq/im/capture/util/ConfigSimplifier:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldov/com/qq/im/capture/util/ConfigSimplifier$ConfigDownloadCallback;)V
    //   12036: goto +1929 -> 13965
    //   12039: aload_0
    //   12040: aload_2
    //   12041: aload 19
    //   12043: invokespecial 3726	com/tencent/mobileqq/config/splashlogo/ConfigServlet:aw	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   12046: goto +1919 -> 13965
    //   12049: aload 4
    //   12051: ifnull +313 -> 12364
    //   12054: iload 10
    //   12056: ifne +32 -> 12088
    //   12059: aload_2
    //   12060: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   12063: ldc_w 2997
    //   12066: invokestatic 3000	com/tencent/mobileqq/utils/PackageUtil:a	(Landroid/content/Context;Ljava/lang/String;)Z
    //   12069: ifne +19 -> 12088
    //   12072: aload_2
    //   12073: sipush 255
    //   12076: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   12079: checkcast 3728	com/tencent/mobileqq/app/upgrade/UpgradeTIMManager
    //   12082: aload_2
    //   12083: aload 4
    //   12085: invokevirtual 3729	com/tencent/mobileqq/app/upgrade/UpgradeTIMManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;Lcom/tencent/mobileqq/app/upgrade/UpgradeTIMWrapper;)V
    //   12088: invokestatic 2976	java/lang/System:currentTimeMillis	()J
    //   12091: lstore 14
    //   12093: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   12096: ifeq +44 -> 12140
    //   12099: ldc 90
    //   12101: iconst_2
    //   12102: new 92	java/lang/StringBuilder
    //   12105: dup
    //   12106: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   12109: ldc_w 3731
    //   12112: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12115: lload 14
    //   12117: lload 12
    //   12119: lsub
    //   12120: invokevirtual 2097	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   12123: ldc_w 3733
    //   12126: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12129: iload 10
    //   12131: invokevirtual 833	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   12134: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   12137: invokestatic 2531	com/tencent/qphone/base/util/QLog:w	(Ljava/lang/String;ILjava/lang/String;)V
    //   12140: aconst_null
    //   12141: astore 16
    //   12143: aload_3
    //   12144: ifnull +1789 -> 13933
    //   12147: aload_3
    //   12148: ldc_w 2631
    //   12151: iconst_0
    //   12152: invokevirtual 2549	android/content/Intent:getBooleanExtra	(Ljava/lang/String;Z)Z
    //   12155: istore 10
    //   12157: iload 10
    //   12159: ifeq +224 -> 12383
    //   12162: aload_3
    //   12163: ldc_w 3735
    //   12166: iconst_0
    //   12167: invokevirtual 2884	android/content/Intent:getIntExtra	(Ljava/lang/String;I)I
    //   12170: istore 8
    //   12172: ldc 90
    //   12174: iconst_2
    //   12175: iconst_2
    //   12176: anewarray 179	java/lang/Object
    //   12179: dup
    //   12180: iconst_0
    //   12181: ldc_w 3737
    //   12184: aastore
    //   12185: dup
    //   12186: iconst_1
    //   12187: iload 8
    //   12189: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   12192: aastore
    //   12193: invokestatic 207	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;I[Ljava/lang/Object;)V
    //   12196: iload 8
    //   12198: istore 6
    //   12200: iload 10
    //   12202: istore 5
    //   12204: aload 16
    //   12206: astore 4
    //   12208: iload 8
    //   12210: iconst_3
    //   12211: if_icmpge +183 -> 12394
    //   12214: aload_1
    //   12215: getfield 3740	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:next_req_types	Lcom/tencent/mobileqq/pb/PBRepeatField;
    //   12218: invokevirtual 575	com/tencent/mobileqq/pb/PBRepeatField:get	()Ljava/util/List;
    //   12221: astore 17
    //   12223: iload 8
    //   12225: istore 6
    //   12227: iload 10
    //   12229: istore 5
    //   12231: aload 16
    //   12233: astore 4
    //   12235: aload 17
    //   12237: ifnull +157 -> 12394
    //   12240: iload 8
    //   12242: istore 6
    //   12244: iload 10
    //   12246: istore 5
    //   12248: aload 16
    //   12250: astore 4
    //   12252: aload 17
    //   12254: invokeinterface 124 1 0
    //   12259: ifle +135 -> 12394
    //   12262: aload 17
    //   12264: invokeinterface 124 1 0
    //   12269: newarray int
    //   12271: astore 16
    //   12273: aload 17
    //   12275: invokeinterface 124 1 0
    //   12280: istore 9
    //   12282: iconst_0
    //   12283: istore 7
    //   12285: iload 8
    //   12287: istore 6
    //   12289: iload 10
    //   12291: istore 5
    //   12293: aload 16
    //   12295: astore 4
    //   12297: iload 7
    //   12299: iload 9
    //   12301: if_icmpge +93 -> 12394
    //   12304: aload 17
    //   12306: iload 7
    //   12308: invokeinterface 527 2 0
    //   12313: checkcast 183	java/lang/Integer
    //   12316: invokevirtual 490	java/lang/Integer:intValue	()I
    //   12319: istore 6
    //   12321: aload 16
    //   12323: iload 7
    //   12325: iload 6
    //   12327: iastore
    //   12328: aload 18
    //   12330: invokeinterface 124 1 0
    //   12335: ifle +20 -> 12355
    //   12338: aload 18
    //   12340: new 183	java/lang/Integer
    //   12343: dup
    //   12344: iload 6
    //   12346: invokespecial 2977	java/lang/Integer:<init>	(I)V
    //   12349: invokeinterface 2980 2 0
    //   12354: pop
    //   12355: iload 7
    //   12357: iconst_1
    //   12358: iadd
    //   12359: istore 7
    //   12361: goto -76 -> 12285
    //   12364: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   12367: ifeq -279 -> 12088
    //   12370: ldc_w 2039
    //   12373: iconst_2
    //   12374: ldc_w 3742
    //   12377: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   12380: goto -292 -> 12088
    //   12383: iconst_0
    //   12384: istore 6
    //   12386: aload 16
    //   12388: astore 4
    //   12390: iload 10
    //   12392: istore 5
    //   12394: aload 18
    //   12396: invokeinterface 128 1 0
    //   12401: astore 16
    //   12403: aload 16
    //   12405: invokeinterface 133 1 0
    //   12410: ifeq +1326 -> 13736
    //   12413: aload 16
    //   12415: invokeinterface 137 1 0
    //   12420: checkcast 183	java/lang/Integer
    //   12423: astore 17
    //   12425: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   12428: ifeq +46 -> 12474
    //   12431: ldc 90
    //   12433: iconst_2
    //   12434: new 92	java/lang/StringBuilder
    //   12437: dup
    //   12438: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   12441: ldc_w 3744
    //   12444: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12447: aload 17
    //   12449: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   12452: ldc_w 2452
    //   12455: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12458: aload 18
    //   12460: invokeinterface 124 1 0
    //   12465: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   12468: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   12471: invokestatic 2531	com/tencent/qphone/base/util/QLog:w	(Ljava/lang/String;ILjava/lang/String;)V
    //   12474: aload 17
    //   12476: invokevirtual 490	java/lang/Integer:intValue	()I
    //   12479: lookupswitch	default:+217->12696, 1:+220->12699, 26:+675->13154, 38:+706->13185, 42:+927->13406, 46:+668->13147, 86:+881->13360, 87:+783->13262, 113:+935->13414, 116:+334->12813, 119:+1122->13601, 133:+981->13460, 156:+-76->12403, 185:+1148->13627, 188:+826->13305, 191:+1196->13675, 202:+1158->13637, 203:+1177->13656, 205:+863->13342, 206:+845->13324, 215:+1212->13691, 223:+1061->13540, 231:+1218->13697, 249:+1077->13556, 290:+1232->13711, 297:+1250->13729, 311:+1061->13540
    //   12697: impdep1
    //   12698: <illegal opcode>
    //   12699: new 92	java/lang/StringBuilder
    //   12702: dup
    //   12703: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   12706: aload_0
    //   12707: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   12710: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   12713: invokevirtual 3094	mqq/app/MobileQQ:getFilesDir	()Ljava/io/File;
    //   12716: invokevirtual 3097	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   12719: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12722: ldc_w 3746
    //   12725: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12728: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   12731: astore 17
    //   12733: new 1838	java/io/File
    //   12736: dup
    //   12737: aload 17
    //   12739: invokespecial 1842	java/io/File:<init>	(Ljava/lang/String;)V
    //   12742: astore 19
    //   12744: aload 19
    //   12746: ifnull -343 -> 12403
    //   12749: aload 19
    //   12751: invokevirtual 1845	java/io/File:exists	()Z
    //   12754: ifeq -351 -> 12403
    //   12757: aload 19
    //   12759: invokevirtual 3111	java/io/File:isDirectory	()Z
    //   12762: ifeq -359 -> 12403
    //   12765: aload 19
    //   12767: invokevirtual 3115	java/io/File:listFiles	()[Ljava/io/File;
    //   12770: astore 19
    //   12772: aload 19
    //   12774: ifnull -371 -> 12403
    //   12777: aload 19
    //   12779: arraylength
    //   12780: istore 8
    //   12782: iconst_0
    //   12783: istore 7
    //   12785: iload 7
    //   12787: iload 8
    //   12789: if_icmpge -386 -> 12403
    //   12792: aload 19
    //   12794: iload 7
    //   12796: aaload
    //   12797: astore 20
    //   12799: aload 20
    //   12801: ifnonnull +440 -> 13241
    //   12804: iload 7
    //   12806: iconst_1
    //   12807: iadd
    //   12808: istore 7
    //   12810: goto -25 -> 12785
    //   12813: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   12816: ifeq +12 -> 12828
    //   12819: ldc 90
    //   12821: iconst_2
    //   12822: ldc_w 3748
    //   12825: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   12828: aload_2
    //   12829: iconst_4
    //   12830: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   12833: checkcast 2034	com/tencent/mobileqq/app/ConfigHandler
    //   12836: astore 19
    //   12838: ldc_w 3022
    //   12841: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   12844: invokestatic 3750	com/tencent/mobileqq/app/upgrade/UpgradeConfigManager:a	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   12847: astore 20
    //   12849: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   12852: ifeq +30 -> 12882
    //   12855: ldc 90
    //   12857: iconst_2
    //   12858: new 92	java/lang/StringBuilder
    //   12861: dup
    //   12862: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   12865: ldc_w 3048
    //   12868: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12871: aload 20
    //   12873: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   12876: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   12879: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   12882: aload 20
    //   12884: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   12887: ifeq +53 -> 12940
    //   12890: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   12893: ifeq +12 -> 12905
    //   12896: ldc 90
    //   12898: iconst_2
    //   12899: ldc_w 3752
    //   12902: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   12905: aload_2
    //   12906: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   12909: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   12912: iconst_0
    //   12913: invokestatic 3027	com/tencent/mobileqq/utils/SharedPreUtils:u	(Landroid/content/Context;Ljava/lang/String;I)V
    //   12916: ldc_w 3022
    //   12919: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   12922: invokestatic 3025	com/tencent/mobileqq/app/upgrade/UpgradeConfigManager:a	(Ljava/lang/String;Ljava/lang/String;)Z
    //   12925: pop
    //   12926: aload 19
    //   12928: invokestatic 2825	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeController;
    //   12931: invokevirtual 2828	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper;
    //   12934: invokevirtual 2831	com/tencent/mobileqq/app/ConfigHandler:a	(Lcom/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper;)V
    //   12937: goto -534 -> 12403
    //   12940: invokestatic 2825	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeController;
    //   12943: invokevirtual 2828	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper;
    //   12946: astore 17
    //   12948: aload 17
    //   12950: aload 20
    //   12952: invokevirtual 3030	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:a	(Ljava/lang/String;)V
    //   12955: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   12958: ifeq +42 -> 13000
    //   12961: ldc 90
    //   12963: iconst_2
    //   12964: ldc_w 3032
    //   12967: iconst_2
    //   12968: anewarray 179	java/lang/Object
    //   12971: dup
    //   12972: iconst_0
    //   12973: getstatic 399	com/tencent/common/config/AppSetting:jdField_a_of_type_Int	I
    //   12976: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   12979: aastore
    //   12980: dup
    //   12981: iconst_1
    //   12982: aload 17
    //   12984: getfield 3035	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_b_of_type_ProtocolKQQConfigUpgradeInfo	Lprotocol/KQQConfig/UpgradeInfo;
    //   12987: getfield 3040	protocol/KQQConfig/UpgradeInfo:iUpgradeSdkId	I
    //   12990: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   12993: aastore
    //   12994: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   12997: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13000: getstatic 399	com/tencent/common/config/AppSetting:jdField_a_of_type_Int	I
    //   13003: aload 17
    //   13005: getfield 3035	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_b_of_type_ProtocolKQQConfigUpgradeInfo	Lprotocol/KQQConfig/UpgradeInfo;
    //   13008: getfield 3040	protocol/KQQConfig/UpgradeInfo:iUpgradeSdkId	I
    //   13011: if_icmplt +63 -> 13074
    //   13014: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13017: ifeq +12 -> 13029
    //   13020: ldc 90
    //   13022: iconst_2
    //   13023: ldc_w 3754
    //   13026: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13029: aload_2
    //   13030: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   13033: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   13036: iconst_0
    //   13037: invokestatic 3027	com/tencent/mobileqq/utils/SharedPreUtils:u	(Landroid/content/Context;Ljava/lang/String;I)V
    //   13040: ldc_w 3022
    //   13043: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   13046: invokestatic 3025	com/tencent/mobileqq/app/upgrade/UpgradeConfigManager:a	(Ljava/lang/String;Ljava/lang/String;)Z
    //   13049: pop
    //   13050: aload 17
    //   13052: getfield 3035	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_b_of_type_ProtocolKQQConfigUpgradeInfo	Lprotocol/KQQConfig/UpgradeInfo;
    //   13055: iconst_0
    //   13056: putfield 3045	protocol/KQQConfig/UpgradeInfo:iUpgradeType	I
    //   13059: aload 19
    //   13061: aload 17
    //   13063: invokevirtual 2831	com/tencent/mobileqq/app/ConfigHandler:a	(Lcom/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper;)V
    //   13066: aload 19
    //   13068: invokevirtual 3046	com/tencent/mobileqq/app/ConfigHandler:d	()V
    //   13071: goto -668 -> 12403
    //   13074: aload 17
    //   13076: monitorenter
    //   13077: aload 17
    //   13079: getfield 3057	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_a_of_type_Boolean	Z
    //   13082: ifne +30 -> 13112
    //   13085: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13088: ifeq +12 -> 13100
    //   13091: ldc 90
    //   13093: iconst_2
    //   13094: ldc_w 3059
    //   13097: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13100: aload 17
    //   13102: monitorexit
    //   13103: goto -700 -> 12403
    //   13106: astore_1
    //   13107: aload 17
    //   13109: monitorexit
    //   13110: aload_1
    //   13111: athrow
    //   13112: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13115: ifeq +12 -> 13127
    //   13118: ldc 90
    //   13120: iconst_2
    //   13121: ldc_w 3061
    //   13124: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13127: invokestatic 2825	com/tencent/mobileqq/app/upgrade/UpgradeController:a	()Lcom/tencent/mobileqq/app/upgrade/UpgradeController;
    //   13130: aload 17
    //   13132: getfield 3035	com/tencent/mobileqq/app/upgrade/UpgradeDetailWrapper:jdField_b_of_type_ProtocolKQQConfigUpgradeInfo	Lprotocol/KQQConfig/UpgradeInfo;
    //   13135: aload 19
    //   13137: invokevirtual 3068	com/tencent/mobileqq/app/upgrade/UpgradeController:a	(Lprotocol/KQQConfig/UpgradeInfo;Lcom/tencent/mobileqq/app/upgrade/UpgradeController$OnHandleUpgradeFinishListener;)Z
    //   13140: pop
    //   13141: aload 17
    //   13143: monitorexit
    //   13144: goto -741 -> 12403
    //   13147: aload_2
    //   13148: invokestatic 2845	com/tencent/hotpatch/PatchFileManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)V
    //   13151: goto -748 -> 12403
    //   13154: aload_2
    //   13155: bipush 16
    //   13157: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   13160: checkcast 3253	com/tencent/mobileqq/app/ClubContentUpdateHandler
    //   13163: astore 17
    //   13165: aload 17
    //   13167: ifnull -764 -> 12403
    //   13170: aload 17
    //   13172: aload_2
    //   13173: invokevirtual 907	com/tencent/mobileqq/app/QQAppInterface:getApplication	()Lmqq/app/MobileQQ;
    //   13176: invokevirtual 3758	mqq/app/MobileQQ:getApplicationContext	()Landroid/content/Context;
    //   13179: invokevirtual 3761	com/tencent/mobileqq/app/ClubContentUpdateHandler:a	(Landroid/content/Context;)V
    //   13182: goto -779 -> 12403
    //   13185: aload_2
    //   13186: invokevirtual 289	com/tencent/mobileqq/app/QQAppInterface:getCurrentAccountUin	()Ljava/lang/String;
    //   13189: invokestatic 3763	com/tencent/mobileqq/utils/SharedPreUtils:c	(Ljava/lang/String;)Landroid/content/SharedPreferences;
    //   13192: astore 17
    //   13194: aload 17
    //   13196: invokeinterface 645 1 0
    //   13201: ldc_w 3765
    //   13204: aconst_null
    //   13205: invokeinterface 1091 3 0
    //   13210: invokeinterface 656 1 0
    //   13215: pop
    //   13216: aload 17
    //   13218: invokeinterface 645 1 0
    //   13223: ldc_w 3767
    //   13226: aconst_null
    //   13227: invokeinterface 1091 3 0
    //   13232: invokeinterface 656 1 0
    //   13237: pop
    //   13238: goto -835 -> 12403
    //   13241: new 3769	absy
    //   13244: dup
    //   13245: aload_0
    //   13246: aload 20
    //   13248: aload 17
    //   13250: invokespecial 3772	absy:<init>	(Lcom/tencent/mobileqq/config/splashlogo/ConfigServlet;Ljava/io/File;Ljava/lang/String;)V
    //   13253: iconst_5
    //   13254: aconst_null
    //   13255: iconst_1
    //   13256: invokestatic 3775	com/tencent/mobileqq/app/ThreadManager:post	(Ljava/lang/Runnable;ILcom/tencent/mobileqq/app/ThreadExcutor$IThreadListener;Z)V
    //   13259: goto -455 -> 12804
    //   13262: aload_2
    //   13263: sipush 167
    //   13266: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   13269: checkcast 1912	com/tencent/mobileqq/ar/ArResourceManager
    //   13272: astore 17
    //   13274: aload 17
    //   13276: ifnull +10 -> 13286
    //   13279: aload 17
    //   13281: iconst_1
    //   13282: iconst_0
    //   13283: invokevirtual 2861	com/tencent/mobileqq/ar/ArResourceManager:a	(ZZ)V
    //   13286: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13289: ifeq -886 -> 12403
    //   13292: ldc_w 1940
    //   13295: iconst_2
    //   13296: ldc_w 3777
    //   13299: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13302: goto -899 -> 12403
    //   13305: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13308: ifeq -905 -> 12403
    //   13311: ldc_w 3779
    //   13314: iconst_2
    //   13315: ldc_w 3781
    //   13318: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13321: goto -918 -> 12403
    //   13324: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13327: ifeq -924 -> 12403
    //   13330: ldc 90
    //   13332: iconst_2
    //   13333: ldc_w 3783
    //   13336: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13339: goto -936 -> 12403
    //   13342: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13345: ifeq -942 -> 12403
    //   13348: ldc 90
    //   13350: iconst_2
    //   13351: ldc_w 3785
    //   13354: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13357: goto -954 -> 12403
    //   13360: aload_2
    //   13361: sipush 166
    //   13364: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   13367: checkcast 1879	com/tencent/mobileqq/olympic/OlympicManager
    //   13370: astore 17
    //   13372: aload 17
    //   13374: ifnull +13 -> 13387
    //   13377: aload 17
    //   13379: invokevirtual 2869	com/tencent/mobileqq/olympic/OlympicManager:f	()V
    //   13382: aload 17
    //   13384: invokevirtual 2871	com/tencent/mobileqq/olympic/OlympicManager:g	()V
    //   13387: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13390: ifeq -987 -> 12403
    //   13393: ldc_w 1899
    //   13396: iconst_2
    //   13397: ldc_w 3787
    //   13400: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13403: goto -1000 -> 12403
    //   13406: aload_0
    //   13407: aconst_null
    //   13408: invokespecial 3359	com/tencent/mobileqq/config/splashlogo/ConfigServlet:w	(Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   13411: goto -1008 -> 12403
    //   13414: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13417: ifeq +12 -> 13429
    //   13420: ldc 90
    //   13422: iconst_2
    //   13423: ldc_w 2878
    //   13426: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13429: aload_2
    //   13430: sipush 178
    //   13433: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   13436: checkcast 266	com/tencent/mobileqq/precover/PrecoverManager
    //   13439: astore 17
    //   13441: aload 17
    //   13443: ifnull -1040 -> 12403
    //   13446: aload 17
    //   13448: invokevirtual 271	com/tencent/mobileqq/precover/PrecoverManager:a	()V
    //   13451: aload 17
    //   13453: iconst_1
    //   13454: invokevirtual 274	com/tencent/mobileqq/precover/PrecoverManager:a	(Z)V
    //   13457: goto -1054 -> 12403
    //   13460: aload_2
    //   13461: sipush 189
    //   13464: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   13467: checkcast 1193	com/tencent/mobileqq/armap/config/ARMapConfigManager
    //   13470: astore 17
    //   13472: aload 17
    //   13474: invokevirtual 2881	com/tencent/mobileqq/armap/config/ARMapConfigManager:a	()Lcom/tencent/mobileqq/armap/config/ARMapConfig;
    //   13477: astore 19
    //   13479: aload_3
    //   13480: ldc_w 1436
    //   13483: iconst_0
    //   13484: invokevirtual 2884	android/content/Intent:getIntExtra	(Ljava/lang/String;I)I
    //   13487: istore 7
    //   13489: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13492: ifeq +30 -> 13522
    //   13495: ldc 90
    //   13497: iconst_2
    //   13498: new 92	java/lang/StringBuilder
    //   13501: dup
    //   13502: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   13505: ldc_w 3789
    //   13508: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13511: iload 7
    //   13513: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   13516: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   13519: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13522: aload 17
    //   13524: aload 19
    //   13526: iload 7
    //   13528: invokevirtual 2891	com/tencent/mobileqq/armap/config/ARMapConfigManager:a	(Lcom/tencent/mobileqq/armap/config/ARMapConfig;I)V
    //   13531: aload_2
    //   13532: iconst_1
    //   13533: iconst_0
    //   13534: invokestatic 2896	com/tencent/mobileqq/armap/ArMapUtil:a	(Lcom/tencent/mobileqq/app/QQAppInterface;ZI)V
    //   13537: goto -1134 -> 12403
    //   13540: aload_2
    //   13541: invokestatic 1727	com/tencent/mobileqq/utils/BusinessCommonConfig:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)Lcom/tencent/mobileqq/utils/BusinessCommonConfig;
    //   13544: aload_2
    //   13545: aload 17
    //   13547: invokevirtual 490	java/lang/Integer:intValue	()I
    //   13550: invokevirtual 3790	com/tencent/mobileqq/utils/BusinessCommonConfig:a	(Lcom/tencent/mobileqq/app/QQAppInterface;I)V
    //   13553: goto -1150 -> 12403
    //   13556: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13559: ifeq +12 -> 13571
    //   13562: ldc 90
    //   13564: iconst_2
    //   13565: ldc_w 3792
    //   13568: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13571: aload_2
    //   13572: sipush 253
    //   13575: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   13578: checkcast 2313	com/tencent/av/redpacket/config/AVRedPacketConfigManager
    //   13581: astore 17
    //   13583: aload 17
    //   13585: aload 17
    //   13587: invokevirtual 2904	com/tencent/av/redpacket/config/AVRedPacketConfigManager:a	()Lcom/tencent/av/service/AVRedPacketConfig;
    //   13590: iconst_0
    //   13591: invokevirtual 2909	com/tencent/av/redpacket/config/AVRedPacketConfigManager:a	(Lcom/tencent/av/service/AVRedPacketConfig;Z)V
    //   13594: iconst_1
    //   13595: invokestatic 2912	com/tencent/av/redpacket/AVRedPacketDataCollector:a	(Z)V
    //   13598: goto -1195 -> 12403
    //   13601: aload_2
    //   13602: bipush 53
    //   13604: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   13607: checkcast 2048	com/tencent/mobileqq/app/BabyQHandler
    //   13610: astore 17
    //   13612: aload 17
    //   13614: ifnull -1211 -> 12403
    //   13617: aload 17
    //   13619: iconst_0
    //   13620: iconst_0
    //   13621: invokevirtual 2876	com/tencent/mobileqq/app/BabyQHandler:a	(ZZ)V
    //   13624: goto -1221 -> 12403
    //   13627: aload_2
    //   13628: invokestatic 2952	com/tencent/mobileqq/scribble/ScribbleResMgr:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)Lcom/tencent/mobileqq/scribble/ScribbleResMgr;
    //   13631: invokevirtual 3793	com/tencent/mobileqq/scribble/ScribbleResMgr:a	()V
    //   13634: goto -1231 -> 12403
    //   13637: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13640: ifeq -1237 -> 12403
    //   13643: ldc_w 2752
    //   13646: iconst_2
    //   13647: ldc_w 3795
    //   13650: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   13653: goto -1250 -> 12403
    //   13656: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13659: ifeq -1256 -> 12403
    //   13662: ldc_w 2958
    //   13665: iconst_2
    //   13666: ldc_w 3795
    //   13669: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   13672: goto -1269 -> 12403
    //   13675: aload_2
    //   13676: sipush 217
    //   13679: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   13682: checkcast 3797	com/tencent/mobileqq/activity/aio/AppGuideTipsManager
    //   13685: invokevirtual 3798	com/tencent/mobileqq/activity/aio/AppGuideTipsManager:a	()V
    //   13688: goto -1285 -> 12403
    //   13691: invokestatic 3799	com/tencent/mobileqq/shortvideo/ShortVideoResourceManager:b	()V
    //   13694: goto -1291 -> 12403
    //   13697: aload_2
    //   13698: sipush 231
    //   13701: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   13704: aconst_null
    //   13705: invokestatic 3623	com/tencent/mobileqq/activity/richmedia/subtitles/RDConfigServletProxy:a	(Lcom/tencent/mobileqq/app/QQAppInterface;ILjava/lang/String;Lcom/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config;)V
    //   13708: goto -1305 -> 12403
    //   13711: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   13714: ifeq -1311 -> 12403
    //   13717: ldc 90
    //   13719: iconst_2
    //   13720: ldc_w 3801
    //   13723: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13726: goto -1323 -> 12403
    //   13729: iconst_1
    //   13730: invokestatic 3802	com/tencent/mobileqq/data/nativemonitor/NativeMonitorConfigHelper:a	(Z)V
    //   13733: goto -1330 -> 12403
    //   13736: iload 5
    //   13738: ifeq +330 -> 14068
    //   13741: iload 6
    //   13743: iconst_3
    //   13744: if_icmpge +324 -> 14068
    //   13747: aload 4
    //   13749: ifnull +319 -> 14068
    //   13752: aload 4
    //   13754: arraylength
    //   13755: ifle +313 -> 14068
    //   13758: new 92	java/lang/StringBuilder
    //   13761: dup
    //   13762: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   13765: astore_3
    //   13766: aload_3
    //   13767: ldc_w 3804
    //   13770: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13773: pop
    //   13774: aload 4
    //   13776: arraylength
    //   13777: istore 8
    //   13779: iconst_0
    //   13780: istore 7
    //   13782: iload 7
    //   13784: iload 8
    //   13786: if_icmpge +28 -> 13814
    //   13789: aload_3
    //   13790: aload 4
    //   13792: iload 7
    //   13794: iaload
    //   13795: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   13798: ldc_w 3806
    //   13801: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   13804: pop
    //   13805: iload 7
    //   13807: iconst_1
    //   13808: iadd
    //   13809: istore 7
    //   13811: goto -29 -> 13782
    //   13814: ldc 90
    //   13816: iconst_1
    //   13817: aload_3
    //   13818: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   13821: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   13824: new 1425	mqq/app/NewIntent
    //   13827: dup
    //   13828: aload_2
    //   13829: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   13832: ldc 2
    //   13834: invokespecial 1428	mqq/app/NewIntent:<init>	(Landroid/content/Context;Ljava/lang/Class;)V
    //   13837: astore_3
    //   13838: aload_3
    //   13839: ldc_w 1430
    //   13842: aload 4
    //   13844: invokevirtual 1434	mqq/app/NewIntent:putExtra	(Ljava/lang/String;[I)Landroid/content/Intent;
    //   13847: pop
    //   13848: aload_3
    //   13849: ldc_w 1533
    //   13852: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   13855: invokevirtual 1536	mqq/app/NewIntent:putExtra	(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
    //   13858: pop
    //   13859: aload_3
    //   13860: ldc_w 2545
    //   13863: iconst_1
    //   13864: invokevirtual 2634	mqq/app/NewIntent:putExtra	(Ljava/lang/String;Z)Landroid/content/Intent;
    //   13867: pop
    //   13868: aload_1
    //   13869: getfield 3807	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:cookies	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   13872: invokevirtual 1385	com/tencent/mobileqq/pb/PBBytesField:has	()Z
    //   13875: ifeq +21 -> 13896
    //   13878: aload_3
    //   13879: ldc_w 2554
    //   13882: aload_1
    //   13883: getfield 3807	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$RespGetConfig:cookies	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   13886: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   13889: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   13892: invokevirtual 3810	mqq/app/NewIntent:putExtra	(Ljava/lang/String;[B)Landroid/content/Intent;
    //   13895: pop
    //   13896: aload_3
    //   13897: ldc_w 2631
    //   13900: iload 5
    //   13902: invokevirtual 2634	mqq/app/NewIntent:putExtra	(Ljava/lang/String;Z)Landroid/content/Intent;
    //   13905: pop
    //   13906: aload_3
    //   13907: ldc_w 3735
    //   13910: iload 6
    //   13912: iconst_1
    //   13913: iadd
    //   13914: invokevirtual 1439	mqq/app/NewIntent:putExtra	(Ljava/lang/String;I)Landroid/content/Intent;
    //   13917: pop
    //   13918: aload_3
    //   13919: ldc_w 1436
    //   13922: iconst_0
    //   13923: invokevirtual 1439	mqq/app/NewIntent:putExtra	(Ljava/lang/String;I)Landroid/content/Intent;
    //   13926: pop
    //   13927: aload_2
    //   13928: aload_3
    //   13929: invokevirtual 1443	com/tencent/mobileqq/app/QQAppInterface:startServlet	(Lmqq/app/NewIntent;)V
    //   13932: return
    //   13933: iconst_0
    //   13934: istore 5
    //   13936: iconst_0
    //   13937: istore 6
    //   13939: aload 16
    //   13941: astore 4
    //   13943: goto -1549 -> 12394
    //   13946: aconst_null
    //   13947: astore 16
    //   13949: goto -2420 -> 11529
    //   13952: aload 4
    //   13954: astore 16
    //   13956: goto -9617 -> 4339
    //   13959: aconst_null
    //   13960: astore 16
    //   13962: goto -9753 -> 4209
    //   13965: aload 4
    //   13967: astore 16
    //   13969: iload 10
    //   13971: istore 11
    //   13973: goto -11595 -> 2378
    //   13976: aconst_null
    //   13977: astore 16
    //   13979: goto -9770 -> 4209
    //   13982: astore 17
    //   13984: goto -9536 -> 4448
    //   13987: iconst_0
    //   13988: istore 10
    //   13990: goto -8979 -> 5011
    //   13993: iload 7
    //   13995: iconst_1
    //   13996: iadd
    //   13997: istore 7
    //   13999: goto -8876 -> 5123
    //   14002: goto -37 -> 13965
    //   14005: iload 7
    //   14007: iconst_1
    //   14008: iadd
    //   14009: istore 7
    //   14011: goto -8700 -> 5311
    //   14014: goto -49 -> 13965
    //   14017: iload 7
    //   14019: iconst_1
    //   14020: iadd
    //   14021: istore 7
    //   14023: goto -8275 -> 5748
    //   14026: goto -61 -> 13965
    //   14029: goto -64 -> 13965
    //   14032: iload 7
    //   14034: iconst_1
    //   14035: iadd
    //   14036: istore 7
    //   14038: goto -7372 -> 6666
    //   14041: goto -76 -> 13965
    //   14044: goto -79 -> 13965
    //   14047: goto -82 -> 13965
    //   14050: goto -85 -> 13965
    //   14053: goto -88 -> 13965
    //   14056: goto -91 -> 13965
    //   14059: goto -94 -> 13965
    //   14062: goto -97 -> 13965
    //   14065: goto -100 -> 13965
    //   14068: return
    //   14069: goto -104 -> 13965
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	14072	0	this	ConfigServlet
    //   0	14072	1	paramRespGetConfig	ConfigurationService.RespGetConfig
    //   0	14072	2	paramQQAppInterface	QQAppInterface
    //   0	14072	3	paramIntent	Intent
    //   0	14072	4	paramArrayOfInt	int[]
    //   0	14072	5	paramBoolean	boolean
    //   53	13885	6	i	int
    //   68	13969	7	j	int
    //   1298	12489	8	k	int
    //   4553	7749	9	m	int
    //   2339	11650	10	bool1	boolean
    //   2372	11600	11	bool2	boolean
    //   2276	9842	12	l1	long
    //   12091	25	14	l2	long
    //   595	3745	16	localObject1	Object
    //   4346	9	16	localUnsupportedEncodingException1	UnsupportedEncodingException
    //   4362	9	16	localOutOfMemoryError1	OutOfMemoryError
    //   4390	1	16	str1	String
    //   4395	1	16	localThrowable1	Throwable
    //   4398	523	16	localObject2	Object
    //   5045	6	16	localObject3	Object
    //   5149	3390	16	localObject4	Object
    //   8617	39	16	localException1	Exception
    //   8737	13	16	localIterator1	Iterator
    //   8828	39	16	localException2	Exception
    //   8948	13	16	localIterator2	Iterator
    //   9039	1098	16	localException3	Exception
    //   10184	1355	16	localObject5	Object
    //   11567	1	16	localUnsupportedEncodingException2	UnsupportedEncodingException
    //   11570	1	16	localObject6	Object
    //   11575	1	16	localOutOfMemoryError2	OutOfMemoryError
    //   11592	1	16	str2	String
    //   11597	1	16	localThrowable2	Throwable
    //   11600	17	16	str3	String
    //   11621	302	16	localException4	Exception
    //   12000	1978	16	localObject7	Object
    //   1279	3104	17	localObject8	Object
    //   4446	33	17	localException5	Exception
    //   4594	454	17	localUpgradeDetailWrapper	com.tencent.mobileqq.app.upgrade.UpgradeDetailWrapper
    //   5053	1	17	localException6	Exception
    //   5612	8006	17	localObject9	Object
    //   13982	1	17	localException7	Exception
    //   2297	10162	18	localArrayList	ArrayList
    //   2363	11162	19	localObject10	Object
    //   6876	6371	20	localObject11	Object
    //   6922	13	21	localIterator3	Iterator
    //   6944	55	22	str4	String
    // Exception table:
    //   from	to	target	type
    //   4195	4209	4346	java/io/UnsupportedEncodingException
    //   4195	4209	4362	java/lang/OutOfMemoryError
    //   4378	4392	4395	java/lang/Throwable
    //   4280	4324	4446	java/lang/Exception
    //   4324	4335	4446	java/lang/Exception
    //   4423	4439	4446	java/lang/Exception
    //   4944	4967	5045	finally
    //   4967	4970	5045	finally
    //   4976	4991	5045	finally
    //   4991	5008	5045	finally
    //   5011	5017	5045	finally
    //   5017	5039	5045	finally
    //   5047	5050	5045	finally
    //   4925	4944	5053	java/lang/Exception
    //   5050	5053	5053	java/lang/Exception
    //   8424	8494	8617	java/lang/Exception
    //   8494	8528	8617	java/lang/Exception
    //   8528	8600	8617	java/lang/Exception
    //   8600	8614	8617	java/lang/Exception
    //   8663	8702	8617	java/lang/Exception
    //   8705	8739	8828	java/lang/Exception
    //   8739	8811	8828	java/lang/Exception
    //   8811	8825	8828	java/lang/Exception
    //   8874	8913	8828	java/lang/Exception
    //   8916	8950	9039	java/lang/Exception
    //   8950	9022	9039	java/lang/Exception
    //   9022	9036	9039	java/lang/Exception
    //   9085	9124	9039	java/lang/Exception
    //   11515	11529	11567	java/io/UnsupportedEncodingException
    //   11515	11529	11575	java/lang/OutOfMemoryError
    //   11580	11594	11597	java/lang/Throwable
    //   11534	11564	11621	java/lang/Exception
    //   13077	13100	13106	finally
    //   13100	13103	13106	finally
    //   13107	13110	13106	finally
    //   13112	13127	13106	finally
    //   13127	13144	13106	finally
    //   2485	4124	13982	java/lang/Exception
    //   4124	4157	13982	java/lang/Exception
    //   4162	4190	13982	java/lang/Exception
    //   4195	4209	13982	java/lang/Exception
    //   4214	4269	13982	java/lang/Exception
    //   4269	4276	13982	java/lang/Exception
    //   4348	4359	13982	java/lang/Exception
    //   4364	4375	13982	java/lang/Exception
    //   4375	4378	13982	java/lang/Exception
    //   4378	4392	13982	java/lang/Exception
    //   4403	4416	13982	java/lang/Exception
    //   4507	4523	13982	java/lang/Exception
    //   4530	4593	13982	java/lang/Exception
    //   4603	4622	13982	java/lang/Exception
    //   4622	4637	13982	java/lang/Exception
    //   4637	4647	13982	java/lang/Exception
    //   4650	4665	13982	java/lang/Exception
    //   4665	4743	13982	java/lang/Exception
    //   4743	4772	13982	java/lang/Exception
    //   4772	4814	13982	java/lang/Exception
    //   4817	4864	13982	java/lang/Exception
    //   4864	4882	13982	java/lang/Exception
    //   4885	4896	13982	java/lang/Exception
    //   4903	4918	13982	java/lang/Exception
    //   5061	5077	13982	java/lang/Exception
    //   5080	5120	13982	java/lang/Exception
    //   5123	5201	13982	java/lang/Exception
    //   5201	5223	13982	java/lang/Exception
    //   5226	5265	13982	java/lang/Exception
    //   5268	5308	13982	java/lang/Exception
    //   5311	5389	13982	java/lang/Exception
    //   5389	5412	13982	java/lang/Exception
    //   5415	5454	13982	java/lang/Exception
    //   5457	5500	13982	java/lang/Exception
    //   5503	5577	13982	java/lang/Exception
    //   5577	5592	13982	java/lang/Exception
    //   5592	5664	13982	java/lang/Exception
    //   5664	5717	13982	java/lang/Exception
    //   5725	5745	13982	java/lang/Exception
    //   5767	5781	13982	java/lang/Exception
    //   5784	5823	13982	java/lang/Exception
    //   5823	5870	13982	java/lang/Exception
    //   5875	5881	13982	java/lang/Exception
    //   5881	5904	13982	java/lang/Exception
    //   5907	5947	13982	java/lang/Exception
    //   5947	6019	13982	java/lang/Exception
    //   6019	6033	13982	java/lang/Exception
    //   6036	6055	13982	java/lang/Exception
    //   6060	6070	13982	java/lang/Exception
    //   6070	6232	13982	java/lang/Exception
    //   6235	6274	13982	java/lang/Exception
    //   6274	6305	13982	java/lang/Exception
    //   6310	6320	13982	java/lang/Exception
    //   6320	6394	13982	java/lang/Exception
    //   6397	6480	13982	java/lang/Exception
    //   6480	6494	13982	java/lang/Exception
    //   6497	6536	13982	java/lang/Exception
    //   6536	6609	13982	java/lang/Exception
    //   6609	6632	13982	java/lang/Exception
    //   6635	6663	13982	java/lang/Exception
    //   6666	6744	13982	java/lang/Exception
    //   6744	6752	13982	java/lang/Exception
    //   6757	6765	13982	java/lang/Exception
    //   6768	6815	13982	java/lang/Exception
    //   6818	6857	13982	java/lang/Exception
    //   6860	6924	13982	java/lang/Exception
    //   6924	6996	13982	java/lang/Exception
    //   6996	7021	13982	java/lang/Exception
    //   7024	7063	13982	java/lang/Exception
    //   7063	7092	13982	java/lang/Exception
    //   7095	7142	13982	java/lang/Exception
    //   7142	7155	13982	java/lang/Exception
    //   7158	7173	13982	java/lang/Exception
    //   7176	7255	13982	java/lang/Exception
    //   7255	7305	13982	java/lang/Exception
    //   7308	7347	13982	java/lang/Exception
    //   7357	7365	13982	java/lang/Exception
    //   7369	7390	13982	java/lang/Exception
    //   7395	7468	13982	java/lang/Exception
    //   7468	7473	13982	java/lang/Exception
    //   7473	7495	13982	java/lang/Exception
    //   7498	7541	13982	java/lang/Exception
    //   7544	7559	13982	java/lang/Exception
    //   7562	7569	13982	java/lang/Exception
    //   7572	7579	13982	java/lang/Exception
    //   7582	7589	13982	java/lang/Exception
    //   7592	7599	13982	java/lang/Exception
    //   7602	7608	13982	java/lang/Exception
    //   7611	7617	13982	java/lang/Exception
    //   7620	7725	13982	java/lang/Exception
    //   7728	7767	13982	java/lang/Exception
    //   7770	7800	13982	java/lang/Exception
    //   7805	7831	13982	java/lang/Exception
    //   7831	7891	13982	java/lang/Exception
    //   7894	7933	13982	java/lang/Exception
    //   7936	8041	13982	java/lang/Exception
    //   8044	8083	13982	java/lang/Exception
    //   8086	8198	13982	java/lang/Exception
    //   8201	8257	13982	java/lang/Exception
    //   8260	8267	13982	java/lang/Exception
    //   8270	8277	13982	java/lang/Exception
    //   8280	8287	13982	java/lang/Exception
    //   8290	8297	13982	java/lang/Exception
    //   8300	8316	13982	java/lang/Exception
    //   8319	8326	13982	java/lang/Exception
    //   8329	8337	13982	java/lang/Exception
    //   8340	8347	13982	java/lang/Exception
    //   8350	8356	13982	java/lang/Exception
    //   8359	8365	13982	java/lang/Exception
    //   8368	8374	13982	java/lang/Exception
    //   8377	8394	13982	java/lang/Exception
    //   8397	8403	13982	java/lang/Exception
    //   8406	8412	13982	java/lang/Exception
    //   8415	8421	13982	java/lang/Exception
    //   8619	8655	13982	java/lang/Exception
    //   8655	8660	13982	java/lang/Exception
    //   8830	8866	13982	java/lang/Exception
    //   8866	8871	13982	java/lang/Exception
    //   9041	9077	13982	java/lang/Exception
    //   9077	9082	13982	java/lang/Exception
    //   9127	9149	13982	java/lang/Exception
    //   9154	9176	13982	java/lang/Exception
    //   9179	9218	13982	java/lang/Exception
    //   9221	9227	13982	java/lang/Exception
    //   9230	9236	13982	java/lang/Exception
    //   9239	9245	13982	java/lang/Exception
    //   9248	9254	13982	java/lang/Exception
    //   9257	9263	13982	java/lang/Exception
    //   9266	9272	13982	java/lang/Exception
    //   9275	9281	13982	java/lang/Exception
    //   9284	9290	13982	java/lang/Exception
    //   9293	9299	13982	java/lang/Exception
    //   9302	9308	13982	java/lang/Exception
    //   9311	9317	13982	java/lang/Exception
    //   9320	9338	13982	java/lang/Exception
    //   9341	9347	13982	java/lang/Exception
    //   9350	9357	13982	java/lang/Exception
    //   9360	9367	13982	java/lang/Exception
    //   9370	9376	13982	java/lang/Exception
    //   9379	9385	13982	java/lang/Exception
    //   9388	9394	13982	java/lang/Exception
    //   9397	9403	13982	java/lang/Exception
    //   9406	9412	13982	java/lang/Exception
    //   9415	9421	13982	java/lang/Exception
    //   9424	9430	13982	java/lang/Exception
    //   9433	9439	13982	java/lang/Exception
    //   9442	9448	13982	java/lang/Exception
    //   9451	9461	13982	java/lang/Exception
    //   9464	9470	13982	java/lang/Exception
    //   9473	9479	13982	java/lang/Exception
    //   9482	9488	13982	java/lang/Exception
    //   9491	9497	13982	java/lang/Exception
    //   9500	9506	13982	java/lang/Exception
    //   9509	9515	13982	java/lang/Exception
    //   9518	9524	13982	java/lang/Exception
    //   9527	9533	13982	java/lang/Exception
    //   9536	9626	13982	java/lang/Exception
    //   9626	9679	13982	java/lang/Exception
    //   9682	9732	13982	java/lang/Exception
    //   9735	9825	13982	java/lang/Exception
    //   9825	9882	13982	java/lang/Exception
    //   9885	9935	13982	java/lang/Exception
    //   9938	9945	13982	java/lang/Exception
    //   9948	9964	13982	java/lang/Exception
    //   9967	9974	13982	java/lang/Exception
    //   9977	9984	13982	java/lang/Exception
    //   9987	9994	13982	java/lang/Exception
    //   9997	10004	13982	java/lang/Exception
    //   10007	10015	13982	java/lang/Exception
    //   10018	10025	13982	java/lang/Exception
    //   10028	10035	13982	java/lang/Exception
    //   10038	10045	13982	java/lang/Exception
    //   10048	10072	13982	java/lang/Exception
    //   10077	10099	13982	java/lang/Exception
    //   10102	10125	13982	java/lang/Exception
    //   10130	10167	13982	java/lang/Exception
    //   10170	10186	13982	java/lang/Exception
    //   10191	10213	13982	java/lang/Exception
    //   10216	10236	13982	java/lang/Exception
    //   10241	10271	13982	java/lang/Exception
    //   10274	10291	13982	java/lang/Exception
    //   10296	10320	13982	java/lang/Exception
    //   10325	10348	13982	java/lang/Exception
    //   10351	10358	13982	java/lang/Exception
    //   10361	10377	13982	java/lang/Exception
    //   10380	10387	13982	java/lang/Exception
    //   10390	10397	13982	java/lang/Exception
    //   10400	10407	13982	java/lang/Exception
    //   10410	10417	13982	java/lang/Exception
    //   10420	10427	13982	java/lang/Exception
    //   10430	10437	13982	java/lang/Exception
    //   10440	10447	13982	java/lang/Exception
    //   10450	10457	13982	java/lang/Exception
    //   10460	10467	13982	java/lang/Exception
    //   10470	10477	13982	java/lang/Exception
    //   10480	10485	13982	java/lang/Exception
    //   10488	10495	13982	java/lang/Exception
    //   10498	10573	13982	java/lang/Exception
    //   10573	10588	13982	java/lang/Exception
    //   10591	10606	13982	java/lang/Exception
    //   10606	10631	13982	java/lang/Exception
    //   10634	10641	13982	java/lang/Exception
    //   10644	10651	13982	java/lang/Exception
    //   10654	10661	13982	java/lang/Exception
    //   10664	10671	13982	java/lang/Exception
    //   10674	10681	13982	java/lang/Exception
    //   10684	10694	13982	java/lang/Exception
    //   10697	10707	13982	java/lang/Exception
    //   10710	10717	13982	java/lang/Exception
    //   10720	10727	13982	java/lang/Exception
    //   10730	10737	13982	java/lang/Exception
    //   10740	10747	13982	java/lang/Exception
    //   10750	10757	13982	java/lang/Exception
    //   10760	10767	13982	java/lang/Exception
    //   10770	10786	13982	java/lang/Exception
    //   10789	10796	13982	java/lang/Exception
    //   10799	10806	13982	java/lang/Exception
    //   10809	10828	13982	java/lang/Exception
    //   10831	10838	13982	java/lang/Exception
    //   10841	10848	13982	java/lang/Exception
    //   10851	10858	13982	java/lang/Exception
    //   10861	10868	13982	java/lang/Exception
    //   10871	10878	13982	java/lang/Exception
    //   10881	10888	13982	java/lang/Exception
    //   10891	10898	13982	java/lang/Exception
    //   10901	10908	13982	java/lang/Exception
    //   10911	10918	13982	java/lang/Exception
    //   10921	10938	13982	java/lang/Exception
    //   10943	10961	13982	java/lang/Exception
    //   10964	10971	13982	java/lang/Exception
    //   10974	10981	13982	java/lang/Exception
    //   10984	10990	13982	java/lang/Exception
    //   10993	10999	13982	java/lang/Exception
    //   11002	11009	13982	java/lang/Exception
    //   11009	11016	13982	java/lang/Exception
    //   11019	11026	13982	java/lang/Exception
    //   11029	11036	13982	java/lang/Exception
    //   11039	11046	13982	java/lang/Exception
    //   11049	11056	13982	java/lang/Exception
    //   11059	11066	13982	java/lang/Exception
    //   11069	11086	13982	java/lang/Exception
    //   11091	11108	13982	java/lang/Exception
    //   11111	11128	13982	java/lang/Exception
    //   11133	11153	13982	java/lang/Exception
    //   11156	11163	13982	java/lang/Exception
    //   11166	11173	13982	java/lang/Exception
    //   11176	11183	13982	java/lang/Exception
    //   11186	11193	13982	java/lang/Exception
    //   11196	11202	13982	java/lang/Exception
    //   11205	11215	13982	java/lang/Exception
    //   11218	11235	13982	java/lang/Exception
    //   11240	11257	13982	java/lang/Exception
    //   11260	11272	13982	java/lang/Exception
    //   11277	11285	13982	java/lang/Exception
    //   11288	11295	13982	java/lang/Exception
    //   11298	11305	13982	java/lang/Exception
    //   11308	11320	13982	java/lang/Exception
    //   11323	11330	13982	java/lang/Exception
    //   11333	11340	13982	java/lang/Exception
    //   11343	11350	13982	java/lang/Exception
    //   11353	11360	13982	java/lang/Exception
    //   11363	11370	13982	java/lang/Exception
    //   11373	11380	13982	java/lang/Exception
    //   11383	11393	13982	java/lang/Exception
    //   11396	11403	13982	java/lang/Exception
    //   11411	11419	13982	java/lang/Exception
    //   11420	11438	13982	java/lang/Exception
    //   11445	11453	13982	java/lang/Exception
    //   11457	11510	13982	java/lang/Exception
    //   11515	11529	13982	java/lang/Exception
    //   11577	11580	13982	java/lang/Exception
    //   11580	11594	13982	java/lang/Exception
    //   11605	11618	13982	java/lang/Exception
    //   11623	11641	13982	java/lang/Exception
    //   11644	11651	13982	java/lang/Exception
    //   11654	11661	13982	java/lang/Exception
    //   11664	11671	13982	java/lang/Exception
    //   11674	11681	13982	java/lang/Exception
    //   11684	11691	13982	java/lang/Exception
    //   11694	11701	13982	java/lang/Exception
    //   11704	11711	13982	java/lang/Exception
    //   11714	11721	13982	java/lang/Exception
    //   11724	11731	13982	java/lang/Exception
    //   11734	11752	13982	java/lang/Exception
    //   11755	11773	13982	java/lang/Exception
    //   11776	11785	13982	java/lang/Exception
    //   11788	11803	13982	java/lang/Exception
    //   11806	11813	13982	java/lang/Exception
    //   11816	11831	13982	java/lang/Exception
    //   11834	11841	13982	java/lang/Exception
    //   11844	11851	13982	java/lang/Exception
    //   11854	11869	13982	java/lang/Exception
    //   11872	11891	13982	java/lang/Exception
    //   11894	11908	13982	java/lang/Exception
    //   11911	11918	13982	java/lang/Exception
    //   11921	11932	13982	java/lang/Exception
    //   11935	11942	13982	java/lang/Exception
    //   11945	11952	13982	java/lang/Exception
    //   11955	11962	13982	java/lang/Exception
    //   11965	11972	13982	java/lang/Exception
    //   11975	11982	13982	java/lang/Exception
    //   11985	12002	13982	java/lang/Exception
    //   12007	12036	13982	java/lang/Exception
    //   12039	12046	13982	java/lang/Exception
  }
  
  /* Error */
  private void a(String paramString)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   4: checkcast 213	com/tencent/mobileqq/app/QQAppInterface
    //   7: sipush 142
    //   10: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   13: checkcast 3814	com/tencent/mobileqq/qcall/PstnManager
    //   16: astore 22
    //   18: aload_1
    //   19: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   22: ifne +8 -> 30
    //   25: aload 22
    //   27: ifnonnull +13 -> 40
    //   30: ldc 90
    //   32: iconst_1
    //   33: ldc_w 3816
    //   36: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   39: return
    //   40: aconst_null
    //   41: astore 13
    //   43: aconst_null
    //   44: astore 16
    //   46: aconst_null
    //   47: astore 21
    //   49: aconst_null
    //   50: astore 17
    //   52: aconst_null
    //   53: astore 20
    //   55: iconst_m1
    //   56: istore 4
    //   58: iconst_m1
    //   59: istore_3
    //   60: iconst_0
    //   61: istore_2
    //   62: aconst_null
    //   63: astore 18
    //   65: aconst_null
    //   66: astore 19
    //   68: iload_2
    //   69: istore 7
    //   71: aload 20
    //   73: astore 15
    //   75: aload 21
    //   77: astore 14
    //   79: iload_3
    //   80: istore 6
    //   82: iload 4
    //   84: istore 5
    //   86: invokestatic 3822	android/util/Xml:newPullParser	()Lorg/xmlpull/v1/XmlPullParser;
    //   89: astore 23
    //   91: iload_2
    //   92: istore 7
    //   94: aload 20
    //   96: astore 15
    //   98: aload 21
    //   100: astore 14
    //   102: iload_3
    //   103: istore 6
    //   105: iload 4
    //   107: istore 5
    //   109: aload 23
    //   111: new 431	java/io/ByteArrayInputStream
    //   114: dup
    //   115: aload_1
    //   116: ldc_w 433
    //   119: invokevirtual 437	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   122: invokespecial 440	java/io/ByteArrayInputStream:<init>	([B)V
    //   125: ldc_w 433
    //   128: invokeinterface 3828 3 0
    //   133: iload_2
    //   134: istore 7
    //   136: aload 20
    //   138: astore 15
    //   140: aload 21
    //   142: astore 14
    //   144: iload_3
    //   145: istore 6
    //   147: iload 4
    //   149: istore 5
    //   151: aload 23
    //   153: invokeinterface 3831 1 0
    //   158: istore 11
    //   160: iconst_0
    //   161: istore_2
    //   162: aconst_null
    //   163: astore_1
    //   164: aload 17
    //   166: astore 13
    //   168: iload_2
    //   169: istore 10
    //   171: aload_1
    //   172: astore 17
    //   174: aload 13
    //   176: astore 16
    //   178: iload_3
    //   179: istore 7
    //   181: iload 4
    //   183: istore 9
    //   185: iload 11
    //   187: iconst_1
    //   188: if_icmpeq +763 -> 951
    //   191: iload_2
    //   192: istore 8
    //   194: aload_1
    //   195: astore 15
    //   197: aload 13
    //   199: astore 14
    //   201: iload_3
    //   202: istore 5
    //   204: iload 4
    //   206: istore 6
    //   208: aload 23
    //   210: invokeinterface 3834 1 0
    //   215: astore 16
    //   217: iload 11
    //   219: tableswitch	default:+21 -> 240, 2:+66->285, 3:+4838->5057
    //   241: ldc 58
    //   243: sipush 6419
    //   246: astore 16
    //   248: iload_2
    //   249: istore 7
    //   251: aload_1
    //   252: astore 15
    //   254: aload 13
    //   256: astore 14
    //   258: iload_3
    //   259: istore 6
    //   261: iload 4
    //   263: istore 5
    //   265: aload 23
    //   267: invokeinterface 3836 1 0
    //   272: istore 11
    //   274: aload 16
    //   276: astore 19
    //   278: aload 17
    //   280: astore 18
    //   282: goto -114 -> 168
    //   285: iload_2
    //   286: istore 8
    //   288: aload_1
    //   289: astore 15
    //   291: aload 13
    //   293: astore 14
    //   295: iload_3
    //   296: istore 5
    //   298: iload 4
    //   300: istore 6
    //   302: aload 16
    //   304: ldc_w 3838
    //   307: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   310: ifeq +209 -> 519
    //   313: iload_2
    //   314: istore 8
    //   316: aload_1
    //   317: astore 15
    //   319: aload 13
    //   321: astore 14
    //   323: iload_3
    //   324: istore 5
    //   326: iload 4
    //   328: istore 6
    //   330: aload 23
    //   332: iconst_0
    //   333: invokeinterface 3841 2 0
    //   338: astore 16
    //   340: iload_2
    //   341: istore 8
    //   343: aload_1
    //   344: astore 15
    //   346: aload 13
    //   348: astore 14
    //   350: iload_3
    //   351: istore 5
    //   353: iload 4
    //   355: istore 6
    //   357: aload 16
    //   359: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   362: ifne +4822 -> 5184
    //   365: iload_2
    //   366: istore 8
    //   368: aload_1
    //   369: astore 15
    //   371: aload 13
    //   373: astore 14
    //   375: iload_3
    //   376: istore 5
    //   378: iload 4
    //   380: istore 6
    //   382: aload 16
    //   384: ldc_w 939
    //   387: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   390: ifeq +36 -> 426
    //   393: iload_2
    //   394: istore 8
    //   396: aload_1
    //   397: astore 15
    //   399: aload 13
    //   401: astore 14
    //   403: iload_3
    //   404: istore 5
    //   406: iload 4
    //   408: istore 6
    //   410: new 3843	com/tencent/mobileqq/qcall/PstnSwitchConfig
    //   413: dup
    //   414: invokespecial 3844	com/tencent/mobileqq/qcall/PstnSwitchConfig:<init>	()V
    //   417: astore 16
    //   419: aload 16
    //   421: astore 13
    //   423: goto +4761 -> 5184
    //   426: iload_2
    //   427: istore 8
    //   429: aload_1
    //   430: astore 15
    //   432: aload 13
    //   434: astore 14
    //   436: iload_3
    //   437: istore 5
    //   439: iload 4
    //   441: istore 6
    //   443: aload 16
    //   445: ldc_w 3846
    //   448: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   451: ifeq +35 -> 486
    //   454: iload_2
    //   455: istore 8
    //   457: aload_1
    //   458: astore 15
    //   460: aload 13
    //   462: astore 14
    //   464: iload_3
    //   465: istore 5
    //   467: iload 4
    //   469: istore 6
    //   471: new 2924	java/util/HashMap
    //   474: dup
    //   475: invokespecial 2925	java/util/HashMap:<init>	()V
    //   478: astore 16
    //   480: aload 16
    //   482: astore_1
    //   483: goto +4701 -> 5184
    //   486: iload_2
    //   487: istore 8
    //   489: aload_1
    //   490: astore 15
    //   492: aload 13
    //   494: astore 14
    //   496: iload_3
    //   497: istore 5
    //   499: iload 4
    //   501: istore 6
    //   503: aload 16
    //   505: ldc_w 3848
    //   508: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   511: ifeq +4673 -> 5184
    //   514: iconst_1
    //   515: istore_2
    //   516: goto +4668 -> 5184
    //   519: iload_2
    //   520: istore 8
    //   522: aload_1
    //   523: astore 15
    //   525: aload 13
    //   527: astore 14
    //   529: iload_3
    //   530: istore 5
    //   532: iload 4
    //   534: istore 6
    //   536: aload 16
    //   538: ldc_w 3850
    //   541: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   544: ifeq +37 -> 581
    //   547: iload_2
    //   548: istore 8
    //   550: aload_1
    //   551: astore 15
    //   553: aload 13
    //   555: astore 14
    //   557: iload_3
    //   558: istore 5
    //   560: iload 4
    //   562: istore 6
    //   564: aload 23
    //   566: iconst_0
    //   567: invokeinterface 3841 2 0
    //   572: astore 17
    //   574: aload 19
    //   576: astore 16
    //   578: goto -330 -> 248
    //   581: iload_2
    //   582: istore 8
    //   584: aload_1
    //   585: astore 15
    //   587: aload 13
    //   589: astore 14
    //   591: iload_3
    //   592: istore 5
    //   594: iload 4
    //   596: istore 6
    //   598: aload 16
    //   600: ldc_w 3851
    //   603: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   606: ifeq +1407 -> 2013
    //   609: iload_2
    //   610: istore 8
    //   612: aload_1
    //   613: astore 15
    //   615: aload 13
    //   617: astore 14
    //   619: iload_3
    //   620: istore 5
    //   622: iload 4
    //   624: istore 6
    //   626: aload 18
    //   628: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   631: ifne +1136 -> 1767
    //   634: aload 13
    //   636: ifnull +1131 -> 1767
    //   639: iload_2
    //   640: istore 8
    //   642: aload_1
    //   643: astore 15
    //   645: aload 13
    //   647: astore 14
    //   649: iload_3
    //   650: istore 5
    //   652: iload 4
    //   654: istore 6
    //   656: aload 23
    //   658: iconst_0
    //   659: invokeinterface 3841 2 0
    //   664: astore 16
    //   666: iload_2
    //   667: istore 8
    //   669: aload_1
    //   670: astore 15
    //   672: aload 13
    //   674: astore 14
    //   676: iload_3
    //   677: istore 5
    //   679: iload 4
    //   681: istore 6
    //   683: aload 16
    //   685: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   688: ifne +4507 -> 5195
    //   691: iload_2
    //   692: istore 8
    //   694: aload_1
    //   695: astore 15
    //   697: aload 13
    //   699: astore 14
    //   701: iload_3
    //   702: istore 5
    //   704: iload 4
    //   706: istore 6
    //   708: aload 18
    //   710: ldc_w 3853
    //   713: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   716: ifeq +708 -> 1424
    //   719: iload_2
    //   720: istore 8
    //   722: aload_1
    //   723: astore 15
    //   725: aload 13
    //   727: astore 14
    //   729: iload_3
    //   730: istore 5
    //   732: iload 4
    //   734: istore 6
    //   736: aload 16
    //   738: ldc_w 3855
    //   741: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   744: ifeq +38 -> 782
    //   747: iload_2
    //   748: istore 8
    //   750: aload_1
    //   751: astore 15
    //   753: aload 13
    //   755: astore 14
    //   757: iload_3
    //   758: istore 5
    //   760: iload 4
    //   762: istore 6
    //   764: aload 13
    //   766: aload 23
    //   768: invokeinterface 3858 1 0
    //   773: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   776: putfield 3859	com/tencent/mobileqq/qcall/PstnSwitchConfig:jdField_a_of_type_Int	I
    //   779: goto +4416 -> 5195
    //   782: iload_2
    //   783: istore 8
    //   785: aload_1
    //   786: astore 15
    //   788: aload 13
    //   790: astore 14
    //   792: iload_3
    //   793: istore 5
    //   795: iload 4
    //   797: istore 6
    //   799: aload 16
    //   801: ldc_w 3861
    //   804: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   807: ifeq +296 -> 1103
    //   810: iload_2
    //   811: istore 8
    //   813: aload_1
    //   814: astore 15
    //   816: aload 13
    //   818: astore 14
    //   820: iload_3
    //   821: istore 5
    //   823: iload 4
    //   825: istore 6
    //   827: aload 13
    //   829: aload 23
    //   831: invokeinterface 3858 1 0
    //   836: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   839: putfield 3862	com/tencent/mobileqq/qcall/PstnSwitchConfig:jdField_b_of_type_Int	I
    //   842: goto +4353 -> 5195
    //   845: astore 18
    //   847: iload_2
    //   848: istore 10
    //   850: aload_1
    //   851: astore 17
    //   853: aload 13
    //   855: astore 16
    //   857: iload_3
    //   858: istore 7
    //   860: iload 4
    //   862: istore 9
    //   864: iload_2
    //   865: istore 8
    //   867: aload_1
    //   868: astore 15
    //   870: aload 13
    //   872: astore 14
    //   874: iload_3
    //   875: istore 5
    //   877: iload 4
    //   879: istore 6
    //   881: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   884: ifeq +67 -> 951
    //   887: iload_2
    //   888: istore 8
    //   890: aload_1
    //   891: astore 15
    //   893: aload 13
    //   895: astore 14
    //   897: iload_3
    //   898: istore 5
    //   900: iload 4
    //   902: istore 6
    //   904: ldc 90
    //   906: iconst_2
    //   907: new 92	java/lang/StringBuilder
    //   910: dup
    //   911: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   914: ldc_w 3864
    //   917: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   920: aload 18
    //   922: invokevirtual 3865	java/lang/NumberFormatException:toString	()Ljava/lang/String;
    //   925: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   928: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   931: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   934: iload 4
    //   936: istore 9
    //   938: iload_3
    //   939: istore 7
    //   941: aload 13
    //   943: astore 16
    //   945: aload_1
    //   946: astore 17
    //   948: iload_2
    //   949: istore 10
    //   951: aload 17
    //   953: astore 13
    //   955: iload 10
    //   957: istore 4
    //   959: iload 7
    //   961: istore_3
    //   962: aload 22
    //   964: ifnull -925 -> 39
    //   967: aload 16
    //   969: ifnull +27 -> 996
    //   972: aload 22
    //   974: aload 16
    //   976: invokevirtual 3868	com/tencent/mobileqq/qcall/PstnManager:a	(Lcom/tencent/mobileqq/qcall/PstnSwitchConfig;)V
    //   979: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   982: ifeq +14 -> 996
    //   985: ldc 90
    //   987: iconst_2
    //   988: aload 16
    //   990: invokevirtual 3869	com/tencent/mobileqq/qcall/PstnSwitchConfig:toString	()Ljava/lang/String;
    //   993: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   996: aload 13
    //   998: ifnull +10 -> 1008
    //   1001: aload 22
    //   1003: aload 13
    //   1005: invokevirtual 3872	com/tencent/mobileqq/qcall/PstnManager:a	(Ljava/util/HashMap;)V
    //   1008: iload_3
    //   1009: iconst_m1
    //   1010: if_icmpeq +41 -> 1051
    //   1013: aload 22
    //   1015: iload_3
    //   1016: invokevirtual 3873	com/tencent/mobileqq/qcall/PstnManager:b	(I)V
    //   1019: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1022: ifeq +29 -> 1051
    //   1025: ldc 90
    //   1027: iconst_2
    //   1028: new 92	java/lang/StringBuilder
    //   1031: dup
    //   1032: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1035: ldc_w 3875
    //   1038: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1041: iload_3
    //   1042: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1045: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1048: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   1051: iload 4
    //   1053: ifeq -1014 -> 39
    //   1056: iload 9
    //   1058: iconst_m1
    //   1059: if_icmpeq -1020 -> 39
    //   1062: aload 22
    //   1064: iload 9
    //   1066: invokevirtual 3876	com/tencent/mobileqq/qcall/PstnManager:a	(I)V
    //   1069: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1072: ifeq -1033 -> 39
    //   1075: ldc 90
    //   1077: iconst_2
    //   1078: new 92	java/lang/StringBuilder
    //   1081: dup
    //   1082: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1085: ldc_w 3878
    //   1088: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1091: iload 9
    //   1093: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   1096: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1099: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   1102: return
    //   1103: iload_2
    //   1104: istore 8
    //   1106: aload_1
    //   1107: astore 15
    //   1109: aload 13
    //   1111: astore 14
    //   1113: iload_3
    //   1114: istore 5
    //   1116: iload 4
    //   1118: istore 6
    //   1120: aload 16
    //   1122: ldc_w 3880
    //   1125: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1128: ifeq +233 -> 1361
    //   1131: iload_2
    //   1132: istore 8
    //   1134: aload_1
    //   1135: astore 15
    //   1137: aload 13
    //   1139: astore 14
    //   1141: iload_3
    //   1142: istore 5
    //   1144: iload 4
    //   1146: istore 6
    //   1148: aload 13
    //   1150: aload 23
    //   1152: invokeinterface 3858 1 0
    //   1157: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   1160: putfield 3882	com/tencent/mobileqq/qcall/PstnSwitchConfig:c	I
    //   1163: goto +4032 -> 5195
    //   1166: astore 18
    //   1168: iload_2
    //   1169: istore 10
    //   1171: aload_1
    //   1172: astore 17
    //   1174: aload 13
    //   1176: astore 16
    //   1178: iload_3
    //   1179: istore 7
    //   1181: iload 4
    //   1183: istore 9
    //   1185: iload_2
    //   1186: istore 8
    //   1188: aload_1
    //   1189: astore 15
    //   1191: aload 13
    //   1193: astore 14
    //   1195: iload_3
    //   1196: istore 5
    //   1198: iload 4
    //   1200: istore 6
    //   1202: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1205: ifeq -254 -> 951
    //   1208: iload_2
    //   1209: istore 8
    //   1211: aload_1
    //   1212: astore 15
    //   1214: aload 13
    //   1216: astore 14
    //   1218: iload_3
    //   1219: istore 5
    //   1221: iload 4
    //   1223: istore 6
    //   1225: ldc 90
    //   1227: iconst_2
    //   1228: new 92	java/lang/StringBuilder
    //   1231: dup
    //   1232: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1235: ldc_w 3884
    //   1238: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1241: aload 18
    //   1243: invokevirtual 3885	java/io/IOException:toString	()Ljava/lang/String;
    //   1246: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1249: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1252: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   1255: iload_2
    //   1256: istore 10
    //   1258: aload_1
    //   1259: astore 17
    //   1261: aload 13
    //   1263: astore 16
    //   1265: iload_3
    //   1266: istore 7
    //   1268: iload 4
    //   1270: istore 9
    //   1272: goto -321 -> 951
    //   1275: astore_1
    //   1276: iload 8
    //   1278: istore 7
    //   1280: iload 6
    //   1282: istore_2
    //   1283: iload 5
    //   1285: istore 6
    //   1287: iload 7
    //   1289: istore 4
    //   1291: aload 15
    //   1293: astore 13
    //   1295: aload 14
    //   1297: astore 16
    //   1299: iload 6
    //   1301: istore_3
    //   1302: iload_2
    //   1303: istore 9
    //   1305: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   1308: ifeq -346 -> 962
    //   1311: ldc 90
    //   1313: iconst_2
    //   1314: new 92	java/lang/StringBuilder
    //   1317: dup
    //   1318: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   1321: ldc_w 3887
    //   1324: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1327: aload_1
    //   1328: invokevirtual 3888	org/xmlpull/v1/XmlPullParserException:toString	()Ljava/lang/String;
    //   1331: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1334: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1337: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   1340: iload 7
    //   1342: istore 4
    //   1344: aload 15
    //   1346: astore 13
    //   1348: aload 14
    //   1350: astore 16
    //   1352: iload 6
    //   1354: istore_3
    //   1355: iload_2
    //   1356: istore 9
    //   1358: goto -396 -> 962
    //   1361: iload_2
    //   1362: istore 8
    //   1364: aload_1
    //   1365: astore 15
    //   1367: aload 13
    //   1369: astore 14
    //   1371: iload_3
    //   1372: istore 5
    //   1374: iload 4
    //   1376: istore 6
    //   1378: aload 16
    //   1380: ldc_w 3890
    //   1383: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1386: ifeq +3809 -> 5195
    //   1389: iload_2
    //   1390: istore 8
    //   1392: aload_1
    //   1393: astore 15
    //   1395: aload 13
    //   1397: astore 14
    //   1399: iload_3
    //   1400: istore 5
    //   1402: iload 4
    //   1404: istore 6
    //   1406: aload 22
    //   1408: aload 23
    //   1410: invokeinterface 3858 1 0
    //   1415: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   1418: invokevirtual 3892	com/tencent/mobileqq/qcall/PstnManager:c	(I)V
    //   1421: goto +3774 -> 5195
    //   1424: iload_2
    //   1425: istore 8
    //   1427: aload_1
    //   1428: astore 15
    //   1430: aload 13
    //   1432: astore 14
    //   1434: iload_3
    //   1435: istore 5
    //   1437: iload 4
    //   1439: istore 6
    //   1441: aload 18
    //   1443: ldc_w 3894
    //   1446: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1449: ifeq +3746 -> 5195
    //   1452: iload_2
    //   1453: istore 8
    //   1455: aload_1
    //   1456: astore 15
    //   1458: aload 13
    //   1460: astore 14
    //   1462: iload_3
    //   1463: istore 5
    //   1465: iload 4
    //   1467: istore 6
    //   1469: aload 16
    //   1471: ldc_w 3855
    //   1474: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1477: ifeq +38 -> 1515
    //   1480: iload_2
    //   1481: istore 8
    //   1483: aload_1
    //   1484: astore 15
    //   1486: aload 13
    //   1488: astore 14
    //   1490: iload_3
    //   1491: istore 5
    //   1493: iload 4
    //   1495: istore 6
    //   1497: aload 13
    //   1499: aload 23
    //   1501: invokeinterface 3858 1 0
    //   1506: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   1509: putfield 3896	com/tencent/mobileqq/qcall/PstnSwitchConfig:d	I
    //   1512: goto +3683 -> 5195
    //   1515: iload_2
    //   1516: istore 8
    //   1518: aload_1
    //   1519: astore 15
    //   1521: aload 13
    //   1523: astore 14
    //   1525: iload_3
    //   1526: istore 5
    //   1528: iload 4
    //   1530: istore 6
    //   1532: aload 16
    //   1534: ldc_w 3898
    //   1537: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1540: ifeq +38 -> 1578
    //   1543: iload_2
    //   1544: istore 8
    //   1546: aload_1
    //   1547: astore 15
    //   1549: aload 13
    //   1551: astore 14
    //   1553: iload_3
    //   1554: istore 5
    //   1556: iload 4
    //   1558: istore 6
    //   1560: aload 13
    //   1562: aload 23
    //   1564: invokeinterface 3858 1 0
    //   1569: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   1572: putfield 3900	com/tencent/mobileqq/qcall/PstnSwitchConfig:e	I
    //   1575: goto +3620 -> 5195
    //   1578: iload_2
    //   1579: istore 8
    //   1581: aload_1
    //   1582: astore 15
    //   1584: aload 13
    //   1586: astore 14
    //   1588: iload_3
    //   1589: istore 5
    //   1591: iload 4
    //   1593: istore 6
    //   1595: aload 16
    //   1597: ldc_w 3902
    //   1600: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1603: ifeq +38 -> 1641
    //   1606: iload_2
    //   1607: istore 8
    //   1609: aload_1
    //   1610: astore 15
    //   1612: aload 13
    //   1614: astore 14
    //   1616: iload_3
    //   1617: istore 5
    //   1619: iload 4
    //   1621: istore 6
    //   1623: aload 13
    //   1625: aload 23
    //   1627: invokeinterface 3858 1 0
    //   1632: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   1635: putfield 3904	com/tencent/mobileqq/qcall/PstnSwitchConfig:f	I
    //   1638: goto +3557 -> 5195
    //   1641: iload_2
    //   1642: istore 8
    //   1644: aload_1
    //   1645: astore 15
    //   1647: aload 13
    //   1649: astore 14
    //   1651: iload_3
    //   1652: istore 5
    //   1654: iload 4
    //   1656: istore 6
    //   1658: aload 16
    //   1660: ldc_w 3906
    //   1663: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1666: ifeq +38 -> 1704
    //   1669: iload_2
    //   1670: istore 8
    //   1672: aload_1
    //   1673: astore 15
    //   1675: aload 13
    //   1677: astore 14
    //   1679: iload_3
    //   1680: istore 5
    //   1682: iload 4
    //   1684: istore 6
    //   1686: aload 13
    //   1688: aload 23
    //   1690: invokeinterface 3858 1 0
    //   1695: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   1698: putfield 3908	com/tencent/mobileqq/qcall/PstnSwitchConfig:g	I
    //   1701: goto +3494 -> 5195
    //   1704: iload_2
    //   1705: istore 8
    //   1707: aload_1
    //   1708: astore 15
    //   1710: aload 13
    //   1712: astore 14
    //   1714: iload_3
    //   1715: istore 5
    //   1717: iload 4
    //   1719: istore 6
    //   1721: aload 16
    //   1723: ldc_w 3890
    //   1726: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1729: ifeq +3466 -> 5195
    //   1732: iload_2
    //   1733: istore 8
    //   1735: aload_1
    //   1736: astore 15
    //   1738: aload 13
    //   1740: astore 14
    //   1742: iload_3
    //   1743: istore 5
    //   1745: iload 4
    //   1747: istore 6
    //   1749: aload 22
    //   1751: aload 23
    //   1753: invokeinterface 3858 1 0
    //   1758: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   1761: invokevirtual 3910	com/tencent/mobileqq/qcall/PstnManager:d	(I)V
    //   1764: goto +3431 -> 5195
    //   1767: aload_1
    //   1768: ifnull +37 -> 1805
    //   1771: iload_2
    //   1772: istore 8
    //   1774: aload_1
    //   1775: astore 15
    //   1777: aload 13
    //   1779: astore 14
    //   1781: iload_3
    //   1782: istore 5
    //   1784: iload 4
    //   1786: istore 6
    //   1788: aload 23
    //   1790: iconst_0
    //   1791: invokeinterface 3841 2 0
    //   1796: astore 16
    //   1798: aload 18
    //   1800: astore 17
    //   1802: goto -1554 -> 248
    //   1805: iload_2
    //   1806: ifeq -1566 -> 240
    //   1809: iload_2
    //   1810: istore 8
    //   1812: aload_1
    //   1813: astore 15
    //   1815: aload 13
    //   1817: astore 14
    //   1819: iload_3
    //   1820: istore 5
    //   1822: iload 4
    //   1824: istore 6
    //   1826: aload 23
    //   1828: iconst_0
    //   1829: invokeinterface 3841 2 0
    //   1834: astore 16
    //   1836: iload_2
    //   1837: istore 8
    //   1839: aload_1
    //   1840: astore 15
    //   1842: aload 13
    //   1844: astore 14
    //   1846: iload_3
    //   1847: istore 5
    //   1849: iload 4
    //   1851: istore 6
    //   1853: aload 16
    //   1855: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   1858: ifne +67 -> 1925
    //   1861: iload_2
    //   1862: istore 8
    //   1864: aload_1
    //   1865: astore 15
    //   1867: aload 13
    //   1869: astore 14
    //   1871: iload_3
    //   1872: istore 5
    //   1874: iload 4
    //   1876: istore 6
    //   1878: aload 16
    //   1880: ldc_w 3912
    //   1883: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1886: ifeq +39 -> 1925
    //   1889: iload_2
    //   1890: istore 8
    //   1892: aload_1
    //   1893: astore 15
    //   1895: aload 13
    //   1897: astore 14
    //   1899: iload_3
    //   1900: istore 5
    //   1902: iload 4
    //   1904: istore 6
    //   1906: aload 23
    //   1908: invokeinterface 3858 1 0
    //   1913: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   1916: istore 7
    //   1918: iload 7
    //   1920: istore 4
    //   1922: goto +3284 -> 5206
    //   1925: iload_2
    //   1926: istore 8
    //   1928: aload_1
    //   1929: astore 15
    //   1931: aload 13
    //   1933: astore 14
    //   1935: iload_3
    //   1936: istore 5
    //   1938: iload 4
    //   1940: istore 6
    //   1942: aload 16
    //   1944: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   1947: ifne +3234 -> 5181
    //   1950: iload_2
    //   1951: istore 8
    //   1953: aload_1
    //   1954: astore 15
    //   1956: aload 13
    //   1958: astore 14
    //   1960: iload_3
    //   1961: istore 5
    //   1963: iload 4
    //   1965: istore 6
    //   1967: aload 16
    //   1969: ldc_w 3914
    //   1972: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1975: ifeq +3206 -> 5181
    //   1978: iload_2
    //   1979: istore 8
    //   1981: aload_1
    //   1982: astore 15
    //   1984: aload 13
    //   1986: astore 14
    //   1988: iload_3
    //   1989: istore 5
    //   1991: iload 4
    //   1993: istore 6
    //   1995: aload 23
    //   1997: invokeinterface 3858 1 0
    //   2002: invokestatic 604	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   2005: istore 7
    //   2007: iload 7
    //   2009: istore_3
    //   2010: goto +3196 -> 5206
    //   2013: iload_2
    //   2014: istore 8
    //   2016: aload_1
    //   2017: astore 15
    //   2019: aload 13
    //   2021: astore 14
    //   2023: iload_3
    //   2024: istore 5
    //   2026: iload 4
    //   2028: istore 6
    //   2030: aload 16
    //   2032: ldc_w 1098
    //   2035: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2038: ifeq +1045 -> 3083
    //   2041: iload_2
    //   2042: istore 8
    //   2044: aload_1
    //   2045: astore 15
    //   2047: aload 13
    //   2049: astore 14
    //   2051: iload_3
    //   2052: istore 5
    //   2054: iload 4
    //   2056: istore 6
    //   2058: aload 19
    //   2060: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2063: ifne -1823 -> 240
    //   2066: aload_1
    //   2067: ifnull -1827 -> 240
    //   2070: iload_2
    //   2071: istore 8
    //   2073: aload_1
    //   2074: astore 15
    //   2076: aload 13
    //   2078: astore 14
    //   2080: iload_3
    //   2081: istore 5
    //   2083: iload 4
    //   2085: istore 6
    //   2087: aload 23
    //   2089: iconst_0
    //   2090: invokeinterface 3841 2 0
    //   2095: astore 16
    //   2097: iload_2
    //   2098: istore 8
    //   2100: aload_1
    //   2101: astore 15
    //   2103: aload 13
    //   2105: astore 14
    //   2107: iload_3
    //   2108: istore 5
    //   2110: iload 4
    //   2112: istore 6
    //   2114: aload 23
    //   2116: invokeinterface 3858 1 0
    //   2121: astore 17
    //   2123: iload_2
    //   2124: istore 8
    //   2126: aload_1
    //   2127: astore 15
    //   2129: aload 13
    //   2131: astore 14
    //   2133: iload_3
    //   2134: istore 5
    //   2136: iload 4
    //   2138: istore 6
    //   2140: aload 17
    //   2142: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2145: ifeq +40 -> 2185
    //   2148: iload_2
    //   2149: istore 8
    //   2151: aload_1
    //   2152: astore 15
    //   2154: aload 13
    //   2156: astore 14
    //   2158: iload_3
    //   2159: istore 5
    //   2161: iload 4
    //   2163: istore 6
    //   2165: ldc 90
    //   2167: iconst_1
    //   2168: ldc_w 3916
    //   2171: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   2174: aload 19
    //   2176: astore 16
    //   2178: aload 18
    //   2180: astore 17
    //   2182: goto -1934 -> 248
    //   2185: iload_2
    //   2186: istore 8
    //   2188: aload_1
    //   2189: astore 15
    //   2191: aload 13
    //   2193: astore 14
    //   2195: iload_3
    //   2196: istore 5
    //   2198: iload 4
    //   2200: istore 6
    //   2202: aload 19
    //   2204: ldc_w 3918
    //   2207: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2210: ifeq +366 -> 2576
    //   2213: iload_2
    //   2214: istore 8
    //   2216: aload_1
    //   2217: astore 15
    //   2219: aload 13
    //   2221: astore 14
    //   2223: iload_3
    //   2224: istore 5
    //   2226: iload 4
    //   2228: istore 6
    //   2230: aload 16
    //   2232: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2235: ifne +2982 -> 5217
    //   2238: iload_2
    //   2239: istore 8
    //   2241: aload_1
    //   2242: astore 15
    //   2244: aload 13
    //   2246: astore 14
    //   2248: iload_3
    //   2249: istore 5
    //   2251: iload 4
    //   2253: istore 6
    //   2255: aload 16
    //   2257: ldc_w 3853
    //   2260: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2263: ifeq +144 -> 2407
    //   2266: iload_2
    //   2267: istore 8
    //   2269: aload_1
    //   2270: astore 15
    //   2272: aload 13
    //   2274: astore 14
    //   2276: iload_3
    //   2277: istore 5
    //   2279: iload 4
    //   2281: istore 6
    //   2283: aload 18
    //   2285: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2288: ifne +2929 -> 5217
    //   2291: iload_2
    //   2292: istore 8
    //   2294: aload_1
    //   2295: astore 15
    //   2297: aload 13
    //   2299: astore 14
    //   2301: iload_3
    //   2302: istore 5
    //   2304: iload 4
    //   2306: istore 6
    //   2308: aload 18
    //   2310: ldc_w 3920
    //   2313: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2316: ifeq +33 -> 2349
    //   2319: iload_2
    //   2320: istore 8
    //   2322: aload_1
    //   2323: astore 15
    //   2325: aload 13
    //   2327: astore 14
    //   2329: iload_3
    //   2330: istore 5
    //   2332: iload 4
    //   2334: istore 6
    //   2336: aload_1
    //   2337: ldc_w 3922
    //   2340: aload 17
    //   2342: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2345: pop
    //   2346: goto +2871 -> 5217
    //   2349: iload_2
    //   2350: istore 8
    //   2352: aload_1
    //   2353: astore 15
    //   2355: aload 13
    //   2357: astore 14
    //   2359: iload_3
    //   2360: istore 5
    //   2362: iload 4
    //   2364: istore 6
    //   2366: aload 18
    //   2368: ldc_w 3924
    //   2371: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2374: ifeq +2843 -> 5217
    //   2377: iload_2
    //   2378: istore 8
    //   2380: aload_1
    //   2381: astore 15
    //   2383: aload 13
    //   2385: astore 14
    //   2387: iload_3
    //   2388: istore 5
    //   2390: iload 4
    //   2392: istore 6
    //   2394: aload_1
    //   2395: ldc_w 3926
    //   2398: aload 17
    //   2400: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2403: pop
    //   2404: goto +2813 -> 5217
    //   2407: iload_2
    //   2408: istore 8
    //   2410: aload_1
    //   2411: astore 15
    //   2413: aload 13
    //   2415: astore 14
    //   2417: iload_3
    //   2418: istore 5
    //   2420: iload 4
    //   2422: istore 6
    //   2424: aload 16
    //   2426: ldc_w 3894
    //   2429: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2432: ifeq +2785 -> 5217
    //   2435: iload_2
    //   2436: istore 8
    //   2438: aload_1
    //   2439: astore 15
    //   2441: aload 13
    //   2443: astore 14
    //   2445: iload_3
    //   2446: istore 5
    //   2448: iload 4
    //   2450: istore 6
    //   2452: aload 18
    //   2454: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2457: ifne +2760 -> 5217
    //   2460: iload_2
    //   2461: istore 8
    //   2463: aload_1
    //   2464: astore 15
    //   2466: aload 13
    //   2468: astore 14
    //   2470: iload_3
    //   2471: istore 5
    //   2473: iload 4
    //   2475: istore 6
    //   2477: aload 18
    //   2479: ldc_w 3920
    //   2482: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2485: ifeq +33 -> 2518
    //   2488: iload_2
    //   2489: istore 8
    //   2491: aload_1
    //   2492: astore 15
    //   2494: aload 13
    //   2496: astore 14
    //   2498: iload_3
    //   2499: istore 5
    //   2501: iload 4
    //   2503: istore 6
    //   2505: aload_1
    //   2506: ldc_w 3928
    //   2509: aload 17
    //   2511: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2514: pop
    //   2515: goto +2702 -> 5217
    //   2518: iload_2
    //   2519: istore 8
    //   2521: aload_1
    //   2522: astore 15
    //   2524: aload 13
    //   2526: astore 14
    //   2528: iload_3
    //   2529: istore 5
    //   2531: iload 4
    //   2533: istore 6
    //   2535: aload 18
    //   2537: ldc_w 3924
    //   2540: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2543: ifeq +2674 -> 5217
    //   2546: iload_2
    //   2547: istore 8
    //   2549: aload_1
    //   2550: astore 15
    //   2552: aload 13
    //   2554: astore 14
    //   2556: iload_3
    //   2557: istore 5
    //   2559: iload 4
    //   2561: istore 6
    //   2563: aload_1
    //   2564: ldc_w 3930
    //   2567: aload 17
    //   2569: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2572: pop
    //   2573: goto +2644 -> 5217
    //   2576: iload_2
    //   2577: istore 8
    //   2579: aload_1
    //   2580: astore 15
    //   2582: aload 13
    //   2584: astore 14
    //   2586: iload_3
    //   2587: istore 5
    //   2589: iload 4
    //   2591: istore 6
    //   2593: aload 19
    //   2595: ldc_w 3932
    //   2598: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2601: ifeq +144 -> 2745
    //   2604: iload_2
    //   2605: istore 8
    //   2607: aload_1
    //   2608: astore 15
    //   2610: aload 13
    //   2612: astore 14
    //   2614: iload_3
    //   2615: istore 5
    //   2617: iload 4
    //   2619: istore 6
    //   2621: aload 16
    //   2623: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2626: ifne +2591 -> 5217
    //   2629: iload_2
    //   2630: istore 8
    //   2632: aload_1
    //   2633: astore 15
    //   2635: aload 13
    //   2637: astore 14
    //   2639: iload_3
    //   2640: istore 5
    //   2642: iload 4
    //   2644: istore 6
    //   2646: aload 16
    //   2648: ldc_w 3853
    //   2651: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2654: ifeq +33 -> 2687
    //   2657: iload_2
    //   2658: istore 8
    //   2660: aload_1
    //   2661: astore 15
    //   2663: aload 13
    //   2665: astore 14
    //   2667: iload_3
    //   2668: istore 5
    //   2670: iload 4
    //   2672: istore 6
    //   2674: aload_1
    //   2675: ldc_w 3934
    //   2678: aload 17
    //   2680: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2683: pop
    //   2684: goto +2533 -> 5217
    //   2687: iload_2
    //   2688: istore 8
    //   2690: aload_1
    //   2691: astore 15
    //   2693: aload 13
    //   2695: astore 14
    //   2697: iload_3
    //   2698: istore 5
    //   2700: iload 4
    //   2702: istore 6
    //   2704: aload 16
    //   2706: ldc_w 3894
    //   2709: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2712: ifeq +2505 -> 5217
    //   2715: iload_2
    //   2716: istore 8
    //   2718: aload_1
    //   2719: astore 15
    //   2721: aload 13
    //   2723: astore 14
    //   2725: iload_3
    //   2726: istore 5
    //   2728: iload 4
    //   2730: istore 6
    //   2732: aload_1
    //   2733: ldc_w 3936
    //   2736: aload 17
    //   2738: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2741: pop
    //   2742: goto +2475 -> 5217
    //   2745: iload_2
    //   2746: istore 8
    //   2748: aload_1
    //   2749: astore 15
    //   2751: aload 13
    //   2753: astore 14
    //   2755: iload_3
    //   2756: istore 5
    //   2758: iload 4
    //   2760: istore 6
    //   2762: aload 19
    //   2764: ldc_w 3938
    //   2767: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2770: ifeq +144 -> 2914
    //   2773: iload_2
    //   2774: istore 8
    //   2776: aload_1
    //   2777: astore 15
    //   2779: aload 13
    //   2781: astore 14
    //   2783: iload_3
    //   2784: istore 5
    //   2786: iload 4
    //   2788: istore 6
    //   2790: aload 16
    //   2792: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2795: ifne +2422 -> 5217
    //   2798: iload_2
    //   2799: istore 8
    //   2801: aload_1
    //   2802: astore 15
    //   2804: aload 13
    //   2806: astore 14
    //   2808: iload_3
    //   2809: istore 5
    //   2811: iload 4
    //   2813: istore 6
    //   2815: aload 16
    //   2817: ldc_w 3940
    //   2820: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2823: ifeq +33 -> 2856
    //   2826: iload_2
    //   2827: istore 8
    //   2829: aload_1
    //   2830: astore 15
    //   2832: aload 13
    //   2834: astore 14
    //   2836: iload_3
    //   2837: istore 5
    //   2839: iload 4
    //   2841: istore 6
    //   2843: aload_1
    //   2844: ldc_w 3942
    //   2847: aload 17
    //   2849: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2852: pop
    //   2853: goto +2364 -> 5217
    //   2856: iload_2
    //   2857: istore 8
    //   2859: aload_1
    //   2860: astore 15
    //   2862: aload 13
    //   2864: astore 14
    //   2866: iload_3
    //   2867: istore 5
    //   2869: iload 4
    //   2871: istore 6
    //   2873: aload 16
    //   2875: ldc_w 3944
    //   2878: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2881: ifeq +2336 -> 5217
    //   2884: iload_2
    //   2885: istore 8
    //   2887: aload_1
    //   2888: astore 15
    //   2890: aload 13
    //   2892: astore 14
    //   2894: iload_3
    //   2895: istore 5
    //   2897: iload 4
    //   2899: istore 6
    //   2901: aload_1
    //   2902: ldc_w 3946
    //   2905: aload 17
    //   2907: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   2910: pop
    //   2911: goto +2306 -> 5217
    //   2914: iload_2
    //   2915: istore 8
    //   2917: aload_1
    //   2918: astore 15
    //   2920: aload 13
    //   2922: astore 14
    //   2924: iload_3
    //   2925: istore 5
    //   2927: iload 4
    //   2929: istore 6
    //   2931: aload 19
    //   2933: ldc_w 3948
    //   2936: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2939: ifeq +2278 -> 5217
    //   2942: iload_2
    //   2943: istore 8
    //   2945: aload_1
    //   2946: astore 15
    //   2948: aload 13
    //   2950: astore 14
    //   2952: iload_3
    //   2953: istore 5
    //   2955: iload 4
    //   2957: istore 6
    //   2959: aload 16
    //   2961: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   2964: ifne +2253 -> 5217
    //   2967: iload_2
    //   2968: istore 8
    //   2970: aload_1
    //   2971: astore 15
    //   2973: aload 13
    //   2975: astore 14
    //   2977: iload_3
    //   2978: istore 5
    //   2980: iload 4
    //   2982: istore 6
    //   2984: aload 16
    //   2986: ldc_w 3853
    //   2989: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   2992: ifeq +33 -> 3025
    //   2995: iload_2
    //   2996: istore 8
    //   2998: aload_1
    //   2999: astore 15
    //   3001: aload 13
    //   3003: astore 14
    //   3005: iload_3
    //   3006: istore 5
    //   3008: iload 4
    //   3010: istore 6
    //   3012: aload_1
    //   3013: ldc_w 3950
    //   3016: aload 17
    //   3018: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3021: pop
    //   3022: goto +2195 -> 5217
    //   3025: iload_2
    //   3026: istore 8
    //   3028: aload_1
    //   3029: astore 15
    //   3031: aload 13
    //   3033: astore 14
    //   3035: iload_3
    //   3036: istore 5
    //   3038: iload 4
    //   3040: istore 6
    //   3042: aload 16
    //   3044: ldc_w 3894
    //   3047: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3050: ifeq +2167 -> 5217
    //   3053: iload_2
    //   3054: istore 8
    //   3056: aload_1
    //   3057: astore 15
    //   3059: aload 13
    //   3061: astore 14
    //   3063: iload_3
    //   3064: istore 5
    //   3066: iload 4
    //   3068: istore 6
    //   3070: aload_1
    //   3071: ldc_w 3952
    //   3074: aload 17
    //   3076: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3079: pop
    //   3080: goto +2137 -> 5217
    //   3083: iload_2
    //   3084: istore 8
    //   3086: aload_1
    //   3087: astore 15
    //   3089: aload 13
    //   3091: astore 14
    //   3093: iload_3
    //   3094: istore 5
    //   3096: iload 4
    //   3098: istore 6
    //   3100: aload 16
    //   3102: ldc_w 3954
    //   3105: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3108: ifeq +876 -> 3984
    //   3111: iload_2
    //   3112: istore 8
    //   3114: aload_1
    //   3115: astore 15
    //   3117: aload 13
    //   3119: astore 14
    //   3121: iload_3
    //   3122: istore 5
    //   3124: iload 4
    //   3126: istore 6
    //   3128: aload 19
    //   3130: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   3133: ifne -2893 -> 240
    //   3136: aload_1
    //   3137: ifnull -2897 -> 240
    //   3140: iload_2
    //   3141: istore 8
    //   3143: aload_1
    //   3144: astore 15
    //   3146: aload 13
    //   3148: astore 14
    //   3150: iload_3
    //   3151: istore 5
    //   3153: iload 4
    //   3155: istore 6
    //   3157: aload 23
    //   3159: iconst_0
    //   3160: invokeinterface 3841 2 0
    //   3165: astore 16
    //   3167: iload_2
    //   3168: istore 8
    //   3170: aload_1
    //   3171: astore 15
    //   3173: aload 13
    //   3175: astore 14
    //   3177: iload_3
    //   3178: istore 5
    //   3180: iload 4
    //   3182: istore 6
    //   3184: aload 23
    //   3186: invokeinterface 3858 1 0
    //   3191: astore 17
    //   3193: iload_2
    //   3194: istore 8
    //   3196: aload_1
    //   3197: astore 15
    //   3199: aload 13
    //   3201: astore 14
    //   3203: iload_3
    //   3204: istore 5
    //   3206: iload 4
    //   3208: istore 6
    //   3210: aload 17
    //   3212: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   3215: ifeq +40 -> 3255
    //   3218: iload_2
    //   3219: istore 8
    //   3221: aload_1
    //   3222: astore 15
    //   3224: aload 13
    //   3226: astore 14
    //   3228: iload_3
    //   3229: istore 5
    //   3231: iload 4
    //   3233: istore 6
    //   3235: ldc 90
    //   3237: iconst_1
    //   3238: ldc_w 3956
    //   3241: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   3244: aload 19
    //   3246: astore 16
    //   3248: aload 18
    //   3250: astore 17
    //   3252: goto -3004 -> 248
    //   3255: iload_2
    //   3256: istore 8
    //   3258: aload_1
    //   3259: astore 15
    //   3261: aload 13
    //   3263: astore 14
    //   3265: iload_3
    //   3266: istore 5
    //   3268: iload 4
    //   3270: istore 6
    //   3272: aload 19
    //   3274: ldc_w 3918
    //   3277: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3280: ifeq +366 -> 3646
    //   3283: iload_2
    //   3284: istore 8
    //   3286: aload_1
    //   3287: astore 15
    //   3289: aload 13
    //   3291: astore 14
    //   3293: iload_3
    //   3294: istore 5
    //   3296: iload 4
    //   3298: istore 6
    //   3300: aload 16
    //   3302: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   3305: ifne +1923 -> 5228
    //   3308: iload_2
    //   3309: istore 8
    //   3311: aload_1
    //   3312: astore 15
    //   3314: aload 13
    //   3316: astore 14
    //   3318: iload_3
    //   3319: istore 5
    //   3321: iload 4
    //   3323: istore 6
    //   3325: aload 16
    //   3327: ldc_w 3853
    //   3330: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3333: ifeq +144 -> 3477
    //   3336: iload_2
    //   3337: istore 8
    //   3339: aload_1
    //   3340: astore 15
    //   3342: aload 13
    //   3344: astore 14
    //   3346: iload_3
    //   3347: istore 5
    //   3349: iload 4
    //   3351: istore 6
    //   3353: aload 18
    //   3355: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   3358: ifne +1870 -> 5228
    //   3361: iload_2
    //   3362: istore 8
    //   3364: aload_1
    //   3365: astore 15
    //   3367: aload 13
    //   3369: astore 14
    //   3371: iload_3
    //   3372: istore 5
    //   3374: iload 4
    //   3376: istore 6
    //   3378: aload 18
    //   3380: ldc_w 3920
    //   3383: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3386: ifeq +33 -> 3419
    //   3389: iload_2
    //   3390: istore 8
    //   3392: aload_1
    //   3393: astore 15
    //   3395: aload 13
    //   3397: astore 14
    //   3399: iload_3
    //   3400: istore 5
    //   3402: iload 4
    //   3404: istore 6
    //   3406: aload_1
    //   3407: ldc_w 3958
    //   3410: aload 17
    //   3412: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3415: pop
    //   3416: goto +1812 -> 5228
    //   3419: iload_2
    //   3420: istore 8
    //   3422: aload_1
    //   3423: astore 15
    //   3425: aload 13
    //   3427: astore 14
    //   3429: iload_3
    //   3430: istore 5
    //   3432: iload 4
    //   3434: istore 6
    //   3436: aload 18
    //   3438: ldc_w 3924
    //   3441: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3444: ifeq +1784 -> 5228
    //   3447: iload_2
    //   3448: istore 8
    //   3450: aload_1
    //   3451: astore 15
    //   3453: aload 13
    //   3455: astore 14
    //   3457: iload_3
    //   3458: istore 5
    //   3460: iload 4
    //   3462: istore 6
    //   3464: aload_1
    //   3465: ldc_w 3960
    //   3468: aload 17
    //   3470: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3473: pop
    //   3474: goto +1754 -> 5228
    //   3477: iload_2
    //   3478: istore 8
    //   3480: aload_1
    //   3481: astore 15
    //   3483: aload 13
    //   3485: astore 14
    //   3487: iload_3
    //   3488: istore 5
    //   3490: iload 4
    //   3492: istore 6
    //   3494: aload 16
    //   3496: ldc_w 3894
    //   3499: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3502: ifeq +1726 -> 5228
    //   3505: iload_2
    //   3506: istore 8
    //   3508: aload_1
    //   3509: astore 15
    //   3511: aload 13
    //   3513: astore 14
    //   3515: iload_3
    //   3516: istore 5
    //   3518: iload 4
    //   3520: istore 6
    //   3522: aload 18
    //   3524: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   3527: ifne +1701 -> 5228
    //   3530: iload_2
    //   3531: istore 8
    //   3533: aload_1
    //   3534: astore 15
    //   3536: aload 13
    //   3538: astore 14
    //   3540: iload_3
    //   3541: istore 5
    //   3543: iload 4
    //   3545: istore 6
    //   3547: aload 18
    //   3549: ldc_w 3920
    //   3552: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3555: ifeq +33 -> 3588
    //   3558: iload_2
    //   3559: istore 8
    //   3561: aload_1
    //   3562: astore 15
    //   3564: aload 13
    //   3566: astore 14
    //   3568: iload_3
    //   3569: istore 5
    //   3571: iload 4
    //   3573: istore 6
    //   3575: aload_1
    //   3576: ldc_w 3962
    //   3579: aload 17
    //   3581: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3584: pop
    //   3585: goto +1643 -> 5228
    //   3588: iload_2
    //   3589: istore 8
    //   3591: aload_1
    //   3592: astore 15
    //   3594: aload 13
    //   3596: astore 14
    //   3598: iload_3
    //   3599: istore 5
    //   3601: iload 4
    //   3603: istore 6
    //   3605: aload 18
    //   3607: ldc_w 3924
    //   3610: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3613: ifeq +1615 -> 5228
    //   3616: iload_2
    //   3617: istore 8
    //   3619: aload_1
    //   3620: astore 15
    //   3622: aload 13
    //   3624: astore 14
    //   3626: iload_3
    //   3627: istore 5
    //   3629: iload 4
    //   3631: istore 6
    //   3633: aload_1
    //   3634: ldc_w 3964
    //   3637: aload 17
    //   3639: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3642: pop
    //   3643: goto +1585 -> 5228
    //   3646: iload_2
    //   3647: istore 8
    //   3649: aload_1
    //   3650: astore 15
    //   3652: aload 13
    //   3654: astore 14
    //   3656: iload_3
    //   3657: istore 5
    //   3659: iload 4
    //   3661: istore 6
    //   3663: aload 19
    //   3665: ldc_w 3932
    //   3668: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3671: ifeq +144 -> 3815
    //   3674: iload_2
    //   3675: istore 8
    //   3677: aload_1
    //   3678: astore 15
    //   3680: aload 13
    //   3682: astore 14
    //   3684: iload_3
    //   3685: istore 5
    //   3687: iload 4
    //   3689: istore 6
    //   3691: aload 16
    //   3693: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   3696: ifne +1532 -> 5228
    //   3699: iload_2
    //   3700: istore 8
    //   3702: aload_1
    //   3703: astore 15
    //   3705: aload 13
    //   3707: astore 14
    //   3709: iload_3
    //   3710: istore 5
    //   3712: iload 4
    //   3714: istore 6
    //   3716: aload 16
    //   3718: ldc_w 3853
    //   3721: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3724: ifeq +33 -> 3757
    //   3727: iload_2
    //   3728: istore 8
    //   3730: aload_1
    //   3731: astore 15
    //   3733: aload 13
    //   3735: astore 14
    //   3737: iload_3
    //   3738: istore 5
    //   3740: iload 4
    //   3742: istore 6
    //   3744: aload_1
    //   3745: ldc_w 3966
    //   3748: aload 17
    //   3750: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3753: pop
    //   3754: goto +1474 -> 5228
    //   3757: iload_2
    //   3758: istore 8
    //   3760: aload_1
    //   3761: astore 15
    //   3763: aload 13
    //   3765: astore 14
    //   3767: iload_3
    //   3768: istore 5
    //   3770: iload 4
    //   3772: istore 6
    //   3774: aload 16
    //   3776: ldc_w 3894
    //   3779: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3782: ifeq +1446 -> 5228
    //   3785: iload_2
    //   3786: istore 8
    //   3788: aload_1
    //   3789: astore 15
    //   3791: aload 13
    //   3793: astore 14
    //   3795: iload_3
    //   3796: istore 5
    //   3798: iload 4
    //   3800: istore 6
    //   3802: aload_1
    //   3803: ldc_w 3968
    //   3806: aload 17
    //   3808: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3811: pop
    //   3812: goto +1416 -> 5228
    //   3815: iload_2
    //   3816: istore 8
    //   3818: aload_1
    //   3819: astore 15
    //   3821: aload 13
    //   3823: astore 14
    //   3825: iload_3
    //   3826: istore 5
    //   3828: iload 4
    //   3830: istore 6
    //   3832: aload 19
    //   3834: ldc_w 3948
    //   3837: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3840: ifeq +1388 -> 5228
    //   3843: iload_2
    //   3844: istore 8
    //   3846: aload_1
    //   3847: astore 15
    //   3849: aload 13
    //   3851: astore 14
    //   3853: iload_3
    //   3854: istore 5
    //   3856: iload 4
    //   3858: istore 6
    //   3860: aload 16
    //   3862: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   3865: ifne +1363 -> 5228
    //   3868: iload_2
    //   3869: istore 8
    //   3871: aload_1
    //   3872: astore 15
    //   3874: aload 13
    //   3876: astore 14
    //   3878: iload_3
    //   3879: istore 5
    //   3881: iload 4
    //   3883: istore 6
    //   3885: aload 16
    //   3887: ldc_w 3853
    //   3890: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3893: ifeq +33 -> 3926
    //   3896: iload_2
    //   3897: istore 8
    //   3899: aload_1
    //   3900: astore 15
    //   3902: aload 13
    //   3904: astore 14
    //   3906: iload_3
    //   3907: istore 5
    //   3909: iload 4
    //   3911: istore 6
    //   3913: aload_1
    //   3914: ldc_w 3970
    //   3917: aload 17
    //   3919: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3922: pop
    //   3923: goto +1305 -> 5228
    //   3926: iload_2
    //   3927: istore 8
    //   3929: aload_1
    //   3930: astore 15
    //   3932: aload 13
    //   3934: astore 14
    //   3936: iload_3
    //   3937: istore 5
    //   3939: iload 4
    //   3941: istore 6
    //   3943: aload 16
    //   3945: ldc_w 3894
    //   3948: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   3951: ifeq +1277 -> 5228
    //   3954: iload_2
    //   3955: istore 8
    //   3957: aload_1
    //   3958: astore 15
    //   3960: aload 13
    //   3962: astore 14
    //   3964: iload_3
    //   3965: istore 5
    //   3967: iload 4
    //   3969: istore 6
    //   3971: aload_1
    //   3972: ldc_w 3972
    //   3975: aload 17
    //   3977: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   3980: pop
    //   3981: goto +1247 -> 5228
    //   3984: iload_2
    //   3985: istore 8
    //   3987: aload_1
    //   3988: astore 15
    //   3990: aload 13
    //   3992: astore 14
    //   3994: iload_3
    //   3995: istore 5
    //   3997: iload 4
    //   3999: istore 6
    //   4001: aload 16
    //   4003: ldc_w 3974
    //   4006: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4009: ifeq +707 -> 4716
    //   4012: iload_2
    //   4013: istore 8
    //   4015: aload_1
    //   4016: astore 15
    //   4018: aload 13
    //   4020: astore 14
    //   4022: iload_3
    //   4023: istore 5
    //   4025: iload 4
    //   4027: istore 6
    //   4029: aload 19
    //   4031: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4034: ifne -3794 -> 240
    //   4037: aload_1
    //   4038: ifnull -3798 -> 240
    //   4041: iload_2
    //   4042: istore 8
    //   4044: aload_1
    //   4045: astore 15
    //   4047: aload 13
    //   4049: astore 14
    //   4051: iload_3
    //   4052: istore 5
    //   4054: iload 4
    //   4056: istore 6
    //   4058: aload 23
    //   4060: iconst_0
    //   4061: invokeinterface 3841 2 0
    //   4066: astore 16
    //   4068: iload_2
    //   4069: istore 8
    //   4071: aload_1
    //   4072: astore 15
    //   4074: aload 13
    //   4076: astore 14
    //   4078: iload_3
    //   4079: istore 5
    //   4081: iload 4
    //   4083: istore 6
    //   4085: aload 23
    //   4087: invokeinterface 3858 1 0
    //   4092: astore 17
    //   4094: iload_2
    //   4095: istore 8
    //   4097: aload_1
    //   4098: astore 15
    //   4100: aload 13
    //   4102: astore 14
    //   4104: iload_3
    //   4105: istore 5
    //   4107: iload 4
    //   4109: istore 6
    //   4111: aload 17
    //   4113: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4116: ifeq +40 -> 4156
    //   4119: iload_2
    //   4120: istore 8
    //   4122: aload_1
    //   4123: astore 15
    //   4125: aload 13
    //   4127: astore 14
    //   4129: iload_3
    //   4130: istore 5
    //   4132: iload 4
    //   4134: istore 6
    //   4136: ldc 90
    //   4138: iconst_1
    //   4139: ldc_w 3976
    //   4142: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   4145: aload 19
    //   4147: astore 16
    //   4149: aload 18
    //   4151: astore 17
    //   4153: goto -3905 -> 248
    //   4156: iload_2
    //   4157: istore 8
    //   4159: aload_1
    //   4160: astore 15
    //   4162: aload 13
    //   4164: astore 14
    //   4166: iload_3
    //   4167: istore 5
    //   4169: iload 4
    //   4171: istore 6
    //   4173: aload 19
    //   4175: ldc_w 3918
    //   4178: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4181: ifeq +366 -> 4547
    //   4184: iload_2
    //   4185: istore 8
    //   4187: aload_1
    //   4188: astore 15
    //   4190: aload 13
    //   4192: astore 14
    //   4194: iload_3
    //   4195: istore 5
    //   4197: iload 4
    //   4199: istore 6
    //   4201: aload 16
    //   4203: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4206: ifne +1033 -> 5239
    //   4209: iload_2
    //   4210: istore 8
    //   4212: aload_1
    //   4213: astore 15
    //   4215: aload 13
    //   4217: astore 14
    //   4219: iload_3
    //   4220: istore 5
    //   4222: iload 4
    //   4224: istore 6
    //   4226: aload 16
    //   4228: ldc_w 3853
    //   4231: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4234: ifeq +144 -> 4378
    //   4237: iload_2
    //   4238: istore 8
    //   4240: aload_1
    //   4241: astore 15
    //   4243: aload 13
    //   4245: astore 14
    //   4247: iload_3
    //   4248: istore 5
    //   4250: iload 4
    //   4252: istore 6
    //   4254: aload 18
    //   4256: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4259: ifne +980 -> 5239
    //   4262: iload_2
    //   4263: istore 8
    //   4265: aload_1
    //   4266: astore 15
    //   4268: aload 13
    //   4270: astore 14
    //   4272: iload_3
    //   4273: istore 5
    //   4275: iload 4
    //   4277: istore 6
    //   4279: aload 18
    //   4281: ldc_w 3920
    //   4284: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4287: ifeq +33 -> 4320
    //   4290: iload_2
    //   4291: istore 8
    //   4293: aload_1
    //   4294: astore 15
    //   4296: aload 13
    //   4298: astore 14
    //   4300: iload_3
    //   4301: istore 5
    //   4303: iload 4
    //   4305: istore 6
    //   4307: aload_1
    //   4308: ldc_w 3978
    //   4311: aload 17
    //   4313: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4316: pop
    //   4317: goto +922 -> 5239
    //   4320: iload_2
    //   4321: istore 8
    //   4323: aload_1
    //   4324: astore 15
    //   4326: aload 13
    //   4328: astore 14
    //   4330: iload_3
    //   4331: istore 5
    //   4333: iload 4
    //   4335: istore 6
    //   4337: aload 18
    //   4339: ldc_w 3924
    //   4342: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4345: ifeq +894 -> 5239
    //   4348: iload_2
    //   4349: istore 8
    //   4351: aload_1
    //   4352: astore 15
    //   4354: aload 13
    //   4356: astore 14
    //   4358: iload_3
    //   4359: istore 5
    //   4361: iload 4
    //   4363: istore 6
    //   4365: aload_1
    //   4366: ldc_w 3980
    //   4369: aload 17
    //   4371: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4374: pop
    //   4375: goto +864 -> 5239
    //   4378: iload_2
    //   4379: istore 8
    //   4381: aload_1
    //   4382: astore 15
    //   4384: aload 13
    //   4386: astore 14
    //   4388: iload_3
    //   4389: istore 5
    //   4391: iload 4
    //   4393: istore 6
    //   4395: aload 16
    //   4397: ldc_w 3894
    //   4400: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4403: ifeq +836 -> 5239
    //   4406: iload_2
    //   4407: istore 8
    //   4409: aload_1
    //   4410: astore 15
    //   4412: aload 13
    //   4414: astore 14
    //   4416: iload_3
    //   4417: istore 5
    //   4419: iload 4
    //   4421: istore 6
    //   4423: aload 18
    //   4425: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4428: ifne +811 -> 5239
    //   4431: iload_2
    //   4432: istore 8
    //   4434: aload_1
    //   4435: astore 15
    //   4437: aload 13
    //   4439: astore 14
    //   4441: iload_3
    //   4442: istore 5
    //   4444: iload 4
    //   4446: istore 6
    //   4448: aload 18
    //   4450: ldc_w 3920
    //   4453: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4456: ifeq +33 -> 4489
    //   4459: iload_2
    //   4460: istore 8
    //   4462: aload_1
    //   4463: astore 15
    //   4465: aload 13
    //   4467: astore 14
    //   4469: iload_3
    //   4470: istore 5
    //   4472: iload 4
    //   4474: istore 6
    //   4476: aload_1
    //   4477: ldc_w 3982
    //   4480: aload 17
    //   4482: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4485: pop
    //   4486: goto +753 -> 5239
    //   4489: iload_2
    //   4490: istore 8
    //   4492: aload_1
    //   4493: astore 15
    //   4495: aload 13
    //   4497: astore 14
    //   4499: iload_3
    //   4500: istore 5
    //   4502: iload 4
    //   4504: istore 6
    //   4506: aload 18
    //   4508: ldc_w 3924
    //   4511: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4514: ifeq +725 -> 5239
    //   4517: iload_2
    //   4518: istore 8
    //   4520: aload_1
    //   4521: astore 15
    //   4523: aload 13
    //   4525: astore 14
    //   4527: iload_3
    //   4528: istore 5
    //   4530: iload 4
    //   4532: istore 6
    //   4534: aload_1
    //   4535: ldc_w 3984
    //   4538: aload 17
    //   4540: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4543: pop
    //   4544: goto +695 -> 5239
    //   4547: iload_2
    //   4548: istore 8
    //   4550: aload_1
    //   4551: astore 15
    //   4553: aload 13
    //   4555: astore 14
    //   4557: iload_3
    //   4558: istore 5
    //   4560: iload 4
    //   4562: istore 6
    //   4564: aload 19
    //   4566: ldc_w 3932
    //   4569: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4572: ifeq +667 -> 5239
    //   4575: iload_2
    //   4576: istore 8
    //   4578: aload_1
    //   4579: astore 15
    //   4581: aload 13
    //   4583: astore 14
    //   4585: iload_3
    //   4586: istore 5
    //   4588: iload 4
    //   4590: istore 6
    //   4592: aload 16
    //   4594: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4597: ifne +642 -> 5239
    //   4600: iload_2
    //   4601: istore 8
    //   4603: aload_1
    //   4604: astore 15
    //   4606: aload 13
    //   4608: astore 14
    //   4610: iload_3
    //   4611: istore 5
    //   4613: iload 4
    //   4615: istore 6
    //   4617: aload 16
    //   4619: ldc_w 3853
    //   4622: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4625: ifeq +33 -> 4658
    //   4628: iload_2
    //   4629: istore 8
    //   4631: aload_1
    //   4632: astore 15
    //   4634: aload 13
    //   4636: astore 14
    //   4638: iload_3
    //   4639: istore 5
    //   4641: iload 4
    //   4643: istore 6
    //   4645: aload_1
    //   4646: ldc_w 3986
    //   4649: aload 17
    //   4651: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4654: pop
    //   4655: goto +584 -> 5239
    //   4658: iload_2
    //   4659: istore 8
    //   4661: aload_1
    //   4662: astore 15
    //   4664: aload 13
    //   4666: astore 14
    //   4668: iload_3
    //   4669: istore 5
    //   4671: iload 4
    //   4673: istore 6
    //   4675: aload 16
    //   4677: ldc_w 3894
    //   4680: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4683: ifeq +556 -> 5239
    //   4686: iload_2
    //   4687: istore 8
    //   4689: aload_1
    //   4690: astore 15
    //   4692: aload 13
    //   4694: astore 14
    //   4696: iload_3
    //   4697: istore 5
    //   4699: iload 4
    //   4701: istore 6
    //   4703: aload_1
    //   4704: ldc_w 3988
    //   4707: aload 17
    //   4709: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4712: pop
    //   4713: goto +526 -> 5239
    //   4716: iload_2
    //   4717: istore 8
    //   4719: aload_1
    //   4720: astore 15
    //   4722: aload 13
    //   4724: astore 14
    //   4726: iload_3
    //   4727: istore 5
    //   4729: iload 4
    //   4731: istore 6
    //   4733: aload 16
    //   4735: ldc_w 3990
    //   4738: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4741: ifeq -4501 -> 240
    //   4744: iload_2
    //   4745: istore 8
    //   4747: aload_1
    //   4748: astore 15
    //   4750: aload 13
    //   4752: astore 14
    //   4754: iload_3
    //   4755: istore 5
    //   4757: iload 4
    //   4759: istore 6
    //   4761: aload 19
    //   4763: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4766: ifne -4526 -> 240
    //   4769: aload_1
    //   4770: ifnull -4530 -> 240
    //   4773: iload_2
    //   4774: istore 8
    //   4776: aload_1
    //   4777: astore 15
    //   4779: aload 13
    //   4781: astore 14
    //   4783: iload_3
    //   4784: istore 5
    //   4786: iload 4
    //   4788: istore 6
    //   4790: aload 23
    //   4792: iconst_0
    //   4793: invokeinterface 3841 2 0
    //   4798: astore 16
    //   4800: iload_2
    //   4801: istore 8
    //   4803: aload_1
    //   4804: astore 15
    //   4806: aload 13
    //   4808: astore 14
    //   4810: iload_3
    //   4811: istore 5
    //   4813: iload 4
    //   4815: istore 6
    //   4817: aload 23
    //   4819: invokeinterface 3858 1 0
    //   4824: astore 17
    //   4826: iload_2
    //   4827: istore 8
    //   4829: aload_1
    //   4830: astore 15
    //   4832: aload 13
    //   4834: astore 14
    //   4836: iload_3
    //   4837: istore 5
    //   4839: iload 4
    //   4841: istore 6
    //   4843: aload 17
    //   4845: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4848: ifeq +40 -> 4888
    //   4851: iload_2
    //   4852: istore 8
    //   4854: aload_1
    //   4855: astore 15
    //   4857: aload 13
    //   4859: astore 14
    //   4861: iload_3
    //   4862: istore 5
    //   4864: iload 4
    //   4866: istore 6
    //   4868: ldc 90
    //   4870: iconst_1
    //   4871: ldc_w 3992
    //   4874: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   4877: aload 19
    //   4879: astore 16
    //   4881: aload 18
    //   4883: astore 17
    //   4885: goto -4637 -> 248
    //   4888: iload_2
    //   4889: istore 8
    //   4891: aload_1
    //   4892: astore 15
    //   4894: aload 13
    //   4896: astore 14
    //   4898: iload_3
    //   4899: istore 5
    //   4901: iload 4
    //   4903: istore 6
    //   4905: aload 19
    //   4907: ldc_w 3948
    //   4910: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4913: ifeq +337 -> 5250
    //   4916: iload_2
    //   4917: istore 8
    //   4919: aload_1
    //   4920: astore 15
    //   4922: aload 13
    //   4924: astore 14
    //   4926: iload_3
    //   4927: istore 5
    //   4929: iload 4
    //   4931: istore 6
    //   4933: aload 16
    //   4935: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4938: ifne +312 -> 5250
    //   4941: iload_2
    //   4942: istore 8
    //   4944: aload_1
    //   4945: astore 15
    //   4947: aload 13
    //   4949: astore 14
    //   4951: iload_3
    //   4952: istore 5
    //   4954: iload 4
    //   4956: istore 6
    //   4958: aload 16
    //   4960: ldc_w 3853
    //   4963: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   4966: ifeq +33 -> 4999
    //   4969: iload_2
    //   4970: istore 8
    //   4972: aload_1
    //   4973: astore 15
    //   4975: aload 13
    //   4977: astore 14
    //   4979: iload_3
    //   4980: istore 5
    //   4982: iload 4
    //   4984: istore 6
    //   4986: aload_1
    //   4987: ldc_w 3994
    //   4990: aload 17
    //   4992: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   4995: pop
    //   4996: goto +254 -> 5250
    //   4999: iload_2
    //   5000: istore 8
    //   5002: aload_1
    //   5003: astore 15
    //   5005: aload 13
    //   5007: astore 14
    //   5009: iload_3
    //   5010: istore 5
    //   5012: iload 4
    //   5014: istore 6
    //   5016: aload 16
    //   5018: ldc_w 3894
    //   5021: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   5024: ifeq +226 -> 5250
    //   5027: iload_2
    //   5028: istore 8
    //   5030: aload_1
    //   5031: astore 15
    //   5033: aload 13
    //   5035: astore 14
    //   5037: iload_3
    //   5038: istore 5
    //   5040: iload 4
    //   5042: istore 6
    //   5044: aload_1
    //   5045: ldc_w 3996
    //   5048: aload 17
    //   5050: invokevirtual 2930	java/util/HashMap:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   5053: pop
    //   5054: goto +196 -> 5250
    //   5057: iload_2
    //   5058: istore 8
    //   5060: aload_1
    //   5061: astore 15
    //   5063: aload 13
    //   5065: astore 14
    //   5067: iload_3
    //   5068: istore 5
    //   5070: iload 4
    //   5072: istore 6
    //   5074: aload 16
    //   5076: ldc_w 3850
    //   5079: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   5082: ifeq +13 -> 5095
    //   5085: aconst_null
    //   5086: astore 17
    //   5088: aload 19
    //   5090: astore 16
    //   5092: goto -4844 -> 248
    //   5095: iload_2
    //   5096: istore 8
    //   5098: aload_1
    //   5099: astore 15
    //   5101: aload 13
    //   5103: astore 14
    //   5105: iload_3
    //   5106: istore 5
    //   5108: iload 4
    //   5110: istore 6
    //   5112: aload 16
    //   5114: ldc_w 3851
    //   5117: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   5120: istore 12
    //   5122: iload 12
    //   5124: ifeq -4884 -> 240
    //   5127: aload 18
    //   5129: ifnonnull -4889 -> 240
    //   5132: aconst_null
    //   5133: astore 16
    //   5135: aload 18
    //   5137: astore 17
    //   5139: goto -4891 -> 248
    //   5142: astore_1
    //   5143: iload 5
    //   5145: istore_2
    //   5146: goto -3859 -> 1287
    //   5149: astore 18
    //   5151: iconst_0
    //   5152: istore_2
    //   5153: aconst_null
    //   5154: astore_1
    //   5155: aload 16
    //   5157: astore 13
    //   5159: goto -3991 -> 1168
    //   5162: astore 18
    //   5164: goto -3996 -> 1168
    //   5167: astore 18
    //   5169: iconst_0
    //   5170: istore_2
    //   5171: aconst_null
    //   5172: astore_1
    //   5173: goto -4326 -> 847
    //   5176: astore 18
    //   5178: goto -4331 -> 847
    //   5181: goto +25 -> 5206
    //   5184: aload 19
    //   5186: astore 16
    //   5188: aload 18
    //   5190: astore 17
    //   5192: goto -4944 -> 248
    //   5195: aload 19
    //   5197: astore 16
    //   5199: aload 18
    //   5201: astore 17
    //   5203: goto -4955 -> 248
    //   5206: aload 19
    //   5208: astore 16
    //   5210: aload 18
    //   5212: astore 17
    //   5214: goto -4966 -> 248
    //   5217: aload 19
    //   5219: astore 16
    //   5221: aload 18
    //   5223: astore 17
    //   5225: goto -4977 -> 248
    //   5228: aload 19
    //   5230: astore 16
    //   5232: aload 18
    //   5234: astore 17
    //   5236: goto -4988 -> 248
    //   5239: aload 19
    //   5241: astore 16
    //   5243: aload 18
    //   5245: astore 17
    //   5247: goto -4999 -> 248
    //   5250: aload 19
    //   5252: astore 16
    //   5254: aload 18
    //   5256: astore 17
    //   5258: goto -5010 -> 248
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	5261	0	this	ConfigServlet
    //   0	5261	1	paramString	String
    //   61	5110	2	i	int
    //   59	5047	3	j	int
    //   56	5053	4	k	int
    //   84	5060	5	m	int
    //   80	5031	6	n	int
    //   69	1939	7	i1	int
    //   192	4905	8	i2	int
    //   183	1174	9	i3	int
    //   169	1088	10	i4	int
    //   158	115	11	i5	int
    //   5120	3	12	bool	boolean
    //   41	5117	13	localObject1	Object
    //   77	5027	14	localObject2	Object
    //   73	5027	15	localObject3	Object
    //   44	5209	16	localObject4	Object
    //   50	5207	17	localObject5	Object
    //   63	646	18	localObject6	Object
    //   845	76	18	localNumberFormatException1	NumberFormatException
    //   1166	3970	18	localIOException1	IOException
    //   5149	1	18	localIOException2	IOException
    //   5162	1	18	localIOException3	IOException
    //   5167	1	18	localNumberFormatException2	NumberFormatException
    //   5176	79	18	localNumberFormatException3	NumberFormatException
    //   66	5185	19	localObject7	Object
    //   53	84	20	localObject8	Object
    //   47	94	21	localObject9	Object
    //   16	1734	22	localPstnManager	com.tencent.mobileqq.qcall.PstnManager
    //   89	4729	23	localXmlPullParser	XmlPullParser
    // Exception table:
    //   from	to	target	type
    //   208	217	845	java/lang/NumberFormatException
    //   302	313	845	java/lang/NumberFormatException
    //   330	340	845	java/lang/NumberFormatException
    //   357	365	845	java/lang/NumberFormatException
    //   382	393	845	java/lang/NumberFormatException
    //   410	419	845	java/lang/NumberFormatException
    //   443	454	845	java/lang/NumberFormatException
    //   471	480	845	java/lang/NumberFormatException
    //   503	514	845	java/lang/NumberFormatException
    //   536	547	845	java/lang/NumberFormatException
    //   564	574	845	java/lang/NumberFormatException
    //   598	609	845	java/lang/NumberFormatException
    //   626	634	845	java/lang/NumberFormatException
    //   656	666	845	java/lang/NumberFormatException
    //   683	691	845	java/lang/NumberFormatException
    //   708	719	845	java/lang/NumberFormatException
    //   736	747	845	java/lang/NumberFormatException
    //   764	779	845	java/lang/NumberFormatException
    //   799	810	845	java/lang/NumberFormatException
    //   827	842	845	java/lang/NumberFormatException
    //   1120	1131	845	java/lang/NumberFormatException
    //   1148	1163	845	java/lang/NumberFormatException
    //   1378	1389	845	java/lang/NumberFormatException
    //   1406	1421	845	java/lang/NumberFormatException
    //   1441	1452	845	java/lang/NumberFormatException
    //   1469	1480	845	java/lang/NumberFormatException
    //   1497	1512	845	java/lang/NumberFormatException
    //   1532	1543	845	java/lang/NumberFormatException
    //   1560	1575	845	java/lang/NumberFormatException
    //   1595	1606	845	java/lang/NumberFormatException
    //   1623	1638	845	java/lang/NumberFormatException
    //   1658	1669	845	java/lang/NumberFormatException
    //   1686	1701	845	java/lang/NumberFormatException
    //   1721	1732	845	java/lang/NumberFormatException
    //   1749	1764	845	java/lang/NumberFormatException
    //   1788	1798	845	java/lang/NumberFormatException
    //   1826	1836	845	java/lang/NumberFormatException
    //   1853	1861	845	java/lang/NumberFormatException
    //   1878	1889	845	java/lang/NumberFormatException
    //   1906	1918	845	java/lang/NumberFormatException
    //   1942	1950	845	java/lang/NumberFormatException
    //   1967	1978	845	java/lang/NumberFormatException
    //   1995	2007	845	java/lang/NumberFormatException
    //   2030	2041	845	java/lang/NumberFormatException
    //   2058	2066	845	java/lang/NumberFormatException
    //   2087	2097	845	java/lang/NumberFormatException
    //   2114	2123	845	java/lang/NumberFormatException
    //   2140	2148	845	java/lang/NumberFormatException
    //   2165	2174	845	java/lang/NumberFormatException
    //   2202	2213	845	java/lang/NumberFormatException
    //   2230	2238	845	java/lang/NumberFormatException
    //   2255	2266	845	java/lang/NumberFormatException
    //   2283	2291	845	java/lang/NumberFormatException
    //   2308	2319	845	java/lang/NumberFormatException
    //   2336	2346	845	java/lang/NumberFormatException
    //   2366	2377	845	java/lang/NumberFormatException
    //   2394	2404	845	java/lang/NumberFormatException
    //   2424	2435	845	java/lang/NumberFormatException
    //   2452	2460	845	java/lang/NumberFormatException
    //   2477	2488	845	java/lang/NumberFormatException
    //   2505	2515	845	java/lang/NumberFormatException
    //   2535	2546	845	java/lang/NumberFormatException
    //   2563	2573	845	java/lang/NumberFormatException
    //   2593	2604	845	java/lang/NumberFormatException
    //   2621	2629	845	java/lang/NumberFormatException
    //   2646	2657	845	java/lang/NumberFormatException
    //   2674	2684	845	java/lang/NumberFormatException
    //   2704	2715	845	java/lang/NumberFormatException
    //   2732	2742	845	java/lang/NumberFormatException
    //   2762	2773	845	java/lang/NumberFormatException
    //   2790	2798	845	java/lang/NumberFormatException
    //   2815	2826	845	java/lang/NumberFormatException
    //   2843	2853	845	java/lang/NumberFormatException
    //   2873	2884	845	java/lang/NumberFormatException
    //   2901	2911	845	java/lang/NumberFormatException
    //   2931	2942	845	java/lang/NumberFormatException
    //   2959	2967	845	java/lang/NumberFormatException
    //   2984	2995	845	java/lang/NumberFormatException
    //   3012	3022	845	java/lang/NumberFormatException
    //   3042	3053	845	java/lang/NumberFormatException
    //   3070	3080	845	java/lang/NumberFormatException
    //   3100	3111	845	java/lang/NumberFormatException
    //   3128	3136	845	java/lang/NumberFormatException
    //   3157	3167	845	java/lang/NumberFormatException
    //   3184	3193	845	java/lang/NumberFormatException
    //   3210	3218	845	java/lang/NumberFormatException
    //   3235	3244	845	java/lang/NumberFormatException
    //   3272	3283	845	java/lang/NumberFormatException
    //   3300	3308	845	java/lang/NumberFormatException
    //   3325	3336	845	java/lang/NumberFormatException
    //   3353	3361	845	java/lang/NumberFormatException
    //   3378	3389	845	java/lang/NumberFormatException
    //   3406	3416	845	java/lang/NumberFormatException
    //   3436	3447	845	java/lang/NumberFormatException
    //   3464	3474	845	java/lang/NumberFormatException
    //   3494	3505	845	java/lang/NumberFormatException
    //   3522	3530	845	java/lang/NumberFormatException
    //   3547	3558	845	java/lang/NumberFormatException
    //   3575	3585	845	java/lang/NumberFormatException
    //   3605	3616	845	java/lang/NumberFormatException
    //   3633	3643	845	java/lang/NumberFormatException
    //   3663	3674	845	java/lang/NumberFormatException
    //   3691	3699	845	java/lang/NumberFormatException
    //   3716	3727	845	java/lang/NumberFormatException
    //   3744	3754	845	java/lang/NumberFormatException
    //   3774	3785	845	java/lang/NumberFormatException
    //   3802	3812	845	java/lang/NumberFormatException
    //   3832	3843	845	java/lang/NumberFormatException
    //   3860	3868	845	java/lang/NumberFormatException
    //   3885	3896	845	java/lang/NumberFormatException
    //   3913	3923	845	java/lang/NumberFormatException
    //   3943	3954	845	java/lang/NumberFormatException
    //   3971	3981	845	java/lang/NumberFormatException
    //   4001	4012	845	java/lang/NumberFormatException
    //   4029	4037	845	java/lang/NumberFormatException
    //   4058	4068	845	java/lang/NumberFormatException
    //   4085	4094	845	java/lang/NumberFormatException
    //   4111	4119	845	java/lang/NumberFormatException
    //   4136	4145	845	java/lang/NumberFormatException
    //   4173	4184	845	java/lang/NumberFormatException
    //   4201	4209	845	java/lang/NumberFormatException
    //   4226	4237	845	java/lang/NumberFormatException
    //   4254	4262	845	java/lang/NumberFormatException
    //   4279	4290	845	java/lang/NumberFormatException
    //   4307	4317	845	java/lang/NumberFormatException
    //   4337	4348	845	java/lang/NumberFormatException
    //   4365	4375	845	java/lang/NumberFormatException
    //   4395	4406	845	java/lang/NumberFormatException
    //   4423	4431	845	java/lang/NumberFormatException
    //   4448	4459	845	java/lang/NumberFormatException
    //   4476	4486	845	java/lang/NumberFormatException
    //   4506	4517	845	java/lang/NumberFormatException
    //   4534	4544	845	java/lang/NumberFormatException
    //   4564	4575	845	java/lang/NumberFormatException
    //   4592	4600	845	java/lang/NumberFormatException
    //   4617	4628	845	java/lang/NumberFormatException
    //   4645	4655	845	java/lang/NumberFormatException
    //   4675	4686	845	java/lang/NumberFormatException
    //   4703	4713	845	java/lang/NumberFormatException
    //   4733	4744	845	java/lang/NumberFormatException
    //   4761	4769	845	java/lang/NumberFormatException
    //   4790	4800	845	java/lang/NumberFormatException
    //   4817	4826	845	java/lang/NumberFormatException
    //   4843	4851	845	java/lang/NumberFormatException
    //   4868	4877	845	java/lang/NumberFormatException
    //   4905	4916	845	java/lang/NumberFormatException
    //   4933	4941	845	java/lang/NumberFormatException
    //   4958	4969	845	java/lang/NumberFormatException
    //   4986	4996	845	java/lang/NumberFormatException
    //   5016	5027	845	java/lang/NumberFormatException
    //   5044	5054	845	java/lang/NumberFormatException
    //   5074	5085	845	java/lang/NumberFormatException
    //   5112	5122	845	java/lang/NumberFormatException
    //   208	217	1166	java/io/IOException
    //   302	313	1166	java/io/IOException
    //   330	340	1166	java/io/IOException
    //   357	365	1166	java/io/IOException
    //   382	393	1166	java/io/IOException
    //   410	419	1166	java/io/IOException
    //   443	454	1166	java/io/IOException
    //   471	480	1166	java/io/IOException
    //   503	514	1166	java/io/IOException
    //   536	547	1166	java/io/IOException
    //   564	574	1166	java/io/IOException
    //   598	609	1166	java/io/IOException
    //   626	634	1166	java/io/IOException
    //   656	666	1166	java/io/IOException
    //   683	691	1166	java/io/IOException
    //   708	719	1166	java/io/IOException
    //   736	747	1166	java/io/IOException
    //   764	779	1166	java/io/IOException
    //   799	810	1166	java/io/IOException
    //   827	842	1166	java/io/IOException
    //   1120	1131	1166	java/io/IOException
    //   1148	1163	1166	java/io/IOException
    //   1378	1389	1166	java/io/IOException
    //   1406	1421	1166	java/io/IOException
    //   1441	1452	1166	java/io/IOException
    //   1469	1480	1166	java/io/IOException
    //   1497	1512	1166	java/io/IOException
    //   1532	1543	1166	java/io/IOException
    //   1560	1575	1166	java/io/IOException
    //   1595	1606	1166	java/io/IOException
    //   1623	1638	1166	java/io/IOException
    //   1658	1669	1166	java/io/IOException
    //   1686	1701	1166	java/io/IOException
    //   1721	1732	1166	java/io/IOException
    //   1749	1764	1166	java/io/IOException
    //   1788	1798	1166	java/io/IOException
    //   1826	1836	1166	java/io/IOException
    //   1853	1861	1166	java/io/IOException
    //   1878	1889	1166	java/io/IOException
    //   1906	1918	1166	java/io/IOException
    //   1942	1950	1166	java/io/IOException
    //   1967	1978	1166	java/io/IOException
    //   1995	2007	1166	java/io/IOException
    //   2030	2041	1166	java/io/IOException
    //   2058	2066	1166	java/io/IOException
    //   2087	2097	1166	java/io/IOException
    //   2114	2123	1166	java/io/IOException
    //   2140	2148	1166	java/io/IOException
    //   2165	2174	1166	java/io/IOException
    //   2202	2213	1166	java/io/IOException
    //   2230	2238	1166	java/io/IOException
    //   2255	2266	1166	java/io/IOException
    //   2283	2291	1166	java/io/IOException
    //   2308	2319	1166	java/io/IOException
    //   2336	2346	1166	java/io/IOException
    //   2366	2377	1166	java/io/IOException
    //   2394	2404	1166	java/io/IOException
    //   2424	2435	1166	java/io/IOException
    //   2452	2460	1166	java/io/IOException
    //   2477	2488	1166	java/io/IOException
    //   2505	2515	1166	java/io/IOException
    //   2535	2546	1166	java/io/IOException
    //   2563	2573	1166	java/io/IOException
    //   2593	2604	1166	java/io/IOException
    //   2621	2629	1166	java/io/IOException
    //   2646	2657	1166	java/io/IOException
    //   2674	2684	1166	java/io/IOException
    //   2704	2715	1166	java/io/IOException
    //   2732	2742	1166	java/io/IOException
    //   2762	2773	1166	java/io/IOException
    //   2790	2798	1166	java/io/IOException
    //   2815	2826	1166	java/io/IOException
    //   2843	2853	1166	java/io/IOException
    //   2873	2884	1166	java/io/IOException
    //   2901	2911	1166	java/io/IOException
    //   2931	2942	1166	java/io/IOException
    //   2959	2967	1166	java/io/IOException
    //   2984	2995	1166	java/io/IOException
    //   3012	3022	1166	java/io/IOException
    //   3042	3053	1166	java/io/IOException
    //   3070	3080	1166	java/io/IOException
    //   3100	3111	1166	java/io/IOException
    //   3128	3136	1166	java/io/IOException
    //   3157	3167	1166	java/io/IOException
    //   3184	3193	1166	java/io/IOException
    //   3210	3218	1166	java/io/IOException
    //   3235	3244	1166	java/io/IOException
    //   3272	3283	1166	java/io/IOException
    //   3300	3308	1166	java/io/IOException
    //   3325	3336	1166	java/io/IOException
    //   3353	3361	1166	java/io/IOException
    //   3378	3389	1166	java/io/IOException
    //   3406	3416	1166	java/io/IOException
    //   3436	3447	1166	java/io/IOException
    //   3464	3474	1166	java/io/IOException
    //   3494	3505	1166	java/io/IOException
    //   3522	3530	1166	java/io/IOException
    //   3547	3558	1166	java/io/IOException
    //   3575	3585	1166	java/io/IOException
    //   3605	3616	1166	java/io/IOException
    //   3633	3643	1166	java/io/IOException
    //   3663	3674	1166	java/io/IOException
    //   3691	3699	1166	java/io/IOException
    //   3716	3727	1166	java/io/IOException
    //   3744	3754	1166	java/io/IOException
    //   3774	3785	1166	java/io/IOException
    //   3802	3812	1166	java/io/IOException
    //   3832	3843	1166	java/io/IOException
    //   3860	3868	1166	java/io/IOException
    //   3885	3896	1166	java/io/IOException
    //   3913	3923	1166	java/io/IOException
    //   3943	3954	1166	java/io/IOException
    //   3971	3981	1166	java/io/IOException
    //   4001	4012	1166	java/io/IOException
    //   4029	4037	1166	java/io/IOException
    //   4058	4068	1166	java/io/IOException
    //   4085	4094	1166	java/io/IOException
    //   4111	4119	1166	java/io/IOException
    //   4136	4145	1166	java/io/IOException
    //   4173	4184	1166	java/io/IOException
    //   4201	4209	1166	java/io/IOException
    //   4226	4237	1166	java/io/IOException
    //   4254	4262	1166	java/io/IOException
    //   4279	4290	1166	java/io/IOException
    //   4307	4317	1166	java/io/IOException
    //   4337	4348	1166	java/io/IOException
    //   4365	4375	1166	java/io/IOException
    //   4395	4406	1166	java/io/IOException
    //   4423	4431	1166	java/io/IOException
    //   4448	4459	1166	java/io/IOException
    //   4476	4486	1166	java/io/IOException
    //   4506	4517	1166	java/io/IOException
    //   4534	4544	1166	java/io/IOException
    //   4564	4575	1166	java/io/IOException
    //   4592	4600	1166	java/io/IOException
    //   4617	4628	1166	java/io/IOException
    //   4645	4655	1166	java/io/IOException
    //   4675	4686	1166	java/io/IOException
    //   4703	4713	1166	java/io/IOException
    //   4733	4744	1166	java/io/IOException
    //   4761	4769	1166	java/io/IOException
    //   4790	4800	1166	java/io/IOException
    //   4817	4826	1166	java/io/IOException
    //   4843	4851	1166	java/io/IOException
    //   4868	4877	1166	java/io/IOException
    //   4905	4916	1166	java/io/IOException
    //   4933	4941	1166	java/io/IOException
    //   4958	4969	1166	java/io/IOException
    //   4986	4996	1166	java/io/IOException
    //   5016	5027	1166	java/io/IOException
    //   5044	5054	1166	java/io/IOException
    //   5074	5085	1166	java/io/IOException
    //   5112	5122	1166	java/io/IOException
    //   208	217	1275	org/xmlpull/v1/XmlPullParserException
    //   302	313	1275	org/xmlpull/v1/XmlPullParserException
    //   330	340	1275	org/xmlpull/v1/XmlPullParserException
    //   357	365	1275	org/xmlpull/v1/XmlPullParserException
    //   382	393	1275	org/xmlpull/v1/XmlPullParserException
    //   410	419	1275	org/xmlpull/v1/XmlPullParserException
    //   443	454	1275	org/xmlpull/v1/XmlPullParserException
    //   471	480	1275	org/xmlpull/v1/XmlPullParserException
    //   503	514	1275	org/xmlpull/v1/XmlPullParserException
    //   536	547	1275	org/xmlpull/v1/XmlPullParserException
    //   564	574	1275	org/xmlpull/v1/XmlPullParserException
    //   598	609	1275	org/xmlpull/v1/XmlPullParserException
    //   626	634	1275	org/xmlpull/v1/XmlPullParserException
    //   656	666	1275	org/xmlpull/v1/XmlPullParserException
    //   683	691	1275	org/xmlpull/v1/XmlPullParserException
    //   708	719	1275	org/xmlpull/v1/XmlPullParserException
    //   736	747	1275	org/xmlpull/v1/XmlPullParserException
    //   764	779	1275	org/xmlpull/v1/XmlPullParserException
    //   799	810	1275	org/xmlpull/v1/XmlPullParserException
    //   827	842	1275	org/xmlpull/v1/XmlPullParserException
    //   881	887	1275	org/xmlpull/v1/XmlPullParserException
    //   904	934	1275	org/xmlpull/v1/XmlPullParserException
    //   1120	1131	1275	org/xmlpull/v1/XmlPullParserException
    //   1148	1163	1275	org/xmlpull/v1/XmlPullParserException
    //   1202	1208	1275	org/xmlpull/v1/XmlPullParserException
    //   1225	1255	1275	org/xmlpull/v1/XmlPullParserException
    //   1378	1389	1275	org/xmlpull/v1/XmlPullParserException
    //   1406	1421	1275	org/xmlpull/v1/XmlPullParserException
    //   1441	1452	1275	org/xmlpull/v1/XmlPullParserException
    //   1469	1480	1275	org/xmlpull/v1/XmlPullParserException
    //   1497	1512	1275	org/xmlpull/v1/XmlPullParserException
    //   1532	1543	1275	org/xmlpull/v1/XmlPullParserException
    //   1560	1575	1275	org/xmlpull/v1/XmlPullParserException
    //   1595	1606	1275	org/xmlpull/v1/XmlPullParserException
    //   1623	1638	1275	org/xmlpull/v1/XmlPullParserException
    //   1658	1669	1275	org/xmlpull/v1/XmlPullParserException
    //   1686	1701	1275	org/xmlpull/v1/XmlPullParserException
    //   1721	1732	1275	org/xmlpull/v1/XmlPullParserException
    //   1749	1764	1275	org/xmlpull/v1/XmlPullParserException
    //   1788	1798	1275	org/xmlpull/v1/XmlPullParserException
    //   1826	1836	1275	org/xmlpull/v1/XmlPullParserException
    //   1853	1861	1275	org/xmlpull/v1/XmlPullParserException
    //   1878	1889	1275	org/xmlpull/v1/XmlPullParserException
    //   1906	1918	1275	org/xmlpull/v1/XmlPullParserException
    //   1942	1950	1275	org/xmlpull/v1/XmlPullParserException
    //   1967	1978	1275	org/xmlpull/v1/XmlPullParserException
    //   1995	2007	1275	org/xmlpull/v1/XmlPullParserException
    //   2030	2041	1275	org/xmlpull/v1/XmlPullParserException
    //   2058	2066	1275	org/xmlpull/v1/XmlPullParserException
    //   2087	2097	1275	org/xmlpull/v1/XmlPullParserException
    //   2114	2123	1275	org/xmlpull/v1/XmlPullParserException
    //   2140	2148	1275	org/xmlpull/v1/XmlPullParserException
    //   2165	2174	1275	org/xmlpull/v1/XmlPullParserException
    //   2202	2213	1275	org/xmlpull/v1/XmlPullParserException
    //   2230	2238	1275	org/xmlpull/v1/XmlPullParserException
    //   2255	2266	1275	org/xmlpull/v1/XmlPullParserException
    //   2283	2291	1275	org/xmlpull/v1/XmlPullParserException
    //   2308	2319	1275	org/xmlpull/v1/XmlPullParserException
    //   2336	2346	1275	org/xmlpull/v1/XmlPullParserException
    //   2366	2377	1275	org/xmlpull/v1/XmlPullParserException
    //   2394	2404	1275	org/xmlpull/v1/XmlPullParserException
    //   2424	2435	1275	org/xmlpull/v1/XmlPullParserException
    //   2452	2460	1275	org/xmlpull/v1/XmlPullParserException
    //   2477	2488	1275	org/xmlpull/v1/XmlPullParserException
    //   2505	2515	1275	org/xmlpull/v1/XmlPullParserException
    //   2535	2546	1275	org/xmlpull/v1/XmlPullParserException
    //   2563	2573	1275	org/xmlpull/v1/XmlPullParserException
    //   2593	2604	1275	org/xmlpull/v1/XmlPullParserException
    //   2621	2629	1275	org/xmlpull/v1/XmlPullParserException
    //   2646	2657	1275	org/xmlpull/v1/XmlPullParserException
    //   2674	2684	1275	org/xmlpull/v1/XmlPullParserException
    //   2704	2715	1275	org/xmlpull/v1/XmlPullParserException
    //   2732	2742	1275	org/xmlpull/v1/XmlPullParserException
    //   2762	2773	1275	org/xmlpull/v1/XmlPullParserException
    //   2790	2798	1275	org/xmlpull/v1/XmlPullParserException
    //   2815	2826	1275	org/xmlpull/v1/XmlPullParserException
    //   2843	2853	1275	org/xmlpull/v1/XmlPullParserException
    //   2873	2884	1275	org/xmlpull/v1/XmlPullParserException
    //   2901	2911	1275	org/xmlpull/v1/XmlPullParserException
    //   2931	2942	1275	org/xmlpull/v1/XmlPullParserException
    //   2959	2967	1275	org/xmlpull/v1/XmlPullParserException
    //   2984	2995	1275	org/xmlpull/v1/XmlPullParserException
    //   3012	3022	1275	org/xmlpull/v1/XmlPullParserException
    //   3042	3053	1275	org/xmlpull/v1/XmlPullParserException
    //   3070	3080	1275	org/xmlpull/v1/XmlPullParserException
    //   3100	3111	1275	org/xmlpull/v1/XmlPullParserException
    //   3128	3136	1275	org/xmlpull/v1/XmlPullParserException
    //   3157	3167	1275	org/xmlpull/v1/XmlPullParserException
    //   3184	3193	1275	org/xmlpull/v1/XmlPullParserException
    //   3210	3218	1275	org/xmlpull/v1/XmlPullParserException
    //   3235	3244	1275	org/xmlpull/v1/XmlPullParserException
    //   3272	3283	1275	org/xmlpull/v1/XmlPullParserException
    //   3300	3308	1275	org/xmlpull/v1/XmlPullParserException
    //   3325	3336	1275	org/xmlpull/v1/XmlPullParserException
    //   3353	3361	1275	org/xmlpull/v1/XmlPullParserException
    //   3378	3389	1275	org/xmlpull/v1/XmlPullParserException
    //   3406	3416	1275	org/xmlpull/v1/XmlPullParserException
    //   3436	3447	1275	org/xmlpull/v1/XmlPullParserException
    //   3464	3474	1275	org/xmlpull/v1/XmlPullParserException
    //   3494	3505	1275	org/xmlpull/v1/XmlPullParserException
    //   3522	3530	1275	org/xmlpull/v1/XmlPullParserException
    //   3547	3558	1275	org/xmlpull/v1/XmlPullParserException
    //   3575	3585	1275	org/xmlpull/v1/XmlPullParserException
    //   3605	3616	1275	org/xmlpull/v1/XmlPullParserException
    //   3633	3643	1275	org/xmlpull/v1/XmlPullParserException
    //   3663	3674	1275	org/xmlpull/v1/XmlPullParserException
    //   3691	3699	1275	org/xmlpull/v1/XmlPullParserException
    //   3716	3727	1275	org/xmlpull/v1/XmlPullParserException
    //   3744	3754	1275	org/xmlpull/v1/XmlPullParserException
    //   3774	3785	1275	org/xmlpull/v1/XmlPullParserException
    //   3802	3812	1275	org/xmlpull/v1/XmlPullParserException
    //   3832	3843	1275	org/xmlpull/v1/XmlPullParserException
    //   3860	3868	1275	org/xmlpull/v1/XmlPullParserException
    //   3885	3896	1275	org/xmlpull/v1/XmlPullParserException
    //   3913	3923	1275	org/xmlpull/v1/XmlPullParserException
    //   3943	3954	1275	org/xmlpull/v1/XmlPullParserException
    //   3971	3981	1275	org/xmlpull/v1/XmlPullParserException
    //   4001	4012	1275	org/xmlpull/v1/XmlPullParserException
    //   4029	4037	1275	org/xmlpull/v1/XmlPullParserException
    //   4058	4068	1275	org/xmlpull/v1/XmlPullParserException
    //   4085	4094	1275	org/xmlpull/v1/XmlPullParserException
    //   4111	4119	1275	org/xmlpull/v1/XmlPullParserException
    //   4136	4145	1275	org/xmlpull/v1/XmlPullParserException
    //   4173	4184	1275	org/xmlpull/v1/XmlPullParserException
    //   4201	4209	1275	org/xmlpull/v1/XmlPullParserException
    //   4226	4237	1275	org/xmlpull/v1/XmlPullParserException
    //   4254	4262	1275	org/xmlpull/v1/XmlPullParserException
    //   4279	4290	1275	org/xmlpull/v1/XmlPullParserException
    //   4307	4317	1275	org/xmlpull/v1/XmlPullParserException
    //   4337	4348	1275	org/xmlpull/v1/XmlPullParserException
    //   4365	4375	1275	org/xmlpull/v1/XmlPullParserException
    //   4395	4406	1275	org/xmlpull/v1/XmlPullParserException
    //   4423	4431	1275	org/xmlpull/v1/XmlPullParserException
    //   4448	4459	1275	org/xmlpull/v1/XmlPullParserException
    //   4476	4486	1275	org/xmlpull/v1/XmlPullParserException
    //   4506	4517	1275	org/xmlpull/v1/XmlPullParserException
    //   4534	4544	1275	org/xmlpull/v1/XmlPullParserException
    //   4564	4575	1275	org/xmlpull/v1/XmlPullParserException
    //   4592	4600	1275	org/xmlpull/v1/XmlPullParserException
    //   4617	4628	1275	org/xmlpull/v1/XmlPullParserException
    //   4645	4655	1275	org/xmlpull/v1/XmlPullParserException
    //   4675	4686	1275	org/xmlpull/v1/XmlPullParserException
    //   4703	4713	1275	org/xmlpull/v1/XmlPullParserException
    //   4733	4744	1275	org/xmlpull/v1/XmlPullParserException
    //   4761	4769	1275	org/xmlpull/v1/XmlPullParserException
    //   4790	4800	1275	org/xmlpull/v1/XmlPullParserException
    //   4817	4826	1275	org/xmlpull/v1/XmlPullParserException
    //   4843	4851	1275	org/xmlpull/v1/XmlPullParserException
    //   4868	4877	1275	org/xmlpull/v1/XmlPullParserException
    //   4905	4916	1275	org/xmlpull/v1/XmlPullParserException
    //   4933	4941	1275	org/xmlpull/v1/XmlPullParserException
    //   4958	4969	1275	org/xmlpull/v1/XmlPullParserException
    //   4986	4996	1275	org/xmlpull/v1/XmlPullParserException
    //   5016	5027	1275	org/xmlpull/v1/XmlPullParserException
    //   5044	5054	1275	org/xmlpull/v1/XmlPullParserException
    //   5074	5085	1275	org/xmlpull/v1/XmlPullParserException
    //   5112	5122	1275	org/xmlpull/v1/XmlPullParserException
    //   86	91	5142	org/xmlpull/v1/XmlPullParserException
    //   109	133	5142	org/xmlpull/v1/XmlPullParserException
    //   151	160	5142	org/xmlpull/v1/XmlPullParserException
    //   265	274	5142	org/xmlpull/v1/XmlPullParserException
    //   109	133	5149	java/io/IOException
    //   151	160	5149	java/io/IOException
    //   265	274	5162	java/io/IOException
    //   109	133	5167	java/lang/NumberFormatException
    //   151	160	5167	java/lang/NumberFormatException
    //   265	274	5176	java/lang/NumberFormatException
  }
  
  private void a(String paramString, int paramInt)
  {
    for (int i = 1;; i = 0) {
      for (;;)
      {
        try
        {
          localObject = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(paramString.getBytes("utf-8")));
          str1 = ((Document)localObject).getElementsByTagName("location").item(0).getFirstChild().getNodeValue();
          str2 = ((Document)localObject).getElementsByTagName("title").item(0).getFirstChild().getNodeValue();
          if (((Document)localObject).getElementsByTagName("iconUrl").item(0).getFirstChild() != null)
          {
            paramString = ((Document)localObject).getElementsByTagName("iconUrl").item(0).getFirstChild().getNodeValue();
            localObject = ((Document)localObject).getElementsByTagName("backupUrl").item(0).getFirstChild().getNodeValue();
            if ("aio".equals(str1))
            {
              if (str1 != null)
              {
                if (str2 == null) {
                  break label440;
                }
                paramInt = 1;
                continue;
                if (((i & paramInt) != 0) && (!"".equals(str1)) && (!"".equals(str2)) && (!"".equals(paramString)) && (localObject != null) && (!"".equals(localObject))) {
                  SharedPreUtils.b(((QQAppInterface)getAppRuntime()).getCurrentAccountUin()).edit().putBoolean("aio_jump_lightalk_red_dot", true).commit();
                }
              }
              AIOJumpLightalkConfig.a(str1, str2, paramString, (String)localObject, jdField_a_of_type_JavaLangString);
              return;
            }
            if ("profile".equals(str1))
            {
              PCJumpLightalkConfig.a(str1, str2, paramString, (String)localObject, jdField_a_of_type_JavaLangString);
              return;
            }
          }
        }
        catch (Exception paramString)
        {
          Object localObject;
          String str1;
          String str2;
          paramString.printStackTrace();
          if (QLog.isColorLevel())
          {
            QLog.i("SPLASH_ConfigServlet", 2, "parse jump_lightalk xml  exception : " + paramString.getMessage());
            return;
            if ("call_detail".equals(str1))
            {
              CLJumpLightalkConfig.a(str1, str2, paramString, (String)localObject, jdField_a_of_type_JavaLangString);
              return;
            }
            if ("call_list".equals(str1))
            {
              CallTabLightalkConfig.a(str1, str2, paramString, (String)localObject, jdField_a_of_type_JavaLangString);
              return;
            }
            if ("calling".equals(str1))
            {
              QQCallLightalkConfig.a(str1, str2, paramString, (String)localObject, jdField_a_of_type_JavaLangString);
              return;
              paramString = "";
              continue;
              if (paramString == null) {
                break;
              }
              continue;
            }
          }
          return;
        }
        label440:
        paramInt = 0;
      }
    }
  }
  
  public static boolean a(PicAndAdConf paramPicAndAdConf, String paramString, Set paramSet)
  {
    boolean bool2 = false;
    for (;;)
    {
      Document localDocument;
      String str1;
      int i;
      long l1;
      String str2;
      String str3;
      int k;
      Object localObject;
      long l2;
      long l3;
      boolean bool1;
      try
      {
        localDocument = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(paramString.getBytes("utf-8")));
        NodeList localNodeList = localDocument.getElementsByTagName("pushbanner");
        str1 = "";
        i = 0;
        if (i < localNodeList.getLength())
        {
          l1 = Long.parseLong(localDocument.getElementsByTagName("channel").item(i).getFirstChild().getNodeValue());
          str2 = localDocument.getElementsByTagName("img").item(i).getFirstChild().getNodeValue();
          str3 = localDocument.getElementsByTagName("digest").item(i).getFirstChild().getNodeValue();
          k = Integer.parseInt(localDocument.getElementsByTagName("weight").item(i).getFirstChild().getNodeValue());
          localObject = localDocument.getElementsByTagName("md5").item(i).getFirstChild();
          if (localObject != null) {
            str1 = ((Node)localObject).getNodeValue();
          }
          localObject = localDocument.getElementsByTagName("end").item(i).getFirstChild().getNodeValue();
          SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
          l2 = localSimpleDateFormat.parse((String)localObject).getTime();
          l3 = localSimpleDateFormat.parse(localDocument.getElementsByTagName("begin").item(i).getFirstChild().getNodeValue()).getTime();
          if (System.currentTimeMillis() > l2)
          {
            if (QLog.isColorLevel()) {
              QLog.i("SPLASH_ConfigServlet", 2, "parseXML | NearbyBanner out of date, cid = " + l1 + ", endTime = " + (String)localObject);
            }
          }
          else if (str1.length() < 15)
          {
            if (!QLog.isColorLevel()) {
              break label758;
            }
            QLog.i("SPLASH_ConfigServlet", 2, "parseXML | NearbyBanner md5 length < 15, cid = " + l1);
          }
        }
      }
      catch (Exception paramPicAndAdConf)
      {
        bool1 = bool2;
        if (QLog.isColorLevel())
        {
          QLog.i("SPLASH_ConfigServlet", 2, "parseXML | NearbyBanner parse exception,", paramPicAndAdConf);
          bool1 = bool2;
        }
      }
      for (;;)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "parseNearbyBannerXml,result = " + bool1 + ",bannerContent =" + paramString);
        }
        return bool1;
        if ((paramSet != null) && (paramSet.contains(l1 + str1)))
        {
          if (!QLog.isColorLevel()) {
            break;
          }
          QLog.i("SPLASH_ConfigServlet", 2, "parseXML | NearbyBanner " + l1 + " had been closed, throw it");
          break;
        }
        localObject = new StringBuffer();
        int j = 0;
        while (j < localDocument.getElementsByTagName("url").item(i).getChildNodes().getLength())
        {
          ((StringBuffer)localObject).append(localDocument.getElementsByTagName("url").item(i).getChildNodes().item(j).getNodeValue());
          j += 1;
        }
        paramPicAndAdConf.a(paramPicAndAdConf.a(l1, str3, (byte)3, str2, ((StringBuffer)localObject).toString(), BaseApplication.getContext().getFilesDir().getAbsolutePath() + "/" + "NearbyBannerPic" + "/" + str1, l3 + "|" + l2, (short)k, str1));
        NearbySPUtil.a(jdField_a_of_type_JavaLangString, "has_new_banner", Boolean.valueOf(true));
        break;
        bool1 = true;
      }
      label758:
      i += 1;
    }
  }
  
  private static byte[] a(ConfigurationService.ReqGetConfig paramReqGetConfig)
  {
    paramReqGetConfig = paramReqGetConfig.toByteArray();
    long l = paramReqGetConfig.length;
    byte[] arrayOfByte = new byte[(int)l + 4];
    PkgTools.a(arrayOfByte, 0, 4L + l);
    PkgTools.a(arrayOfByte, 4, paramReqGetConfig, (int)l);
    return arrayOfByte;
  }
  
  public static byte[] a(byte[] paramArrayOfByte)
  {
    int i = paramArrayOfByte.length - 4;
    byte[] arrayOfByte = new byte[i];
    PkgTools.a(arrayOfByte, 0, paramArrayOfByte, 4, i);
    return arrayOfByte;
  }
  
  private void aa(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    try
    {
      SharedPreferences.Editor localEditor = paramQQAppInterface.getApp().getSharedPreferences("NearbyActivity.nearByTabUrl", 4).edit();
      if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
      {
        int i = 0;
        if (i < paramConfig.content_list.size())
        {
          Object localObject = ((String)paramConfig.content_list.get(i)).trim();
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "receiveAllConfigs|type: 129,content: " + (String)localObject + ",version: " + paramConfig.version.get());
          }
          int j = paramConfig.version.get();
          if (j != SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_nowlive_tab_config_version", jdField_a_of_type_JavaLangString))
          {
            boolean bool = TextUtils.isEmpty((CharSequence)localObject);
            if (!bool) {
              for (;;)
              {
                try
                {
                  localObject = new JSONObject((String)localObject);
                  String str1 = ((JSONObject)localObject).getJSONObject("android").getString("url");
                  String str2 = ((JSONObject)localObject).getJSONObject("android").getString("menuCell_startLive");
                  String str3 = ((JSONObject)localObject).getJSONObject("android").getString("menuCell_personalCenter");
                  String str4 = ((JSONObject)localObject).getJSONObject("android").getString("menuCell_help");
                  localEditor.putString("nearByTabUrl", str1);
                  localEditor.putString("menuCell_startLive", str2);
                  localEditor.putString("menuCell_personalCenter", str3);
                  localEditor.putString("menuCell_help", str4);
                  if (Build.VERSION.SDK_INT >= 9) {
                    continue;
                  }
                  localEditor.commit();
                  if (QLog.isColorLevel()) {
                    QLog.e("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "received NearbyActivity.nearByTabUrl " + ((JSONObject)localObject).getJSONObject("android"));
                  }
                }
                catch (JSONException localJSONException)
                {
                  if (!QLog.isColorLevel()) {
                    continue;
                  }
                  QLog.e("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "received JSONException in get NearbyActivity.nearByTabUrl");
                  continue;
                }
                SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_nowlive_tab_config_version", jdField_a_of_type_JavaLangString, j);
                i += 1;
                break;
                localEditor.apply();
              }
            }
          }
        }
        else
        {
          return;
        }
      }
    }
    catch (Exception paramQQAppInterface)
    {
      if (QLog.isColorLevel()) {
        QLog.e("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "received change machine config error,cmd : 129" + paramQQAppInterface.toString());
      }
    }
    do
    {
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.d("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "received CHNAGE_MACHINE_CONFIG IGNORE THIS ACTION  because of SAME VERSION ");
      break;
    } while (!QLog.isColorLevel());
    QLog.d("SPLASH_ConfigServletQ.nearby.tag_nearby_config", 2, "receiveAllConfigs|type: 129,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  private void ab(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int i;
      try
      {
        ChangeMachineManager localChangeMachineManager = (ChangeMachineManager)paramQQAppInterface.getManager(182);
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          i = 0;
          if (i < paramConfig.content_list.size())
          {
            String str = ((String)paramConfig.content_list.get(i)).trim();
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 120,content: " + str + ",version: " + paramConfig.version.get());
            }
            int j = paramConfig.version.get();
            if ((j != SharedPreUtils.a(paramQQAppInterface.getApp(), "change_machine_version", jdField_a_of_type_JavaLangString)) && (!TextUtils.isEmpty(str)))
            {
              if (BaseApplicationImpl.isFirstLogin) {
                localChangeMachineManager.a(str);
              }
              SharedPreUtils.a(paramQQAppInterface.getApp(), "change_machine_version", jdField_a_of_type_JavaLangString, j);
            }
            else if (QLog.isColorLevel())
            {
              QLog.d("SPLASH_ConfigServlet", 2, "received CHNAGE_MACHINE_CONFIG IGNORE THIS ACTION  because of SAME VERSION ");
            }
          }
        }
      }
      catch (Exception paramQQAppInterface)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServlet", 2, "received change machine config error,cmd : 120" + paramQQAppInterface.toString());
        }
      }
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 120,content_list is empty ,version: " + paramConfig.version.get());
      return;
      i += 1;
    }
  }
  
  private void ac(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      try
      {
        j = paramConfig.version.get();
        k = SharedPreUtils.a(paramQQAppInterface.getApp(), "change_machine_version", jdField_a_of_type_JavaLangString);
        if (paramConfig.msg_content_list == null) {
          break label262;
        }
        i = paramConfig.msg_content_list.size();
        if (!QLog.isColorLevel()) {
          continue;
        }
        QLog.d("SPLASH_ConfigServlet", 2, String.format("handleNearbyVideoChatConfig, serverVersion[%s], localVersion[%s], size[%s]", new Object[] { Integer.valueOf(j), Integer.valueOf(k), Integer.valueOf(i) }));
      }
      catch (Exception paramQQAppInterface)
      {
        int j;
        int k;
        NearbyVideoChatManager localNearbyVideoChatManager;
        if (!QLog.isColorLevel()) {
          break label261;
        }
        QLog.e("SPLASH_ConfigServlet", 2, "received handleNearbyVideoChatConfig error,cmd : 195", paramQQAppInterface);
        return;
        if (!QLog.isColorLevel()) {
          break label261;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: handleNearbyVideoChatConfig null");
        return;
        localNearbyVideoChatManager.a("");
        if (!QLog.isColorLevel()) {
          break label261;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 195,content_list is empty ,version: " + paramConfig.version.get());
        return;
        if (j != k) {
          continue;
        }
      }
      localNearbyVideoChatManager = (NearbyVideoChatManager)paramQQAppInterface.getManager(223);
      if (i > 0)
      {
        paramConfig = b(paramConfig, k, 195);
        localNearbyVideoChatManager.a(paramConfig);
        if (!TextUtils.isEmpty(paramConfig))
        {
          SharedPreUtils.a(paramQQAppInterface.getApp(), "change_machine_version", jdField_a_of_type_JavaLangString, j);
          if (!QLog.isColorLevel()) {
            break label261;
          }
          QLog.d("SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: handleNearbyVideoChatConfig, content: \n" + paramConfig);
          return;
        }
      }
      label261:
      return;
      label262:
      int i = -1;
    }
  }
  
  private void ad(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      try
      {
        j = paramConfig.version.get();
        k = SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_auth_video_config_version", jdField_a_of_type_JavaLangString);
        if (paramConfig.msg_content_list == null) {
          break label241;
        }
        i = paramConfig.msg_content_list.size();
        if (!QLog.isColorLevel()) {
          continue;
        }
        QLog.d("SPLASH_ConfigServlet", 2, String.format("handleNearbyAuthVideoConfig, serverVersion[%s], localVersion[%s], size[%s]", new Object[] { Integer.valueOf(j), Integer.valueOf(k), Integer.valueOf(i) }));
      }
      catch (Exception paramQQAppInterface)
      {
        int j;
        int k;
        if (!QLog.isColorLevel()) {
          break label240;
        }
        QLog.e("SPLASH_ConfigServlet", 2, "received handleNearbyAuthVideoConfig error,cmd : 227", paramQQAppInterface);
        return;
        if (!QLog.isColorLevel()) {
          break label240;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: handleNearbyAuthVideoConfig null");
        return;
        if (!QLog.isColorLevel()) {
          break label240;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 227,content_list is empty ,version: " + paramConfig.version.get());
        return;
        if (j != k) {
          continue;
        }
      }
      if (i > 0)
      {
        paramConfig = b(paramConfig, k, 227);
        if (!TextUtils.isEmpty(paramConfig))
        {
          NearbyVideoUtils.a(paramConfig);
          SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_auth_video_config_version", jdField_a_of_type_JavaLangString, j);
          if (!QLog.isColorLevel()) {
            break label240;
          }
          QLog.d("SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: handleNearbyAuthVideoConfig, content: \n" + paramConfig);
          return;
        }
      }
      label240:
      return;
      label241:
      int i = -1;
    }
  }
  
  private void ae(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      try
      {
        j = paramConfig.version.get();
        k = SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_videochat_dialog_config_version", jdField_a_of_type_JavaLangString);
        if (paramConfig.msg_content_list == null) {
          break label251;
        }
        i = paramConfig.msg_content_list.size();
        if (!QLog.isColorLevel()) {
          continue;
        }
        QLog.d("SPLASH_ConfigServlet", 2, String.format("handleNearbyVideoChatDialogConfig, serverVersion[%s], localVersion[%s], size[%s]", new Object[] { Integer.valueOf(j), Integer.valueOf(k), Integer.valueOf(i) }));
      }
      catch (Exception paramQQAppInterface)
      {
        int j;
        int k;
        if (!QLog.isColorLevel()) {
          break label250;
        }
        QLog.e("SPLASH_ConfigServlet", 2, "received handleNearbyVideoChatDialogConfig error,cmd : 268", paramQQAppInterface);
        return;
        if (!QLog.isColorLevel()) {
          break label250;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: handleNearbyVideoChatDialogConfig null");
        return;
        if (!QLog.isColorLevel()) {
          break label250;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 268,content_list is empty ,version: " + paramConfig.version.get());
        return;
        if (j != k) {
          continue;
        }
      }
      if (i > 0)
      {
        paramConfig = b(paramConfig, k, 268);
        if (!TextUtils.isEmpty(paramConfig))
        {
          ((NearbyVideoChatManager)paramQQAppInterface.getManager(223)).c(paramConfig);
          SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_videochat_dialog_config_version", jdField_a_of_type_JavaLangString, j);
          if (!QLog.isColorLevel()) {
            break label250;
          }
          QLog.d("SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: handleNearbyVideoChatDialogConfig, content: \n" + paramConfig);
          return;
        }
      }
      label250:
      return;
      label251:
      int i = -1;
    }
  }
  
  private void af(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      try
      {
        j = paramConfig.version.get();
        k = SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_videochat_banner_config_version", jdField_a_of_type_JavaLangString);
        if (paramConfig.msg_content_list == null) {
          break label251;
        }
        i = paramConfig.msg_content_list.size();
        if (!QLog.isColorLevel()) {
          continue;
        }
        QLog.d("SPLASH_ConfigServlet", 2, String.format("handleNearbyVideoChatBannerConfig, serverVersion[%s], localVersion[%s], size[%s]", new Object[] { Integer.valueOf(j), Integer.valueOf(k), Integer.valueOf(i) }));
      }
      catch (Exception paramQQAppInterface)
      {
        int j;
        int k;
        if (!QLog.isColorLevel()) {
          break label250;
        }
        QLog.e("SPLASH_ConfigServlet", 2, "received handleNearbyVideoChatBannerConfig error,cmd : 269", paramQQAppInterface);
        return;
        if (!QLog.isColorLevel()) {
          break label250;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: handleNearbyVideoChatBannerConfig null");
        return;
        if (!QLog.isColorLevel()) {
          break label250;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 269,content_list is empty ,version: " + paramConfig.version.get());
        return;
        if (j != k) {
          continue;
        }
      }
      if (i > 0)
      {
        paramConfig = b(paramConfig, k, 269);
        if (!TextUtils.isEmpty(paramConfig))
        {
          ((NearbyVideoChatManager)paramQQAppInterface.getManager(223)).b(paramConfig);
          SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_videochat_banner_config_version", jdField_a_of_type_JavaLangString, j);
          if (!QLog.isColorLevel()) {
            break label250;
          }
          QLog.d("SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: handleNearbyVideoChatBannerConfig, content: \n" + paramConfig);
          return;
        }
      }
      label250:
      return;
      label251:
      int i = -1;
    }
  }
  
  private void ag(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
    {
      paramQQAppInterface = (PhoneContactManagerImp)paramQQAppInterface.getManager(10);
      if (paramConfig.content_list.size() < 0)
      {
        str = (String)paramConfig.content_list.get(0);
        i = paramConfig.version.get();
        j = paramQQAppInterface.e();
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 97,content: " + str + ",version: " + paramConfig.version.get());
        }
        if ((i != j) || (paramConfig.content_list.size() > 0)) {
          paramQQAppInterface.a(i, str);
        }
      }
    }
    while (!QLog.isColorLevel())
    {
      String str;
      int i;
      int j;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 97,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  private void ah(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = SharedPreUtils.a(paramQQAppInterface.getApp(), "push_open_notify_version", jdField_a_of_type_JavaLangString);
    int j = paramConfig.version.get();
    if (QLog.isColorLevel()) {
      QLog.d("PushOpenNotify", 2, "handlePushOpenNotifyConfig, version: " + j + " oldVersion: " + i);
    }
    if (i == j) {}
    String str;
    do
    {
      return;
      while (!paramConfig.hasNext())
      {
        do
        {
          SharedPreUtils.a(getAppRuntime().getApplication(), "push_open_notify_version", jdField_a_of_type_JavaLangString, j);
        } while ((paramConfig.content_list == null) || (paramConfig.content_list.size() <= 0));
        paramConfig = paramConfig.content_list.get().iterator();
      }
      str = (String)paramConfig.next();
      if (QLog.isColorLevel()) {
        QLog.i("PushOpenNotify", 2, "config :" + str);
      }
    } while (TextUtils.isEmpty(str));
    MsgNotifyPushDialog.a(paramQQAppInterface, str, false);
    PreferenceManager.getDefaultSharedPreferences(paramQQAppInterface.getApp()).edit().putString(paramQQAppInterface.c() + "_" + "push_open_notify_xml", str).commit();
  }
  
  private void ai(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    try
    {
      i = paramConfig.version.get();
      localBabyQHandler = (BabyQHandler)paramQQAppInterface.a(53);
      j = localBabyQHandler.a(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount());
      if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
      {
        paramQQAppInterface = (String)paramConfig.content_list.get(0);
        if (QLog.isColorLevel()) {
          QLog.d("babyqConfig", 2, "received BabyQPlusPanelConfig configVersion:" + i + " ,localVersion:" + j + " ,configContent" + paramQQAppInterface);
        }
        if (i != j)
        {
          localBabyQHandler.a(i, paramQQAppInterface);
          return;
        }
        localBabyQHandler.a(false, false);
        return;
      }
    }
    catch (Exception paramQQAppInterface)
    {
      int i;
      BabyQHandler localBabyQHandler;
      int j;
      if (QLog.isColorLevel())
      {
        QLog.e("babyqConfig", 2, "received BabyQPlusPanelConfig error", paramQQAppInterface);
        return;
        if (i == j) {
          if (QLog.isColorLevel()) {
            QLog.d("babyqConfig", 2, "received BabyQPlusPanelConfig, content_list is empty, ignored because of SAME VERSION");
          }
        }
        for (;;)
        {
          localBabyQHandler.a(false, false);
          return;
          if (QLog.isColorLevel()) {
            QLog.d("babyqConfig", 2, "received BabyQPlusPanelConfig, content_list is empty, use default config");
          }
        }
      }
    }
  }
  
  private void aj(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "handleRespAddContactsViewConfig|type= " + paramConfig.type.get());
    }
    int j = paramConfig.version.get();
    if (j == SharedPreUtils.ac(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin())) {
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "AddContactsViewConfig serverVersion is equals to localVersion ");
      }
    }
    do
    {
      do
      {
        return;
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "AddContactsViewConfig contentlist:" + paramConfig.content_list);
        }
      } while ((paramConfig.content_list == null) || (paramConfig.content_list.size() <= 0));
      paramConfig = (String)paramConfig.content_list.get(0);
    } while (paramConfig == null);
    XmlPullParser localXmlPullParser = Xml.newPullParser();
    ConfigurationService.Config localConfig = null;
    for (;;)
    {
      try
      {
        localXmlPullParser.setInput(new ByteArrayInputStream(paramConfig.getBytes()), "utf-8");
        i = localXmlPullParser.getEventType();
      }
      catch (Exception paramQQAppInterface) {}
      int i = localXmlPullParser.next();
      localConfig = paramConfig;
      break label357;
      String str = localXmlPullParser.getName();
      paramConfig = localConfig;
      if (str != null)
      {
        paramConfig = localConfig;
        if (str.equalsIgnoreCase("entrencelist"))
        {
          paramConfig = localXmlPullParser.nextText();
          continue;
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "AddContactsView entrencelist:" + localConfig);
          }
          if ((localConfig == null) || (localConfig.length() <= 0)) {
            break;
          }
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "success");
          }
          SharedPreUtils.c(paramQQAppInterface.getApp(), j, paramQQAppInterface.getCurrentAccountUin(), localConfig);
          return;
          if (!QLog.isColorLevel()) {
            break;
          }
          QLog.e("SPLASH_ConfigServlet", 2, "AddContactsViewConfig appear exception:" + paramQQAppInterface.toString());
          return;
          label357:
          if (i != 1)
          {
            paramConfig = localConfig;
            switch (i)
            {
            }
            paramConfig = localConfig;
          }
        }
      }
    }
  }
  
  private void ak(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    ConfigurationService.Config localConfig = null;
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "handleRespClassicHeadConfig|type= " + paramConfig.type.get());
    }
    int j = paramConfig.version.get();
    if (j == SharedPreUtils.ad(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin())) {
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "ClassicHeadConfig serverVersion is equals to localVersion ");
      }
    }
    label81:
    do
    {
      break label81;
      break label81;
      do
      {
        return;
      } while ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0));
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "ClassicHeadConfig size:" + paramConfig.msg_content_list.size() + "ClassicHeadConfig content:" + paramConfig.msg_content_list.get(0));
      }
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
    } while (paramConfig == null);
    if (paramConfig.compress.get() == 1)
    {
      paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
      if (paramConfig == null) {}
    }
    for (;;)
    {
      XmlPullParser localXmlPullParser;
      int i;
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (paramConfig == null) {
          break label81;
        }
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "ClassicHead xmlContent = " + paramConfig);
        }
        localXmlPullParser = Xml.newPullParser();
        try
        {
          localXmlPullParser.setInput(new ByteArrayInputStream(paramConfig.getBytes()), "utf-8");
          i = localXmlPullParser.getEventType();
        }
        catch (Exception paramQQAppInterface) {}
        i = localXmlPullParser.next();
        localConfig = paramConfig;
      }
      catch (Throwable paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "Throwable:" + paramConfig.getMessage());
        }
        paramConfig = null;
        continue;
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "inflateConfigString error!");
      }
      paramConfig = null;
      continue;
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      String str = localXmlPullParser.getName();
      if ((str != null) && (str.equalsIgnoreCase("beginTime")))
      {
        paramConfig = localXmlPullParser.nextText();
      }
      else
      {
        paramConfig = localConfig;
        if (str != null)
        {
          paramConfig = localConfig;
          if (str.equalsIgnoreCase("endTime"))
          {
            paramConfig = localConfig + "|" + localXmlPullParser.nextText();
            continue;
            do
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "ClassicHead entrence:" + localConfig);
              }
              if ((localConfig == null) || (localConfig.length() <= 0)) {
                break;
              }
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "ClassicHead getContent success");
              }
              SharedPreUtils.d(paramQQAppInterface.getApp(), j, paramQQAppInterface.getCurrentAccountUin(), localConfig);
              paramQQAppInterface = (ClassicHeadActivityManager)paramQQAppInterface.getManager(198);
              if (paramQQAppInterface == null) {
                break;
              }
              paramQQAppInterface.a();
              return;
              if (!QLog.isColorLevel()) {
                break;
              }
              QLog.e("SPLASH_ConfigServlet", 2, "ClassicHeadConfig appear exception:", paramQQAppInterface);
              return;
            } while (i == 1);
            paramConfig = localConfig;
            switch (i)
            {
            }
            paramConfig = localConfig;
          }
        }
      }
    }
  }
  
  private void al(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    try
    {
      i = paramConfig.version.get();
      j = SharedPreUtils.K(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount());
      if ((paramConfig.content_list == null) || (paramConfig.content_list.size() <= 0)) {
        break label156;
      }
      paramConfig = (String)paramConfig.content_list.get(0);
      if (QLog.isColorLevel()) {
        QLog.d("HeadsUp", 2, "received Headsup Notify configVersion:" + i + " ,localVersion:" + j + " ,configContent" + paramConfig);
      }
      if (i == j) {
        return;
      }
      if (!paramConfig.contains("headsup_switch")) {
        break label248;
      }
      bool = paramConfig.split("=")[1].trim().equals("true");
    }
    catch (Exception paramQQAppInterface)
    {
      int i;
      int j;
      boolean bool;
      label156:
      while (QLog.isColorLevel())
      {
        QLog.e("HeadsUp", 2, "received Headsup Notify error", paramQQAppInterface);
        return;
        label248:
        bool = false;
      }
    }
    SharedPreUtils.a(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount(), i, true, bool);
    return;
    if (i != j)
    {
      SharedPreUtils.a(paramQQAppInterface.getApp(), paramQQAppInterface.getAccount(), i, false, true);
      paramQQAppInterface.a.jdField_a_of_type_Boolean = false;
    }
    if (QLog.isColorLevel())
    {
      QLog.d("HeadsUp", 2, "received Headsup Notify configVersion:" + i + " ,localVersion:" + j);
      return;
    }
  }
  
  private void am(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    try
    {
      i = paramConfig.version.get();
      int j = SharedPreUtils.M(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      if ((i > 0) && (i != j))
      {
        SharedPreUtils.o(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, i);
        if ((paramConfig.content_list.has()) && (paramConfig.content_list.size() > 0))
        {
          paramQQAppInterface = (String)paramConfig.content_list.get(0);
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "received readinjoy hb config configVersion:" + i + " ,localVersion:" + j + " ,configContent" + paramQQAppInterface);
          }
          KandianHBManager.a().a(paramQQAppInterface);
          return;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "received readinjoy hb config , but content is empty!");
        return;
      }
    }
    catch (Exception paramQQAppInterface)
    {
      int i;
      if (QLog.isColorLevel())
      {
        QLog.e("SPLASH_ConfigServlet", 2, "received readinjou hb config error , msg : ", paramQQAppInterface);
        return;
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "received readinjoy hb config versionCode is error : " + i);
        }
      }
    }
  }
  
  private void an(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    SearchEntryConfigManager.jdField_a_of_type_JavaLangString = paramQQAppInterface.getCurrentAccountUin();
    int i = paramConfig.version.get();
    int j = SearchEntryConfigManager.a(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin());
    if (QLog.isColorLevel()) {
      QLog.d("Q.uniteSearch.SearchNetEntryConfig", 2, "handleSearchNetEntryConfig, version: " + i + " localVersion: " + j);
    }
    if (i == j) {
      return;
    }
    SearchEntryConfigManager.a(paramQQAppInterface.getApp(), i, paramQQAppInterface.getCurrentAccountUin());
    SearchEntryConfigManager.a(paramQQAppInterface.getApp(), paramConfig, paramQQAppInterface.c());
  }
  
  private void ao(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("Medal_SPLASH_ConfigServlet", 2, "handleMedalConfig|type= " + paramConfig.type.get());
    }
    int j = paramConfig.version.get();
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
    {
      Object localObject = (String)paramConfig.content_list.get(0);
      if (QLog.isColorLevel()) {
        QLog.d("Medal_SPLASH_ConfigServlet", 2, "content" + (String)localObject);
      }
      if (localObject != null)
      {
        String str3 = "";
        String str4 = "";
        String str5 = "";
        String str2 = str5;
        String str1 = str4;
        paramConfig = str3;
        try
        {
          localObject = new JSONObject((String)localObject);
          str2 = str5;
          str1 = str4;
          paramConfig = str3;
          str3 = ((JSONObject)localObject).optString("hosturl", "");
          str2 = str5;
          str1 = str4;
          paramConfig = str3;
          str4 = ((JSONObject)localObject).optString("customurl", "");
          str2 = str5;
          str1 = str4;
          paramConfig = str3;
          str5 = ((JSONObject)localObject).optString("shareurl", "");
          str2 = str5;
          str1 = str4;
          paramConfig = str3;
          int i = ((JSONObject)localObject).optInt("entrance_visibility", 0);
          paramConfig = str3;
          str1 = str4;
          str2 = str5;
          return;
        }
        catch (Exception localException)
        {
          for (;;)
          {
            try
            {
              ((MedalWallMng)paramQQAppInterface.getManager(249)).a(i, paramConfig, str1, str2);
              SharedPreUtils.y(paramQQAppInterface.getApp(), j, paramQQAppInterface.getCurrentAccountUin());
              SharedPreUtils.C(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), i);
              return;
            }
            catch (Exception paramQQAppInterface)
            {
              if (!QLog.isColorLevel()) {
                return;
              }
              QLog.e("SPLASH_ConfigServlet", 2, paramQQAppInterface, new Object[0]);
            }
            localException = localException;
            if (QLog.isColorLevel()) {
              QLog.i("SPLASH_ConfigServlet", 2, localException.getMessage(), localException);
            }
            i = 0;
          }
        }
      }
    }
  }
  
  private void ap(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    j = 0;
    int i = 0;
    k = 0;
    m = 0;
    Object localObject1 = null;
    Object localObject2 = null;
    int n = paramConfig.version.get();
    int i1 = SharedPreUtils.b(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 2);
    if (n != i1)
    {
      if (paramConfig.msg_content_list.size() <= 0) {
        break label391;
      }
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramConfig != null) {
        break label266;
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, " handleMedalStrongReminderConfig content is null !");
      }
      i = 1;
      paramConfig = localObject2;
      j = i;
      k = m;
      if (TextUtils.isEmpty(paramConfig)) {}
    }
    for (;;)
    {
      for (;;)
      {
        try
        {
          localObject1 = new JSONObject(paramConfig);
          if (!((JSONObject)localObject1).has("medal_strong_reminder_off")) {
            continue;
          }
          j = ((JSONObject)localObject1).getInt("medal_strong_reminder_off");
          k = j;
          j = i;
        }
        catch (Exception localException)
        {
          label266:
          localException.printStackTrace();
          j = 5;
          k = m;
          continue;
        }
        if (j == 0)
        {
          SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 3, k);
          if (paramQQAppInterface.a(249)) {
            ((MedalWallMng)paramQQAppInterface.getManager(249)).a(k);
          }
        }
        SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 2, n);
        localObject1 = paramConfig;
        if (QLog.isColorLevel()) {
          QLog.i("SPLASH_ConfigServlet", 2, String.format(Locale.getDefault(), "handleMedalStrongReminderConfig localVersion: %s, version: %s, result: %s, value: %s, strContent: %s", new Object[] { Integer.valueOf(i1), Integer.valueOf(n), Integer.valueOf(j), Integer.valueOf(k), localObject1 }));
        }
        return;
        if (paramConfig.compress.get() != 1) {
          continue;
        }
        paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (paramConfig != null) {
          try
          {
            paramConfig = new String(paramConfig, "UTF-8");
            i = 0;
          }
          catch (Throwable paramConfig)
          {
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, " handleMedalStrongReminderConfig Throwable:" + paramConfig.getMessage());
            }
            i = 2;
            paramConfig = null;
          }
        }
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, " handleMedalStrongReminderConfig inflateConfigString error!");
      }
      i = 3;
      paramConfig = null;
      continue;
      paramConfig = paramConfig.content.get().toStringUtf8();
      break;
      label391:
      i = 4;
      paramConfig = localObject2;
      break;
      i = 6;
      j = 0;
    }
  }
  
  private void aq(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int j = 0;
    int i = 0;
    Object localObject2 = null;
    Object localObject1 = null;
    for (;;)
    {
      try
      {
        int k = paramConfig.version.get();
        int m = ((Integer)SharedPreUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 2)).intValue();
        if (k != m)
        {
          if (paramConfig.msg_content_list.size() <= 0) {
            continue;
          }
          paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
          if (paramConfig == null)
          {
            if (!QLog.isColorLevel()) {
              break label336;
            }
            QLog.d("SPLASH_ConfigServlet", 2, " handlePushRecommendShieldConfig content is null !");
            break label336;
            if (i == 0)
            {
              SharedPreUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 3, localObject1);
              if (paramQQAppInterface.a(158)) {
                ((MayknowRecommendManager)paramQQAppInterface.getManager(158)).a((String)localObject1);
              }
            }
            SharedPreUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, 2, Integer.valueOf(k));
          }
        }
        else
        {
          if (!QLog.isColorLevel()) {
            break label355;
          }
          QLog.i("SPLASH_ConfigServlet", 2, String.format(Locale.getDefault(), "handlePushRecommendShieldConfig localVersion: %s, version: %s, result: %s, strContent: %s", new Object[] { Integer.valueOf(m), Integer.valueOf(k), Integer.valueOf(i), localObject1 }));
          return;
        }
        if (paramConfig.compress.get() == 1)
        {
          paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
          if (paramConfig != null)
          {
            try
            {
              paramConfig = new String(paramConfig, "UTF-8");
              i = 0;
            }
            catch (Throwable paramConfig)
            {
              if (!QLog.isColorLevel()) {
                break label356;
              }
            }
            QLog.d("SPLASH_ConfigServlet", 2, " handlePushRecommendShieldConfig Throwable:" + paramConfig.getMessage());
            break label356;
          }
          else
          {
            if (!QLog.isColorLevel()) {
              break label363;
            }
            QLog.d("SPLASH_ConfigServlet", 2, " handlePushRecommendShieldConfig inflateConfigString error!");
            break label363;
          }
        }
        else
        {
          paramConfig = paramConfig.content.get().toStringUtf8();
          i = j;
          break label341;
          i = 4;
          paramConfig = localObject2;
        }
      }
      catch (Throwable paramQQAppInterface)
      {
        paramQQAppInterface.printStackTrace();
        return;
      }
      label336:
      i = 1;
      paramConfig = localObject2;
      label341:
      localObject1 = paramConfig;
      if (paramConfig == null)
      {
        localObject1 = "";
        continue;
        label355:
        return;
        label356:
        paramConfig = null;
        i = 2;
        continue;
        label363:
        paramConfig = null;
        i = 3;
      }
    }
  }
  
  private void ar(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    int j = SharedPreUtils.L(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin());
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "handleLbsPackConfig, version: " + i + " localVersion: " + j);
    }
    if (i == j) {}
    do
    {
      do
      {
        return;
        if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
          break;
        }
        paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      } while (paramConfig == null);
      if (paramConfig.compress.get() == 1)
      {
        paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (paramConfig == null) {}
      }
      for (;;)
      {
        try
        {
          paramConfig = new String(paramConfig, "UTF-8");
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "handleLbsPackConfig,xmlContent:" + paramConfig);
          }
          paramConfig = LbsPackConfig.parseConfig(paramConfig);
          if (paramConfig == null) {
            break;
          }
          paramConfig.version = i;
          String str = paramQQAppInterface.getCurrentAccountUin();
          SharedPreUtils.n(paramQQAppInterface.getApp(), str, i);
          ThreadManager.getFileThreadHandler().post(new absu(this, paramConfig, str));
          return;
        }
        catch (Throwable paramConfig)
        {
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "Throwable:" + paramConfig.getMessage());
          }
          paramConfig = null;
          continue;
        }
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "inflateConfigString error!");
        }
        paramConfig = null;
        continue;
        paramConfig = paramConfig.content.get().toStringUtf8();
      }
      LbsPackConfig.deleteLocalConfig(jdField_a_of_type_JavaLangString);
    } while (!QLog.isColorLevel());
    QLog.d("SPLASH_ConfigServlet", 2, "handleLbsPackConfig, msg_content_list is null");
  }
  
  private void as(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    Object localObject3 = null;
    Object localObject1 = localObject3;
    Object localObject4;
    if (paramConfig.msg_content_list != null)
    {
      localObject1 = localObject3;
      if (paramConfig.msg_content_list.size() > 0)
      {
        localObject4 = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
        localObject1 = localObject3;
        if (localObject4 != null)
        {
          if (((ConfigurationService.Content)localObject4).compress.get() != 1) {
            break label460;
          }
          localObject3 = OlympicUtil.a(((ConfigurationService.Content)localObject4).content.get().toByteArray());
          if (localObject3 == null) {
            break label521;
          }
        }
      }
    }
    for (;;)
    {
      try
      {
        localObject1 = new String((byte[])localObject3, "UTF-8");
        localObject3 = BaseApplicationImpl.getApplication().getSharedPreferences("DynamicAdjustment", 4).edit();
        try
        {
          if (!TextUtils.isEmpty((CharSequence)localObject1))
          {
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "SVDNAdjustment config : " + (String)localObject1);
            }
            localObject4 = new JSONObject((String)localObject1).getJSONObject("SVDNAdjustment").getJSONArray("configs").getJSONObject(0).getJSONObject("config");
            ((SharedPreferences.Editor)localObject3).putFloat("SVDNAdjustment_data_type", (float)((JSONObject)localObject4).optDouble("data_type", 0.5D));
            ((SharedPreferences.Editor)localObject3).putInt("SVDNAdjustment_max_downmark", ((JSONObject)localObject4).optInt("max_downmark", 2));
            ((SharedPreferences.Editor)localObject3).putInt("SVDNAdjustment_max_upmark", ((JSONObject)localObject4).optInt("max_upmark", 2));
            ((SharedPreferences.Editor)localObject3).putInt("SVDNAdjustment_up_threshold_base", ((JSONObject)localObject4).optInt("up_threshold_base", 11));
            ((SharedPreferences.Editor)localObject3).putInt("SVDNAdjustment_down_threshold_base", ((JSONObject)localObject4).optInt("down_threshold_base", 25));
            ((SharedPreferences.Editor)localObject3).putInt("SVDNAdjustment_quality_up_threshold", ((JSONObject)localObject4).optInt("up_threshold_base", 11));
            ((SharedPreferences.Editor)localObject3).putInt("SVDNAdjustment_quality_down_threshold", ((JSONObject)localObject4).optInt("down_threshold_base", 25));
            ((SharedPreferences.Editor)localObject3).putFloat("SVDNAdjustment_up_threshold_coefficient", (float)((JSONObject)localObject4).optDouble("up_threshold_coefficient", 0.7D));
            ((SharedPreferences.Editor)localObject3).putFloat("SVDNAdjustment_down_threshold_coefficient", (float)((JSONObject)localObject4).optDouble("down_threshold_coefficient", 1.3D));
            ((SharedPreferences.Editor)localObject3).commit();
          }
        }
        catch (Exception localException)
        {
          Object localObject2;
          String str1;
          if (!QLog.isColorLevel()) {
            break label513;
          }
          QLog.e("SPLASH_ConfigServlet", 2, "error: " + localException.toString());
          localException.printStackTrace();
          continue;
        }
        com.tencent.mobileqq.activity.richmedia.VideoFilterTools.a();
        com.tencent.mobileqq.activity.richmedia.VideoFilterTools.a((String)localObject1);
        SharedPreUtils.x(paramQQAppInterface.getApp(), paramConfig.version.get(), jdField_a_of_type_JavaLangString);
        return;
      }
      catch (UnsupportedEncodingException localUnsupportedEncodingException)
      {
        if (QLog.isColorLevel()) {
          localUnsupportedEncodingException.printStackTrace();
        }
        localObject2 = null;
        continue;
      }
      catch (OutOfMemoryError localOutOfMemoryError)
      {
        if (QLog.isColorLevel()) {
          localOutOfMemoryError.printStackTrace();
        }
        System.gc();
        try
        {
          str1 = new String((byte[])localObject3, "UTF-8");
        }
        catch (Throwable localThrowable)
        {
          str2 = null;
        }
        continue;
      }
      label460:
      String str2 = ((ConfigurationService.Content)localObject4).content.get().toStringUtf8();
      continue;
      label513:
      label521:
      str2 = null;
    }
  }
  
  private void at(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    LebaGridManager localLebaGridManager = (LebaGridManager)paramQQAppInterface.getManager(211);
    int i = localLebaGridManager.a();
    int j = paramConfig.version.get();
    QLog.w("Q.lebanew", 1, "handleLebaNewConfig, localVersion:" + i + ",serverVersion:" + j);
    if (i != j)
    {
      if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
        break label230;
      }
      paramQQAppInterface = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramQQAppInterface == null) {
        break label219;
      }
      if (paramQQAppInterface.compress.get() != 1) {
        break label194;
      }
      paramQQAppInterface = OlympicUtil.a(paramQQAppInterface.content.get().toByteArray());
      if (paramQQAppInterface == null) {
        break label241;
      }
    }
    for (;;)
    {
      try
      {
        paramQQAppInterface = new String(paramQQAppInterface, "UTF-8");
        if (TextUtils.isEmpty(paramQQAppInterface)) {
          break label208;
        }
        localLebaGridManager.a(paramQQAppInterface, j);
        return;
      }
      catch (Exception paramQQAppInterface)
      {
        QLog.e("Q.lebanew", 1, "handleLebaNewConfig uncompress failed" + paramQQAppInterface);
        paramQQAppInterface = null;
        continue;
      }
      label194:
      paramQQAppInterface = paramQQAppInterface.content.get().toStringUtf8();
      continue;
      label208:
      QLog.w("Q.lebanew", 1, "handleLebaNewConfig config_content is empty!");
      return;
      label219:
      QLog.w("Q.lebanew", 1, "handleLebaNewConfig content is empty!");
      return;
      label230:
      QLog.w("Q.lebanew", 1, "handleLebaNewConfig msg_content_list is empty!");
      return;
      label241:
      paramQQAppInterface = null;
    }
  }
  
  private void au(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    Object localObject = null;
    int i = SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, "campus_circle_config");
    int j = paramConfig.version.get();
    if (i != j) {
      if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
      {
        paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
        if ((paramConfig != null) && (paramConfig.content.has())) {
          if (paramConfig.compress.get() == 1)
          {
            paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
            if (paramConfig == null) {
              break label301;
            }
          }
        }
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (QLog.isColorLevel()) {
          QLog.i("CAMPUS_CIRCLE_CONFIG", 2, String.format(Locale.getDefault(), "handleCampusCircleConfig config_content: %s", new Object[] { paramConfig }));
        }
        localObject = paramConfig;
        if (paramConfig == null) {
          localObject = "";
        }
        SharedPreUtils.a(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, "campus_circle_config", (String)localObject);
        SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, "campus_circle_config", j);
        return;
      }
      catch (Exception paramConfig)
      {
        QLog.e("SPLASH_ConfigServlet", 1, "handleCUOpenCardGuideConfig|uncompress failed" + paramConfig);
        paramConfig = null;
        continue;
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      paramConfig = (ConfigurationService.Config)localObject;
      if (QLog.isColorLevel())
      {
        QLog.i("CAMPUS_CIRCLE_CONFIG", 2, "handleCampusCircleConfig empty content");
        paramConfig = (ConfigurationService.Config)localObject;
        continue;
        paramConfig = (ConfigurationService.Config)localObject;
        if (QLog.isColorLevel())
        {
          QLog.i("CAMPUS_CIRCLE_CONFIG", 2, "handleCampusCircleConfig empty config");
          paramConfig = (ConfigurationService.Config)localObject;
          continue;
          if (QLog.isColorLevel())
          {
            QLog.i("CAMPUS_CIRCLE_CONFIG", 2, "handleCampusCircleConfig same version, no need to update");
            return;
            label301:
            paramConfig = null;
          }
        }
      }
    }
  }
  
  private void av(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    Object localObject2 = null;
    Object localObject1 = null;
    boolean bool2 = true;
    OCRManager localOCRManager = (OCRManager)paramQQAppInterface.getManager(227);
    int i = localOCRManager.a();
    int j = paramConfig.version.get();
    QLog.d("SPLASH_ConfigServlet", 1, "handleGetOCRConfig, version:" + j + ",localVersion:" + i);
    if (i != j) {
      if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
      {
        paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
        paramQQAppInterface = localObject2;
        if (paramConfig == null) {
          break label343;
        }
        if (paramConfig.compress.get() == 1)
        {
          paramQQAppInterface = OlympicUtil.a(paramConfig.content.get().toByteArray());
          if (paramQQAppInterface == null) {}
        }
      }
    }
    for (;;)
    {
      try
      {
        paramQQAppInterface = new String(paramQQAppInterface, "UTF-8");
        paramConfig = OcrConfig.parse(paramQQAppInterface);
        paramQQAppInterface = paramConfig;
        if (paramConfig == null) {
          break label343;
        }
        paramConfig.version = j;
        bool1 = true;
        paramQQAppInterface = paramConfig;
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "handleGetOCRConfig, isSucc = " + bool1 + ", ocrConfig = " + paramQQAppInterface);
        }
        localOCRManager.a(bool1, paramQQAppInterface);
        return;
      }
      catch (Throwable paramQQAppInterface)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "Throwable:" + paramQQAppInterface.getMessage());
        }
        paramQQAppInterface = null;
        continue;
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "inflateConfigString error!");
      }
      paramQQAppInterface = null;
      continue;
      paramQQAppInterface = paramConfig.content.get().toStringUtf8();
      continue;
      OcrConfig.deleteLocalConfig(jdField_a_of_type_JavaLangString);
      paramQQAppInterface = localObject1;
      boolean bool1 = bool2;
      if (QLog.isColorLevel())
      {
        QLog.d("SPLASH_ConfigServlet", 2, "handleGetOCRConfig, msg_content_list is null");
        paramQQAppInterface = localObject1;
        bool1 = bool2;
        continue;
        label343:
        bool1 = false;
        continue;
        bool1 = false;
        paramQQAppInterface = localObject1;
      }
    }
  }
  
  private void aw(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "love language handleRespLoveLanguageConfig|type= " + paramConfig.type.get());
    }
    int i = paramConfig.version.get();
    if (i == SharedPreUtils.ae(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin())) {
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "love language handleRespLoveLanguageConfig serverVersion is equals to localVersion ");
      }
    }
    do
    {
      return;
      if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
        break;
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "love language handleRespLoveLanguageConfig size:" + paramConfig.msg_content_list.size() + ",content:" + paramConfig.msg_content_list.get(0));
      }
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
    } while (paramConfig == null);
    if (paramConfig.compress.get() == 1)
    {
      paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
      if (paramConfig == null) {}
    }
    for (;;)
    {
      int k;
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, new Object[] { "love language configContent:", paramConfig });
        }
        if (paramConfig == null) {
          break;
        }
        label360:
        try
        {
          paramConfig = new JSONObject(paramConfig);
          int j = paramConfig.optInt("lovelanguage");
          k = paramConfig.optInt("lovelanguagegray");
          SharedPreUtils.b(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), i, j, k);
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, new Object[] { "love language save config -- version:", Integer.valueOf(i), ",activity =", Integer.valueOf(j), ",gray=", Integer.valueOf(k) });
          }
          paramQQAppInterface = (LoveLanguageManager)paramQQAppInterface.getManager(273);
          if (j != 1) {
            break label462;
          }
          bool1 = true;
        }
        catch (JSONException paramQQAppInterface) {}
        paramQQAppInterface.a(bool1, bool2);
        return;
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "love language JSONException :", paramQQAppInterface);
        return;
      }
      catch (Throwable paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "love language:" + paramConfig.getMessage());
        }
        paramConfig = null;
        continue;
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "love language inflateConfigString error!");
      }
      paramConfig = null;
      continue;
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label462:
      boolean bool1 = false;
      while (k != 1)
      {
        bool2 = false;
        break label360;
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "love language handleRespLoveLanguageConfig size=0 or null");
        return;
      }
      boolean bool2 = true;
    }
  }
  
  public static String b(ConfigurationService.Config paramConfig, int paramInt1, int paramInt2)
  {
    if (paramConfig.version.get() == paramInt1) {
      return null;
    }
    if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() == 0))
    {
      QLog.i("SPLASH_ConfigServlet", 1, String.format("handleCompressConfig| version is update but config content is null. newVersion=%d, oldVersion=%d, type=%d", new Object[] { Integer.valueOf(paramConfig.version.get()), Integer.valueOf(paramInt1), Integer.valueOf(paramInt2) }));
      return "";
    }
    if (paramConfig.msg_content_list.size() >= 2) {}
    for (paramInt1 = 1;; paramInt1 = 0)
    {
      Object localObject1 = ((ConfigurationService.Content)paramConfig.msg_content_list.get(paramInt1)).content.get().toByteArray();
      if (localObject1 == null)
      {
        QLog.e("SPLASH_ConfigServlet", 1, "handleCompressConfig| config content is null. type=" + paramInt2);
        return null;
      }
      Object localObject2;
      if (((ConfigurationService.Content)paramConfig.msg_content_list.get(0)).compress.get() == 1)
      {
        localObject2 = ArConfigUtils.a((byte[])localObject1);
        localObject1 = localObject2;
        if (localObject2 == null)
        {
          QLog.e("SPLASH_ConfigServlet", 1, "handleCompressConfig| decompress is failed. type=" + paramInt2 + ", data=null");
          return null;
        }
      }
      String str;
      try
      {
        localObject2 = new String((byte[])localObject1, "utf-8");
        if (localObject2 == null)
        {
          QLog.e("SPLASH_ConfigServlet", 1, "handleCompressConfig| switch data[] to String failed. type=" + paramInt2 + ", data=" + new String((byte[])localObject1));
          return null;
        }
      }
      catch (UnsupportedEncodingException localUnsupportedEncodingException)
      {
        for (;;)
        {
          localUnsupportedEncodingException.printStackTrace();
          str = null;
        }
        paramConfig = String.format("handleCompressConfig| config is update. version=%d, type=%d", new Object[] { Integer.valueOf(paramConfig.version.get()), Integer.valueOf(paramInt2) });
        if (!QLog.isColorLevel()) {
          break label358;
        }
      }
      QLog.i("SPLASH_ConfigServlet", 2, paramConfig + "content=" + str);
      for (;;)
      {
        return str;
        label358:
        QLog.i("SPLASH_ConfigServlet", 1, paramConfig);
      }
    }
  }
  
  private void b(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("ArConfig_configServlet", 2, "handleResp_GetArEntranceConfig|type= " + paramConfig.type.get());
    }
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    ArResourceManager localArResourceManager = (ArResourceManager)localQQAppInterface.getManager(167);
    if (paramConfig.type.get() != 88)
    {
      OlympicServlet.a(localQQAppInterface, 88, 0, 0, 1, 3, 0);
      return;
    }
    int i = paramConfig.version.get();
    int j;
    if (paramIntent.getIntExtra("key_ar_entrance_effect_version", 0) != i) {
      if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
      {
        paramIntent = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
        j = paramIntent.task_id.get();
        if (paramIntent.compress.get() == 1)
        {
          paramIntent = ArConfigUtils.a(paramIntent.content.get().toByteArray());
          if (paramIntent == null)
          {
            OlympicServlet.a(localQQAppInterface, 88, i, j, 1, 4, 0);
            if (!QLog.isColorLevel()) {
              break label393;
            }
            QLog.d("ArConfig_configServlet", 2, "handleResp_GetArEntranceConfig||deCompress error!");
            paramIntent = null;
          }
        }
      }
    }
    for (;;)
    {
      paramIntent = ArEffectConfig.a(paramIntent);
      if (paramIntent != null)
      {
        paramIntent.jdField_a_of_type_Int = i;
        if (localArResourceManager != null) {
          localArResourceManager.a(paramIntent);
        }
        for (;;)
        {
          for (;;)
          {
            OlympicServlet.a(localQQAppInterface, 88, i, j, 1, 0, 0);
            return;
            try
            {
              paramIntent = new String(paramIntent, "utf-8");
            }
            catch (UnsupportedEncodingException localUnsupportedEncodingException)
            {
              paramConfig = null;
              paramIntent = paramConfig;
            }
          }
          if (!QLog.isColorLevel()) {
            break;
          }
          QLog.d("SPLASH_ConfigServlet", 2, localUnsupportedEncodingException.getMessage());
          paramIntent = paramConfig;
          break;
          paramIntent = paramIntent.content.get().toStringUtf8();
          break;
          if (QLog.isColorLevel()) {
            QLog.d("ArConfig_configServlet", 2, "handleResp_GetArEntranceConfig|arManager is null ");
          }
        }
      }
      OlympicServlet.a(localQQAppInterface, 88, i, j, 1, 5, 0);
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.d("ArConfig_configServlet", 2, "handleResp_GetArEntranceConfig||parseArEffectConfig error!");
      return;
      if (localArResourceManager != null) {
        localArResourceManager.b();
      }
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.d("ArConfig_configServlet", 2, "handleResp_GetArEntranceConfig || msg_content_list is null");
      return;
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.d("ArConfig_configServlet", 2, "handleResp_GetArEntranceConfig || has same version");
      return;
      label393:
      paramIntent = null;
    }
  }
  
  public static void b(QQAppInterface paramQQAppInterface, int paramInt)
  {
    if (QLog.isColorLevel()) {
      QLog.i("ShortVideoResourceManager", 2, "getShortVideoResourceConfig| getType=" + paramInt);
    }
    ShortVideoResourceManager.a = System.currentTimeMillis();
    a(paramQQAppInterface, 215, null);
  }
  
  private void b(QQAppInterface paramQQAppInterface, Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    paramIntent = CapturePtvTemplateManager.a();
    int j = paramConfig.version.get();
    int i = SharedPreUtils.i(((QQAppInterface)getAppRuntime()).getApp());
    if (!CapturePtvTemplateManager.a()) {
      i = 0;
    }
    for (;;)
    {
      if (QLog.isColorLevel()) {
        QLog.d("CapturePtvTemplateManager_VideoRedbag", 2, "serverVersion=" + j + "|localVersion=" + i);
      }
      if (j == i) {
        break;
      }
      SharedPreUtils.g(((QQAppInterface)getAppRuntime()).getApp(), j);
      try
      {
        String str = b(paramConfig, i, 226);
        if (str != null)
        {
          paramIntent.c();
          paramIntent.a(paramQQAppInterface, str, 1);
          if (!QLog.isColorLevel()) {
            break;
          }
          QLog.d("CapturePtvTemplateManager", 2, "receiveAllConfigs|type: 226,content: " + str + ",version: " + paramConfig.version.get());
          return;
        }
        if (QLog.isColorLevel()) {
          QLog.d("CapturePtvTemplateManager", 2, "receiveAllConfigs|type: 226,content_list is empty ,version: " + paramConfig.version.get());
        }
        paramIntent.a(paramQQAppInterface, "", 1);
        return;
      }
      catch (OutOfMemoryError paramQQAppInterface)
      {
        if (!QLog.isColorLevel()) {
          break;
        }
      }
      QLog.e("CapturePtvTemplateManager", 2, "receiveAllConfigs|exception:" + paramQQAppInterface.getMessage());
      return;
    }
  }
  
  public static void b(QQAppInterface paramQQAppInterface, String paramString)
  {
    jdField_a_of_type_JavaLangString = paramString;
    NewIntent localNewIntent = new NewIntent(paramQQAppInterface.getApp(), ConfigServlet.class);
    localNewIntent.putExtra("k_cmd_type", new int[] { 34 });
    localNewIntent.putExtra("key_uin", paramString);
    paramQQAppInterface.startServlet(localNewIntent);
  }
  
  public static void b(QQAppInterface paramQQAppInterface, String paramString, int paramInt)
  {
    if ((paramQQAppInterface == null) || (TextUtils.isEmpty(paramString))) {
      QLog.d("SPLASH_ConfigServlet", 1, "armap config push app is null or uin is empty");
    }
    ARMapConfigManager localARMapConfigManager;
    if ((paramInt != -1) && (paramQQAppInterface != null))
    {
      localARMapConfigManager = (ARMapConfigManager)paramQQAppInterface.getManager(189);
      if (localARMapConfigManager.a()) {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "ARMapForbidden getARMapConfig return");
        }
      }
    }
    do
    {
      return;
      int i = localARMapConfigManager.a();
      QLog.d("SPLASH_ConfigServlet", 1, "armap config push localVersion:" + i);
      if (paramInt == i)
      {
        QLog.d("SPLASH_ConfigServlet", 1, "armap config push same version");
        return;
      }
      QLog.d("SPLASH_ConfigServlet", 1, "armap config push pushVersion:" + paramInt);
    } while (paramQQAppInterface == null);
    a(2, paramQQAppInterface, paramString);
  }
  
  private void b(ConfigurationService.Config paramConfig, QQAppInterface paramQQAppInterface)
  {
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_CENTER_URL_CONFIG_CMD response");
    }
    label291:
    do
    {
      int i;
      int j;
      do
      {
        Iterator localIterator;
        for (;;)
        {
          String str;
          try
          {
            if ((paramConfig.content_list == null) || (paramConfig.content_list.size() <= 0)) {
              break label291;
            }
            i = paramConfig.version.get();
            j = PublicAccountConfigUtil.b(paramQQAppInterface);
            if (i == j) {
              break;
            }
            localIterator = paramConfig.content_list.get().iterator();
            if (localIterator.hasNext())
            {
              str = (String)localIterator.next();
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 70, version:" + paramConfig.version.get() + ", content:" + str);
              }
              if (PublicAccountConfigUtil.b(str))
              {
                PublicAccountConfigUtil.d(paramQQAppInterface);
                PublicAccountConfigUtil.b(paramQQAppInterface, i);
                if (!QLog.isColorLevel()) {
                  continue;
                }
                QLog.d("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_CENTER_URL_CONFIG_CMD save version: " + i);
              }
            }
            else
            {
              return;
            }
          }
          catch (Exception paramConfig)
          {
            if (QLog.isColorLevel()) {
              QLog.e("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_CENTER_URL_CONFIG_CMD error", paramConfig);
            }
            paramConfig.printStackTrace();
          }
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_CENTER_URL_CONFIG_CMD content error:" + str);
          }
        }
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_CENTER_URL_CONFIG_CMD remote version: " + i + " | localVersion: " + j);
      return;
    } while (!QLog.isColorLevel());
    QLog.d("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_CENTER_URL_CONFIG_CMD content_list is empty");
  }
  
  private void b(String paramString, int paramInt)
  {
    try
    {
      Object localObject = a(new ByteArrayInputStream(paramString.getBytes("utf-8")));
      if (localObject != null)
      {
        paramString = ((String)localObject).substring(((String)localObject).indexOf("<?xml"), ((String)localObject).indexOf("</msg><msg")) + "</msg>";
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "qav_upgrade_invite msg1 = " + paramString);
        }
        String str = ((String)localObject).substring(((String)localObject).indexOf("<?xml"), ((String)localObject).indexOf("?>")) + "?>";
        localObject = ((String)localObject).substring(((String)localObject).indexOf("</msg><msg"), ((String)localObject).lastIndexOf("</msg>"));
        str = str + ((String)localObject).substring(6) + "</msg>";
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "qav_upgrade_invite msg2 = " + str);
        }
        localObject = SharedPreUtils.c(((QQAppInterface)getAppRuntime()).getCurrentAccountUin());
        ((SharedPreferences)localObject).edit().putString("qav_upgrade_invite_video", paramString).commit();
        ((SharedPreferences)localObject).edit().putString("qav_upgrade_invite_multi", str).commit();
        SharedPreUtils.m(getAppRuntime().getApplication(), paramInt, jdField_a_of_type_JavaLangString);
      }
      return;
    }
    catch (Exception paramString)
    {
      do
      {
        paramString.printStackTrace();
      } while (!QLog.isColorLevel());
      QLog.i("SPLASH_ConfigServlet", 2, "parse qav_upgrade_invite xml  exception : " + paramString.getMessage());
    }
  }
  
  public static byte[] b(byte[] paramArrayOfByte)
  {
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    try
    {
      paramArrayOfByte = new InflaterInputStream(new ByteArrayInputStream(paramArrayOfByte));
      byte[] arrayOfByte = new byte[256];
      for (;;)
      {
        int i = paramArrayOfByte.read(arrayOfByte);
        if (-1 == i) {
          break;
        }
        localByteArrayOutputStream.write(arrayOfByte, 0, i);
      }
      paramArrayOfByte = localByteArrayOutputStream.toByteArray();
    }
    catch (Throwable paramArrayOfByte)
    {
      if (QLog.isColorLevel())
      {
        QLog.d("OlympicUtil", 2, "inflateConfigString");
        paramArrayOfByte.printStackTrace();
      }
      return null;
    }
    return paramArrayOfByte;
  }
  
  private void c(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    QLog.d("ArConfig_configServlet", 1, "handleResp_GetArResourceConfig| 2 type= " + paramConfig.type.get());
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    ArResourceManager localArResourceManager = (ArResourceManager)localQQAppInterface.getManager(167);
    if (localArResourceManager == null)
    {
      QLog.d("ArConfig_configServlet", 1, "handleResp_GetArResourceConfig| manager is null");
      return;
    }
    Object localObject1 = BaseApplicationImpl.getApplication();
    int i;
    int j;
    ArrayList localArrayList;
    try
    {
      i = ((Context)localObject1).getPackageManager().getPackageInfo(((Context)localObject1).getPackageName(), 0).versionCode;
      localArResourceManager.a(i);
      QLog.d("ArConfig_configServlet", 1, "handleResp_GetArResourceConfig| 3 type= version code is " + i);
      if (paramConfig.type.get() != 87) {
        break label752;
      }
      j = paramConfig.version.get();
      i = paramIntent.getIntExtra("key_config_version", 0);
      if (QLog.isColorLevel()) {
        QLog.d("handleResp_GetArResourceConfig", 2, "handleResp_GetArResource|server-Version is " + j);
      }
      if (i == j) {
        break label731;
      }
      if (paramConfig.msg_content_list == null) {
        break label707;
      }
      int k = paramConfig.msg_content_list.size();
      if (k <= 0) {
        break label707;
      }
      localObject1 = null;
      localArrayList = new ArrayList();
      i = 0;
      if (i < k)
      {
        localObject3 = (ConfigurationService.Content)paramConfig.msg_content_list.get(i);
        m = ((ConfigurationService.Content)localObject3).task_id.get();
        localObject2 = ((ConfigurationService.Content)localObject3).content.get().toByteArray();
        paramIntent = (Intent)localObject2;
        if (((ConfigurationService.Content)localObject3).compress.get() == 1) {
          paramIntent = ArConfigUtils.a((byte[])localObject2);
        }
        if (paramIntent == null) {}
      }
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException)
    {
      for (;;)
      {
        int m;
        try
        {
          localObject2 = new String(paramIntent, "utf-8");
          localObject3 = ArConfigInfo.parseArConfig((String)localObject2);
          if (localObject3 != null) {
            if (localObject1 == null)
            {
              paramIntent = (Intent)localObject3;
              localArrayList.addAll(((ArConfigInfo)localObject3).mArCloudConfigInfos);
              QLog.i("ArConfig_configServlet", 1, "config loop|| taskid=" + m + ",endtime=" + ((ArConfigInfo)localObject3).aREnd + ",xmlcontent=" + (String)localObject2);
              OlympicServlet.a(localQQAppInterface, 87, j, m, 1, 0, 0);
              i += 1;
              localObject1 = paramIntent;
              continue;
              localNameNotFoundException = localNameNotFoundException;
              localNameNotFoundException.printStackTrace();
              QLog.d("ArConfig_configServlet", 1, "handleResp_GetArResourceConfig| 3 type= error happen");
            }
          }
        }
        catch (UnsupportedEncodingException paramIntent)
        {
          Object localObject3;
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, paramIntent.getMessage());
          }
          Object localObject2 = null;
          continue;
          paramIntent = localNameNotFoundException;
          if (localNameNotFoundException.aREnd >= ((ArConfigInfo)localObject3).aREnd) {
            continue;
          }
          paramIntent = (Intent)localObject3;
          continue;
          OlympicServlet.a(localQQAppInterface, 87, j, m, 1, 5, 0);
          paramIntent = localNameNotFoundException;
          if (!QLog.isColorLevel()) {
            continue;
          }
          QLog.d("ArConfig_configServlet", 2, "handleResp_GetArResource||parseArConfig error!");
          paramIntent = localNameNotFoundException;
          continue;
        }
        OlympicServlet.a(localQQAppInterface, 87, j, m, 1, 4, 0);
        paramIntent = localNameNotFoundException;
        if (QLog.isColorLevel())
        {
          QLog.d("ArConfig_configServlet", 2, "handleResp_GetArResource||deCompress error!");
          paramIntent = localNameNotFoundException;
        }
      }
    }
    if (localNameNotFoundException != null)
    {
      localNameNotFoundException.mArCloudConfigInfos = localArrayList;
      localNameNotFoundException.version = 2;
      localArResourceManager.b(j);
      localArResourceManager.a(localNameNotFoundException);
      if (QLog.isColorLevel()) {
        QLog.d("ArConfig_configServlet", 2, "maxEndTimeArConfigInfo|| maxEndtime=" + localNameNotFoundException.aREnd);
      }
      OlympicServlet.a(localQQAppInterface, 87, j, 0, 0, 0, 0);
    }
    for (;;)
    {
      i = 0;
      label648:
      if ((i == 0) || (localArResourceManager == null)) {
        break;
      }
      QLog.d("ArConfig_configServlet", 1, "arManager.downloadArResource");
      localArResourceManager.a(true, false);
      return;
      if (QLog.isColorLevel()) {
        QLog.d("ArConfig_configServlet", 2, "handleResp_GetArResource|combineArConfigInfo is null");
      }
      OlympicServlet.a(localQQAppInterface, 87, j, 0, 0, 5, 0);
      continue;
      label707:
      localArResourceManager.a();
      if (QLog.isColorLevel()) {
        QLog.d("ArConfig_configServlet", 2, "handleResp_GetArResource||msg_content_list is null!");
      }
    }
    label731:
    if (QLog.isColorLevel()) {
      QLog.d("ArConfig_configServlet", 2, "handleResp_GetArResource || has same version");
    }
    for (;;)
    {
      i = 1;
      break label648;
      break;
      label752:
      QLog.d("ArConfig_configServlet", 2, "handleResp_GetArResource || fail");
      OlympicServlet.a(localQQAppInterface, 87, 0, 0, 1, 3, 0);
    }
  }
  
  public static void c(QQAppInterface paramQQAppInterface, String paramString)
  {
    jdField_a_of_type_JavaLangString = paramString;
    a(paramQQAppInterface, 62);
  }
  
  private void c(String paramString, int paramInt)
  {
    try
    {
      paramString = a(new ByteArrayInputStream(paramString.getBytes("utf-8")));
      if (paramString != null)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "qav_anychat_time_limit stream = " + paramString);
        }
        SharedPreUtils.e(((QQAppInterface)getAppRuntime()).getCurrentAccountUin()).edit().putString("qav_anychat_time_value", paramString).commit();
        SharedPreUtils.n(getAppRuntime().getApplication(), paramInt, jdField_a_of_type_JavaLangString);
      }
      return;
    }
    catch (Exception paramString)
    {
      do
      {
        paramString.printStackTrace();
      } while (!QLog.isColorLevel());
      QLog.i("SPLASH_ConfigServlet", 2, "parse qav_anychat_time_limit  exception : " + paramString.getMessage());
    }
  }
  
  private void d(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("handleResp_GetArGlobalConfig", 2, "handleResp_GetArGlobalConfig |  type= " + paramConfig.type.get());
    }
    ARGlobalConfigManager localARGlobalConfigManager = (ARGlobalConfigManager)((QQAppInterface)getAppRuntime()).getManager(219);
    int i;
    byte[] arrayOfByte;
    if (paramConfig.type.get() == 188)
    {
      i = paramConfig.version.get();
      if (paramIntent.getIntExtra("ar_global_key_config_version", 0) == i) {
        break label363;
      }
      if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
        break label334;
      }
      paramIntent = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramIntent == null) {
        break label315;
      }
      if (paramIntent.compress.get() != 1) {
        break label301;
      }
      arrayOfByte = OlympicUtil.a(paramIntent.content.get().toByteArray());
      if (arrayOfByte == null) {
        break label382;
      }
    }
    for (;;)
    {
      try
      {
        paramIntent = new String(arrayOfByte, "UTF-8");
        if (paramIntent != null)
        {
          if (QLog.isColorLevel()) {
            QLog.d("handleResp_GetArGlobalConfigSPLASH_ConfigServlet", 2, "handleRespGetHotDaysConfig, config_content is " + paramIntent);
          }
          i = paramConfig.version.get();
          if (localARGlobalConfigManager.a(paramIntent))
          {
            localARGlobalConfigManager.a(i);
            localARGlobalConfigManager.a();
          }
        }
        if (QLog.isColorLevel()) {
          QLog.d("handleResp_GetArGlobalConfigSPLASH_ConfigServlet", 2, "handleRespGetHotDaysConfig, config type 188");
        }
        return;
      }
      catch (UnsupportedEncodingException paramIntent)
      {
        if (QLog.isColorLevel()) {
          paramIntent.printStackTrace();
        }
        paramIntent = null;
        continue;
      }
      catch (OutOfMemoryError paramIntent)
      {
        if (QLog.isColorLevel()) {
          paramIntent.printStackTrace();
        }
        System.gc();
        try
        {
          paramIntent = new String(arrayOfByte, "UTF-8");
        }
        catch (Throwable paramIntent)
        {
          paramIntent = null;
        }
        continue;
      }
      label301:
      paramIntent = paramIntent.content.get().toStringUtf8();
      continue;
      label315:
      if (QLog.isColorLevel())
      {
        QLog.d("handleResp_GetArGlobalConfigSPLASH_ConfigServlet", 2, "handleRespGetHotDaysConfig, content is null");
        continue;
        label334:
        if (localARGlobalConfigManager != null) {
          localARGlobalConfigManager.b();
        }
        if (QLog.isColorLevel())
        {
          QLog.d("handleResp_GetArGlobalConfigSPLASH_ConfigServlet", 2, "we delete ARConfig info here");
          continue;
          label363:
          if (QLog.isColorLevel())
          {
            QLog.d("handleResp_GetArGlobalConfigSPLASH_ConfigServlet", 2, "handleRespGetHotDaysConfig, version same");
            continue;
            label382:
            paramIntent = null;
          }
        }
      }
    }
  }
  
  public static void d(QQAppInterface paramQQAppInterface, String paramString)
  {
    jdField_a_of_type_JavaLangString = paramString;
    a(paramQQAppInterface, 43);
  }
  
  private void d(String paramString, int paramInt)
  {
    int i;
    long l1;
    Object localObject1;
    Object localObject2;
    int k;
    Object localObject3;
    Object localObject4;
    long l2;
    long l3;
    Object localObject5;
    int j;
    try
    {
      Document localDocument = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(paramString.getBytes("utf-8")));
      NodeList localNodeList = localDocument.getElementsByTagName("pushbanner");
      paramString = "";
      i = 0;
      if (i < localNodeList.getLength())
      {
        l1 = Long.parseLong(localDocument.getElementsByTagName("channel").item(i).getFirstChild().getNodeValue());
        localObject1 = localDocument.getElementsByTagName("img").item(i).getFirstChild().getNodeValue();
        localObject2 = localDocument.getElementsByTagName("digest").item(i).getFirstChild().getNodeValue();
        k = Integer.parseInt(localDocument.getElementsByTagName("weight").item(i).getFirstChild().getNodeValue());
        localObject3 = localDocument.getElementsByTagName("md5").item(i).getFirstChild();
        if (localObject3 != null) {
          paramString = ((Node)localObject3).getNodeValue();
        }
        localObject3 = localDocument.getElementsByTagName("end").item(i).getFirstChild().getNodeValue();
        localObject4 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        l2 = ((SimpleDateFormat)localObject4).parse((String)localObject3).getTime();
        l3 = ((SimpleDateFormat)localObject4).parse(localDocument.getElementsByTagName("begin").item(i).getFirstChild().getNodeValue()).getTime();
        if (System.currentTimeMillis() > l2)
        {
          if (QLog.isColorLevel()) {
            QLog.i("SPLASH_ConfigServlet", 2, "this pushbanner is outdate , throw it");
          }
        }
        else
        {
          localObject3 = new StringBuffer();
          paramInt = 0;
          while (paramInt < localDocument.getElementsByTagName("url").item(i).getChildNodes().getLength())
          {
            ((StringBuffer)localObject3).append(localDocument.getElementsByTagName("url").item(i).getChildNodes().item(paramInt).getNodeValue());
            paramInt += 1;
          }
          localObject4 = ((StringBuffer)localObject3).toString();
          localObject3 = ((QQAppInterface)getAppRuntime()).getEntityManagerFactory().createEntityManager();
          localObject5 = ((EntityManager)localObject3).a(ExpiredPushBanner.class);
          j = 0;
          paramInt = 0;
          if (localObject5 != null)
          {
            localObject5 = ((List)localObject5).iterator();
            label459:
            j = paramInt;
            if (((Iterator)localObject5).hasNext())
            {
              if (((ExpiredPushBanner)((Iterator)localObject5).next()).cid != l1) {
                break label1051;
              }
              paramInt = 1;
              break label1061;
            }
          }
          if (j != 0)
          {
            if (!QLog.isColorLevel()) {
              break label1054;
            }
            QLog.i("SPLASH_ConfigServlet", 2, "this pushbanner had been close or click , throw it");
          }
        }
      }
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
      if (QLog.isColorLevel()) {
        QLog.i("SPLASH_ConfigServlet", 2, "push exception : " + paramString.getMessage());
      }
    }
    return;
    if (paramString.length() < 15)
    {
      if (QLog.isColorLevel()) {
        QLog.i("SPLASH_ConfigServlet", 2, "this pushbanner md5 length < 15 .throw");
      }
    }
    else
    {
      localObject5 = BaseApplication.getContext().getFilesDir().getAbsolutePath() + "/ADPic/" + paramString;
      if (!ConfigParser.a(paramString)) {
        ThreadManager.executeOnNetWorkThread(new abta(this, (String)localObject1));
      }
      Config.a.a(Config.a.a(l1, (String)localObject2, (byte)3, (String)localObject1, (String)localObject4, (String)localObject5, l3 + "|" + l2, (short)k, paramString));
      paramInt = 1;
      k = 1;
    }
    for (;;)
    {
      try
      {
        localObject1 = ((EntityManager)localObject3).a(ReportedBanner.class, false, null, null, null, null, "endtime DESC", null);
        j = paramInt;
        if (localObject1 != null)
        {
          j = paramInt;
          if (((List)localObject1).size() > 0)
          {
            localObject2 = ((List)localObject1).iterator();
            paramInt = k;
            if (((Iterator)localObject2).hasNext())
            {
              localObject4 = (ReportedBanner)((Iterator)localObject2).next();
              if ((localObject4 == null) || (((ReportedBanner)localObject4).cid != l1)) {
                continue;
              }
              paramInt = 0;
            }
            j = paramInt;
            if (((List)localObject1).size() > 18)
            {
              k = ((List)localObject1).size() - 1;
              j = paramInt;
              if (k >= 9)
              {
                localObject2 = (ReportedBanner)((List)localObject1).get(k);
                if ((localObject2 == null) || (((ReportedBanner)localObject2).cid == l1)) {
                  break label1064;
                }
                ((EntityManager)localObject3).b((Entity)localObject2);
                break label1064;
              }
            }
          }
        }
        if (j == 0) {
          break label1015;
        }
        ReportController.b((QQAppInterface)getAppRuntime(), "dc00898", "", "", "0X80087C0", "0X80087C0", (int)l1, 0, "", "", "", "");
        localObject1 = new ReportedBanner();
        ((ReportedBanner)localObject1).cid = l1;
        ((ReportedBanner)localObject1).md5 = paramString;
        ((ReportedBanner)localObject1).endtime = l2;
        ((EntityManager)localObject3).a((Entity)localObject1);
        if (!QLog.isColorLevel()) {
          break label1054;
        }
        QLog.i("SPLASH_ConfigServlet", 2, String.format(Locale.getDefault(), "push banner report cid: %d", new Object[] { Long.valueOf(l1) }));
      }
      catch (Throwable localThrowable)
      {
        if (!QLog.isColorLevel()) {
          break label1054;
        }
      }
      QLog.i("SPLASH_ConfigServlet", 2, String.format(Locale.getDefault(), "push banner report exception t: %s", new Object[] { localThrowable }));
      break label1054;
      label1015:
      if (QLog.isColorLevel())
      {
        QLog.i("SPLASH_ConfigServlet", 2, String.format(Locale.getDefault(), "push banner report repeat cid: %d", new Object[] { Long.valueOf(l1) }));
        break label1054;
        break label1061;
      }
      label1051:
      label1054:
      i += 1;
      break;
      label1061:
      break label459;
      label1064:
      k -= 1;
    }
  }
  
  private void e(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    paramIntent = paramIntent.getStringExtra("key_uin");
    if (!TextUtils.isEmpty(paramIntent))
    {
      int i = paramConfig.version.get();
      int j = SharedPreUtils.x(((QQAppInterface)getAppRuntime()).getApp(), paramIntent);
      if (QLog.isColorLevel()) {
        QLog.d("nearby_flower_operation_gray_tips", 2, "serverVersion=" + i + "|localVersion=" + j);
      }
      if (i != j)
      {
        SharedPreUtils.c(((QQAppInterface)getAppRuntime()).getApp(), paramIntent, i);
        NearbyFlowerManager localNearbyFlowerManager = (NearbyFlowerManager)((QQAppInterface)getAppRuntime()).getManager(123);
        if ((!paramConfig.content_list.has()) || (paramConfig.content_list.get().size() <= 0)) {
          break label246;
        }
        localList = paramConfig.content_list.get();
        if ((localList != null) && (localList.size() > 0))
        {
          localNearbyFlowerManager.a(paramIntent, (String)localList.get(0));
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 53,content: " + (String)localList.get(0) + ",version: " + paramConfig.version.get());
          }
        }
      }
    }
    label246:
    while (!QLog.isColorLevel())
    {
      List localList;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 53,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  public static void e(QQAppInterface paramQQAppInterface, String paramString)
  {
    long l = System.currentTimeMillis();
    if (QLog.isColorLevel()) {
      NearbyUtils.a("GENERAL_LBS_CONFIGS_CMD", new Object[] { "getGeneralLBSConfigs", paramString, Long.valueOf(l) });
    }
    paramString = new NewIntent(paramQQAppInterface.getApp(), ConfigServlet.class);
    paramString.putExtra("k_cmd_type", new int[] { 87, 12, 174, 189 });
    paramQQAppInterface.startServlet(paramString);
  }
  
  private void e(ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    int j = SharedPreUtils.R(((QQAppInterface)getAppRuntime()).getApp(), jdField_a_of_type_JavaLangString);
    if (QLog.isColorLevel()) {
      QLog.i("SPLASH_ConfigServlet", 2, "pstn_switch_wording_config_version serverVersion=" + i + "|localVersion=" + j);
    }
    if (i != j)
    {
      SharedPreUtils.t(((QQAppInterface)getAppRuntime()).getApp(), jdField_a_of_type_JavaLangString, i);
      if ((paramConfig.content_list.get() == null) || (paramConfig.content_list.get().size() <= 0)) {
        break label236;
      }
      localStringBuilder = new StringBuilder(512);
      localStringBuilder.append("receiveAllConfigs|type: ").append(60);
      localIterator = paramConfig.content_list.get().iterator();
      while (localIterator.hasNext())
      {
        str = (String)localIterator.next();
        localStringBuilder.append(",content: ").append(str);
        a(str);
      }
      localStringBuilder.append(",version: ").append(paramConfig.version.get());
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, localStringBuilder.toString());
      }
    }
    label236:
    while (!QLog.isColorLevel())
    {
      StringBuilder localStringBuilder;
      Iterator localIterator;
      String str;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 60,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  /* Error */
  private void e(String paramString, int paramInt)
  {
    // Byte code:
    //   0: invokestatic 425	javax/xml/parsers/DocumentBuilderFactory:newInstance	()Ljavax/xml/parsers/DocumentBuilderFactory;
    //   3: invokevirtual 429	javax/xml/parsers/DocumentBuilderFactory:newDocumentBuilder	()Ljavax/xml/parsers/DocumentBuilder;
    //   6: new 431	java/io/ByteArrayInputStream
    //   9: dup
    //   10: aload_1
    //   11: ldc_w 433
    //   14: invokevirtual 437	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   17: invokespecial 440	java/io/ByteArrayInputStream:<init>	([B)V
    //   20: invokevirtual 446	javax/xml/parsers/DocumentBuilder:parse	(Ljava/io/InputStream;)Lorg/w3c/dom/Document;
    //   23: astore 14
    //   25: aload 14
    //   27: ldc_w 4847
    //   30: invokeinterface 454 2 0
    //   35: astore 15
    //   37: ldc 13
    //   39: astore 12
    //   41: fconst_0
    //   42: fstore 4
    //   44: fconst_0
    //   45: fstore 5
    //   47: iconst_0
    //   48: istore 10
    //   50: ldc 13
    //   52: astore 11
    //   54: fconst_0
    //   55: fstore 6
    //   57: fconst_0
    //   58: fstore_3
    //   59: ldc_w 4849
    //   62: astore_1
    //   63: ldc 13
    //   65: astore 13
    //   67: iconst_0
    //   68: istore 9
    //   70: iload 9
    //   72: aload 15
    //   74: invokeinterface 484 1 0
    //   79: if_icmpge +480 -> 559
    //   82: aload 14
    //   84: ldc_w 4033
    //   87: invokeinterface 454 2 0
    //   92: iload 9
    //   94: invokeinterface 460 2 0
    //   99: invokeinterface 466 1 0
    //   104: invokeinterface 469 1 0
    //   109: astore 13
    //   111: aload 14
    //   113: ldc_w 4039
    //   116: invokeinterface 454 2 0
    //   121: iload 9
    //   123: invokeinterface 460 2 0
    //   128: invokeinterface 466 1 0
    //   133: invokeinterface 469 1 0
    //   138: astore 12
    //   140: aload 14
    //   142: ldc_w 4850
    //   145: invokeinterface 454 2 0
    //   150: iload 9
    //   152: invokeinterface 460 2 0
    //   157: invokeinterface 466 1 0
    //   162: invokeinterface 469 1 0
    //   167: invokestatic 4856	java/lang/Float:parseFloat	(Ljava/lang/String;)F
    //   170: fstore 4
    //   172: aload 14
    //   174: ldc_w 4858
    //   177: invokeinterface 454 2 0
    //   182: iload 9
    //   184: invokeinterface 460 2 0
    //   189: invokeinterface 466 1 0
    //   194: invokeinterface 469 1 0
    //   199: invokestatic 4856	java/lang/Float:parseFloat	(Ljava/lang/String;)F
    //   202: fstore_3
    //   203: iconst_1
    //   204: istore 10
    //   206: aload 14
    //   208: ldc_w 4859
    //   211: invokeinterface 454 2 0
    //   216: iload 9
    //   218: invokeinterface 460 2 0
    //   223: invokeinterface 466 1 0
    //   228: invokeinterface 469 1 0
    //   233: invokestatic 4856	java/lang/Float:parseFloat	(Ljava/lang/String;)F
    //   236: fstore 5
    //   238: aload 14
    //   240: ldc_w 4860
    //   243: invokeinterface 454 2 0
    //   248: iload 9
    //   250: invokeinterface 460 2 0
    //   255: invokeinterface 466 1 0
    //   260: invokeinterface 469 1 0
    //   265: invokestatic 4856	java/lang/Float:parseFloat	(Ljava/lang/String;)F
    //   268: fstore 8
    //   270: aload 14
    //   272: ldc_w 4862
    //   275: invokeinterface 454 2 0
    //   280: iload 9
    //   282: invokeinterface 460 2 0
    //   287: invokeinterface 466 1 0
    //   292: invokeinterface 469 1 0
    //   297: astore 11
    //   299: aload 14
    //   301: ldc_w 4863
    //   304: invokeinterface 454 2 0
    //   309: iload 9
    //   311: invokeinterface 460 2 0
    //   316: invokeinterface 466 1 0
    //   321: invokeinterface 469 1 0
    //   326: invokestatic 4856	java/lang/Float:parseFloat	(Ljava/lang/String;)F
    //   329: fstore 7
    //   331: aload 14
    //   333: ldc_w 4859
    //   336: invokeinterface 454 2 0
    //   341: iload 9
    //   343: invokeinterface 460 2 0
    //   348: invokeinterface 466 1 0
    //   353: invokeinterface 469 1 0
    //   358: invokestatic 4856	java/lang/Float:parseFloat	(Ljava/lang/String;)F
    //   361: fstore 6
    //   363: aload 14
    //   365: ldc_w 4865
    //   368: invokeinterface 454 2 0
    //   373: iload 9
    //   375: invokeinterface 460 2 0
    //   380: invokeinterface 466 1 0
    //   385: invokeinterface 469 1 0
    //   390: astore_1
    //   391: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   394: ifeq +296 -> 690
    //   397: ldc 90
    //   399: iconst_2
    //   400: new 92	java/lang/StringBuilder
    //   403: dup
    //   404: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   407: ldc_w 4867
    //   410: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   413: aload 13
    //   415: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   418: ldc_w 4869
    //   421: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   424: aload 12
    //   426: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   429: ldc_w 4871
    //   432: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   435: fload 4
    //   437: invokevirtual 4874	java/lang/StringBuilder:append	(F)Ljava/lang/StringBuilder;
    //   440: ldc_w 4876
    //   443: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   446: fload_3
    //   447: invokevirtual 4874	java/lang/StringBuilder:append	(F)Ljava/lang/StringBuilder;
    //   450: ldc_w 4878
    //   453: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   456: iload 10
    //   458: invokevirtual 833	java/lang/StringBuilder:append	(Z)Ljava/lang/StringBuilder;
    //   461: ldc_w 4880
    //   464: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   467: fload 5
    //   469: invokevirtual 4874	java/lang/StringBuilder:append	(F)Ljava/lang/StringBuilder;
    //   472: ldc_w 4882
    //   475: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   478: fload 8
    //   480: invokevirtual 4874	java/lang/StringBuilder:append	(F)Ljava/lang/StringBuilder;
    //   483: ldc_w 4884
    //   486: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   489: aload 11
    //   491: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   494: ldc_w 4886
    //   497: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   500: fload 7
    //   502: invokevirtual 4874	java/lang/StringBuilder:append	(F)Ljava/lang/StringBuilder;
    //   505: ldc_w 4888
    //   508: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   511: aload_1
    //   512: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   515: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   518: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   521: goto +169 -> 690
    //   524: astore_1
    //   525: aload 14
    //   527: ldc_w 4889
    //   530: invokeinterface 454 2 0
    //   535: iload 9
    //   537: invokeinterface 460 2 0
    //   542: invokeinterface 466 1 0
    //   547: invokeinterface 469 1 0
    //   552: invokestatic 4856	java/lang/Float:parseFloat	(Ljava/lang/String;)F
    //   555: fstore_3
    //   556: goto -350 -> 206
    //   559: aload 13
    //   561: ifnull +126 -> 687
    //   564: aload 13
    //   566: invokevirtual 601	java/lang/String:trim	()Ljava/lang/String;
    //   569: ldc 13
    //   571: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   574: ifne +113 -> 687
    //   577: new 92	java/lang/StringBuilder
    //   580: dup
    //   581: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   584: aload_0
    //   585: invokevirtual 211	com/tencent/mobileqq/config/splashlogo/ConfigServlet:getAppRuntime	()Lmqq/app/AppRuntime;
    //   588: invokevirtual 2660	mqq/app/AppRuntime:getApplication	()Lmqq/app/MobileQQ;
    //   591: invokevirtual 3094	mqq/app/MobileQQ:getFilesDir	()Ljava/io/File;
    //   594: invokevirtual 3097	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   597: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   600: ldc_w 3122
    //   603: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   606: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   609: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   612: ldc_w 3122
    //   615: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   618: ldc_w 3167
    //   621: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   624: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   627: astore 14
    //   629: ldc_w 4891
    //   632: aload 13
    //   634: invokestatic 4896	com/tencent/mobileqq/msf/sdk/MsfSdkUtils:insertMtype	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    //   637: astore 13
    //   639: fload_3
    //   640: fstore 7
    //   642: fload_3
    //   643: fconst_0
    //   644: fcmpg
    //   645: ifge +8 -> 653
    //   648: ldc_w 1131
    //   651: fstore 7
    //   653: new 4898	abtb
    //   656: dup
    //   657: aload_0
    //   658: aload 14
    //   660: aload 13
    //   662: fload 4
    //   664: fload 5
    //   666: fload 7
    //   668: aload 11
    //   670: aload_1
    //   671: fload 6
    //   673: iload 10
    //   675: iload_2
    //   676: aload 12
    //   678: invokespecial 4901	abtb:<init>	(Lcom/tencent/mobileqq/config/splashlogo/ConfigServlet;Ljava/lang/String;Ljava/lang/String;FFFLjava/lang/String;Ljava/lang/String;FZILjava/lang/String;)V
    //   681: iconst_2
    //   682: aconst_null
    //   683: iconst_0
    //   684: invokestatic 3775	com/tencent/mobileqq/app/ThreadManager:post	(Ljava/lang/Runnable;ILcom/tencent/mobileqq/app/ThreadExcutor$IThreadListener;Z)V
    //   687: return
    //   688: astore_1
    //   689: return
    //   690: iload 9
    //   692: iconst_1
    //   693: iadd
    //   694: istore 9
    //   696: fload_3
    //   697: fstore 5
    //   699: fload 6
    //   701: fstore_3
    //   702: fload 7
    //   704: fstore 6
    //   706: goto -636 -> 70
    //   709: astore_1
    //   710: ldc_w 4849
    //   713: astore_1
    //   714: goto -323 -> 391
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	717	0	this	ConfigServlet
    //   0	717	1	paramString	String
    //   0	717	2	paramInt	int
    //   58	644	3	f1	float
    //   42	621	4	f2	float
    //   45	653	5	f3	float
    //   55	650	6	f4	float
    //   329	374	7	f5	float
    //   268	211	8	f6	float
    //   68	627	9	i	int
    //   48	626	10	bool	boolean
    //   52	617	11	str1	String
    //   39	638	12	str2	String
    //   65	596	13	str3	String
    //   23	636	14	localObject	Object
    //   35	38	15	localNodeList	NodeList
    // Exception table:
    //   from	to	target	type
    //   172	203	524	java/lang/Exception
    //   0	37	688	java/lang/Exception
    //   70	172	688	java/lang/Exception
    //   206	363	688	java/lang/Exception
    //   391	521	688	java/lang/Exception
    //   525	556	688	java/lang/Exception
    //   564	639	688	java/lang/Exception
    //   653	687	688	java/lang/Exception
    //   363	391	709	java/lang/Exception
  }
  
  private void f(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    paramIntent = paramIntent.getStringExtra("key_uin");
    if (!TextUtils.isEmpty(paramIntent))
    {
      int i = paramConfig.version.get();
      int j = SharedPreUtils.y(((QQAppInterface)getAppRuntime()).getApp(), paramIntent);
      if (QLog.isColorLevel()) {
        QLog.d("HotChatManager", 2, "serverVersion=" + i + "|localVersion=" + j);
      }
      if (i != j)
      {
        SharedPreUtils.d(((QQAppInterface)getAppRuntime()).getApp(), paramIntent, i);
        HotChatManager localHotChatManager = (HotChatManager)((QQAppInterface)getAppRuntime()).getManager(59);
        if ((!paramConfig.content_list.has()) || (paramConfig.content_list.get().size() <= 0)) {
          break label246;
        }
        localList = paramConfig.content_list.get();
        if ((localList != null) && (localList.size() > 0))
        {
          localHotChatManager.a(paramIntent, (String)localList.get(0));
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 78,content: " + (String)localList.get(0) + ",version: " + paramConfig.version.get());
          }
        }
      }
    }
    label246:
    while (!QLog.isColorLevel())
    {
      List localList;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 78,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  public static void f(QQAppInterface paramQQAppInterface, String paramString)
  {
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "getPrecoverConfig, PRECOVER_CONFIG_CMD, uin=" + paramString);
    }
    paramString = (PrecoverManager)paramQQAppInterface.getManager(178);
    if ((paramString != null) && (paramString.a() != null) && (paramString.a().d * 1000L <= 0L)) {}
    paramString = new NewIntent(paramQQAppInterface.getApp(), ConfigServlet.class);
    paramString.putExtra("k_cmd_type", new int[] { 113 });
    paramQQAppInterface.startServlet(paramString);
  }
  
  private void f(ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    int j = SharedPreUtils.f(((QQAppInterface)getAppRuntime()).getApp());
    if (QLog.isColorLevel()) {
      QLog.d("TroopRankConfig", 2, "handleTroopRankConfigCmd, serverVersion=" + i + "|localVersion=" + j);
    }
    byte[] arrayOfByte;
    if ((i != j) && (paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
    {
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramConfig != null)
      {
        if (paramConfig.compress.get() != 1) {
          break label297;
        }
        arrayOfByte = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (arrayOfByte == null) {
          break label292;
        }
      }
    }
    label292:
    label297:
    do
    {
      for (;;)
      {
        try
        {
          paramConfig = new String(arrayOfByte, "UTF-8");
          if (TextUtils.isEmpty(paramConfig)) {
            break;
          }
          boolean bool = TroopRankConfig.a(paramConfig);
          if (bool) {
            SharedPreUtils.e(((QQAppInterface)getAppRuntime()).getApp(), i);
          }
          if (QLog.isColorLevel()) {
            QLog.d("TroopRankConfig", 2, "refreshConfig ret=" + bool);
          }
          return;
        }
        catch (Exception paramConfig)
        {
          if (QLog.isColorLevel()) {
            QLog.w("TroopRankConfig", 2, "handleTroopRankConfigCmd", paramConfig);
          }
          paramConfig = null;
          continue;
        }
        catch (OutOfMemoryError paramConfig)
        {
          if (QLog.isColorLevel()) {
            QLog.w("TroopRankConfig", 2, "handleTroopRankConfigCmd", paramConfig);
          }
          System.gc();
          try
          {
            paramConfig = new String(arrayOfByte, "UTF-8");
          }
          catch (Throwable paramConfig)
          {
            if (QLog.isColorLevel()) {
              QLog.w("TroopRankConfig", 2, "handleTroopRankConfigCmd", paramConfig);
            }
          }
        }
        paramConfig = null;
        continue;
        paramConfig = paramConfig.content.get().toStringUtf8();
      }
    } while (!QLog.isColorLevel());
    QLog.d("TroopRankConfig", 2, "handleTroopRankConfigCmd, config_content is empty");
  }
  
  private void f(String paramString, int paramInt)
  {
    for (;;)
    {
      int i;
      try
      {
        String str4 = getAppRuntime().getApplication().getFilesDir().getAbsolutePath() + "/splashpic/";
        Object localObject2 = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(paramString.getBytes("utf-8")));
        NodeList localNodeList = ((Document)localObject2).getElementsByTagName("splash");
        String str3 = null;
        String str2 = null;
        Object localObject1 = null;
        paramString = "";
        String str1 = "";
        i = 0;
        if (i < localNodeList.getLength())
        {
          str3 = ((Document)localObject2).getElementsByTagName("img").item(i).getFirstChild().getNodeValue();
          str2 = ((Document)localObject2).getElementsByTagName("begin").item(i).getFirstChild().getNodeValue();
          localObject1 = ((Document)localObject2).getElementsByTagName("end").item(i).getFirstChild().getNodeValue();
          paramString = ((Document)localObject2).getElementsByTagName("md5").item(i).getFirstChild().getNodeValue();
          str1 = ((Document)localObject2).getElementsByTagName("channel").item(i).getFirstChild().getNodeValue();
          String str5 = ((Document)localObject2).getElementsByTagName("title").item(i).getFirstChild().getNodeValue();
          getAppRuntime().getApplication().getSharedPreferences("flash_car_game_config", 0).edit().putString("splash_title", str5).apply();
          if (QLog.isColorLevel()) {
            QLog.i("SPLASH_ConfigServlet", 2, "parse result,img == " + str3 + " ,begin = " + str2 + " ,end=" + (String)localObject1 + ",md5=" + paramString + " title = " + str5);
          }
        }
        else
        {
          if ((str3 == null) || (str3.trim().equals(""))) {
            break;
          }
          str3 = MsfSdkUtils.insertMtype("ConfigCheck", str3);
          localObject2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
          str2 = ((SimpleDateFormat)localObject2).parse(str2).getTime() + "|" + ((SimpleDateFormat)localObject2).parse((String)localObject1).getTime();
          SharedPreUtils.a(getAppRuntime().getApplication(), paramInt, str2, paramString);
          new File(getAppRuntime().getApplication().getFilesDir().getAbsolutePath() + "/splashpic");
          if (((SimpleDateFormat)localObject2).parse((String)localObject1).getTime() < System.currentTimeMillis())
          {
            paramString = new File(str4 + paramString);
            if (paramString.exists()) {
              paramString.delete();
            }
            if (!QLog.isColorLevel()) {
              break;
            }
            QLog.i("SPLASH_ConfigServlet", 2, "this splash is outdate, throw it");
            return;
          }
          localObject1 = new File(str4 + paramString);
          localObject2 = new File(str4 + str2 + "_" + paramString + "_" + str1);
          if (((File)localObject2).exists()) {
            break;
          }
          if (QLog.isColorLevel()) {
            QLog.i("SPLASH_ConfigServlet", 2, "begin a thread try to download");
          }
          ThreadManager.post(new abtc(this, (File)localObject1, str3, paramString, (File)localObject2, str4, str2, str1, str3), 5, null, true);
          return;
        }
      }
      catch (Exception paramString)
      {
        return;
      }
      i += 1;
    }
  }
  
  private void g(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    paramIntent = com.tencent.mobileqq.shortvideo.PtvTemplateManager.a((QQAppInterface)getAppRuntime());
    int j = paramConfig.version.get();
    int i = SharedPreUtils.h(((QQAppInterface)getAppRuntime()).getApp());
    if (!com.tencent.mobileqq.shortvideo.PtvTemplateManager.a()) {
      i = 0;
    }
    if (QLog.isColorLevel()) {
      QLog.d("PtvTemplateManager", 2, "serverVersion=" + j + "|localVersion=" + i);
    }
    if (j != i)
    {
      SharedPreUtils.f(((QQAppInterface)getAppRuntime()).getApp(), j);
      if ((!paramConfig.content_list.has()) || (paramConfig.content_list.get().size() <= 0)) {
        break label239;
      }
      localList = paramConfig.content_list.get();
      if ((localList != null) && (localList.size() > 0))
      {
        paramIntent.a((String)localList.get(0), (QQAppInterface)getAppRuntime(), 1);
        if (QLog.isColorLevel()) {
          QLog.d("PtvTemplateManager", 2, "receiveAllConfigs|type: 84,content: " + (String)localList.get(0) + ",version: " + paramConfig.version.get());
        }
      }
    }
    label239:
    while (!QLog.isColorLevel())
    {
      List localList;
      return;
    }
    QLog.d("PtvTemplateManager", 2, "receiveAllConfigs|type: 84,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  public static void g(QQAppInterface paramQQAppInterface, String paramString)
  {
    jdField_a_of_type_JavaLangString = paramString;
    a(paramQQAppInterface, 185);
  }
  
  private void g(ConfigurationService.Config paramConfig)
  {
    int i;
    int j;
    String str;
    try
    {
      QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
      if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
      {
        i = paramConfig.version.get();
        j = PublicAccountConfigUtil.a(localQQAppInterface);
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 81, version:" + paramConfig.version.get());
        }
        if (i != j)
        {
          Iterator localIterator = paramConfig.content_list.get().iterator();
          while (localIterator.hasNext())
          {
            str = (String)localIterator.next();
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 81, version:" + paramConfig.version.get() + ", content:" + str);
            }
            if (!PublicAccountConfigUtil.c(localQQAppInterface, str)) {
              break label246;
            }
            PublicAccountConfigUtil.c(localQQAppInterface);
            PublicAccountConfigUtil.a(localQQAppInterface, i);
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "received SERVICE_ACCOUNT_FOLDER_CONFIG_CMD save version: " + i);
            }
          }
          return;
        }
      }
    }
    catch (Exception paramConfig)
    {
      if (QLog.isColorLevel()) {
        QLog.e("SPLASH_ConfigServlet", 2, "received SERVICE_ACCOUNT_FOLDER_CONFIG_CMD error", paramConfig);
      }
      paramConfig.printStackTrace();
    }
    label246:
    do
    {
      do
      {
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "received SERVICE_ACCOUNT_FOLDER_CONFIG_CMD content error:" + str);
        break;
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServlet", 2, "received SERVICE_ACCOUNT_FOLDER_CONFIG_CMD remote version: " + i + " | localVersion: " + j);
      return;
    } while (!QLog.isColorLevel());
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 81, content_list is empty , version: " + paramConfig.version.get());
  }
  
  private void h(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    paramIntent = com.tencent.mobileqq.shortvideo.PtvTemplateManager.a((QQAppInterface)getAppRuntime());
    int j = paramConfig.version.get();
    int i = SharedPreUtils.j(((QQAppInterface)getAppRuntime()).getApp());
    if (!com.tencent.mobileqq.shortvideo.PtvTemplateManager.b()) {
      i = 0;
    }
    for (;;)
    {
      if (QLog.isColorLevel()) {
        QLog.d("PtvTemplateManager", 2, "serverVersion=" + j + "|localVersion=" + i);
      }
      if (j != i)
      {
        SharedPreUtils.h(((QQAppInterface)getAppRuntime()).getApp(), j);
        String str = b(paramConfig, i, 167);
        if (str == null) {
          break label187;
        }
        paramIntent.a(str, (QQAppInterface)getAppRuntime(), 2);
        if (QLog.isColorLevel()) {
          QLog.d("PtvTemplateManager", 2, "receiveAllConfigs|type: 167,content: " + str + ",version: " + paramConfig.version.get());
        }
      }
      label187:
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("PtvTemplateManager", 2, "receiveAllConfigs|type: 167,content_list is empty ,version: " + paramConfig.version.get());
      return;
    }
  }
  
  public static void h(QQAppInterface paramQQAppInterface, String paramString) {}
  
  private void h(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    int i = paramConfig.version.get();
    int j = SharedPreUtils.q(localQQAppInterface.getApp());
    if (QLog.isColorLevel()) {
      QLog.d("VideoDownCTWhiteList", 2, String.format("received VideoDownCTWhiteList remote version: %d, localVersion: %d, cmd: %d", new Object[] { Integer.valueOf(i), Integer.valueOf(j), Integer.valueOf(80) }));
    }
    if (i != j)
    {
      if ((paramConfig.content_list == null) || (paramConfig.content_list.size() <= 0)) {
        break label167;
      }
      str = (String)paramConfig.content_list.get(0);
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 80,content: " + str + ",version: " + paramConfig.version.get());
      }
      SharedPreUtils.s(localQQAppInterface.getApp(), i, str);
    }
    label167:
    while (!QLog.isColorLevel())
    {
      String str;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 80,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  private void i(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    NearbyGrayTipsManager localNearbyGrayTipsManager;
    String str;
    if (!TextUtils.isEmpty(paramIntent.getStringExtra("key_uin")))
    {
      int i = paramConfig.version.get();
      int j = SharedPreUtils.e(((QQAppInterface)getAppRuntime()).getApp());
      if (QLog.isColorLevel()) {
        QLog.d("nearby_aio_operation_gray_tips", 2, "serverVersion=" + i + "|localVersion=" + j);
      }
      if (i != j)
      {
        SharedPreUtils.d(((QQAppInterface)getAppRuntime()).getApp(), i);
        localNearbyGrayTipsManager = (NearbyGrayTipsManager)((QQAppInterface)getAppRuntime()).getManager(92);
        if ((!paramConfig.content_list.has()) || (paramConfig.content_list.get().size() <= 0)) {
          break label617;
        }
        paramIntent = paramConfig.content_list.get();
        if (QLog.isColorLevel()) {
          QLog.d("nearby_aio_operation_gray_tips", 2, "config.content_list size=" + paramIntent.size());
        }
        if ((paramIntent != null) && (paramIntent.size() > 0))
        {
          localNearbyGrayTipsManager.b();
          Iterator localIterator = paramIntent.iterator();
          do
          {
            if (!localIterator.hasNext()) {
              break;
            }
            str = (String)localIterator.next();
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 23,content: " + str + ",version: " + paramConfig.version.get());
            }
          } while (StringUtil.a(str));
        }
      }
    }
    for (;;)
    {
      try
      {
        localObject1 = new JSONObject(str);
        if (((JSONObject)localObject1).isNull("MD5")) {
          break label670;
        }
        paramIntent = ((JSONObject)localObject1).getString("MD5");
        if (TextUtils.isEmpty(paramIntent)) {
          break label667;
        }
        paramIntent = paramIntent.toLowerCase();
        if (((JSONObject)localObject1).isNull("URL")) {
          break label661;
        }
        localObject1 = ((JSONObject)localObject1).getString("URL");
        if (StringUtil.a((String)localObject1)) {
          break;
        }
        Object localObject2 = NearbyGrayTipsManager.a();
        localObject2 = new File((String)localObject2 + "temp.txt");
        if (!HttpDownloadUtil.a((QQAppInterface)getAppRuntime(), (String)localObject1, (File)localObject2)) {
          break label568;
        }
        if (QLog.isColorLevel()) {
          QLog.d("nearby_aio_operation_gray_tips", 2, "file download succeed. url=" + (String)localObject1);
        }
        localObject1 = MD5.getFileMD5((File)localObject2);
        if ((!StringUtil.a(paramIntent)) && ((localObject1 == null) || (!paramIntent.equals(((String)localObject1).toLowerCase())))) {
          break;
        }
        paramIntent = NearbyGrayTipsManager.a((File)localObject2);
        if (paramIntent != null)
        {
          localNearbyGrayTipsManager.a(paramIntent);
          localNearbyGrayTipsManager.a(paramIntent, true);
          localNearbyGrayTipsManager.b(paramIntent, true);
          NearbyGrayTipsManager.a(paramIntent);
        }
        ((File)localObject2).delete();
      }
      catch (JSONException paramIntent)
      {
        if (QLog.isColorLevel()) {
          QLog.d("nearby_aio_operation_gray_tips", 2, "JSONException was thrown when parse json!!! string=" + str);
        }
        paramIntent.printStackTrace();
      }
      break;
      label568:
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.d("nearby_aio_operation_gray_tips", 2, "file download failed. url=" + (String)localObject1);
      break;
      localNearbyGrayTipsManager.a();
      localNearbyGrayTipsManager.a(true);
      return;
      label617:
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 23,content_list is empty ,version: " + paramConfig.version.get());
      }
      localNearbyGrayTipsManager.b();
      return;
      label661:
      Object localObject1 = null;
      continue;
      label667:
      continue;
      label670:
      paramIntent = null;
    }
  }
  
  private void i(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    int i = paramConfig.version.get();
    int j = SharedPreUtils.r(localQQAppInterface.getApp());
    if (QLog.isColorLevel()) {
      QLog.d("MixMsgForwardConfig", 2, String.format("received MixMsgForwardConfig remote version: %d, localVersion: %d, cmd: %d", new Object[] { Integer.valueOf(i), Integer.valueOf(j), Integer.valueOf(111) }));
    }
    if (i != j)
    {
      if ((paramConfig.content_list == null) || (paramConfig.content_list.size() <= 0)) {
        break label167;
      }
      str = (String)paramConfig.content_list.get(0);
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 111,content: " + str + ",version: " + paramConfig.version.get());
      }
      SharedPreUtils.t(localQQAppInterface.getApp(), i, str);
    }
    label167:
    while (!QLog.isColorLevel())
    {
      String str;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 111,content_list is empty ,version:" + paramConfig.version.get());
  }
  
  private void j(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    int j = 0;
    paramIntent = (QQAppInterface)getAppRuntime();
    int i = paramConfig.version.get();
    if (i == SharedPreUtils.v(((QQAppInterface)getAppRuntime()).getApp(), jdField_a_of_type_JavaLangString)) {}
    for (;;)
    {
      return;
      SharedPreUtils.q(((QQAppInterface)getAppRuntime()).getApp(), i, jdField_a_of_type_JavaLangString);
      if ((paramConfig.content_list == null) || (paramConfig.content_list.size() <= 0)) {
        continue;
      }
      Object localObject1 = paramConfig.content_list.get();
      if ((localObject1 == null) || (((List)localObject1).size() <= 0)) {
        continue;
      }
      HashMap localHashMap = new HashMap();
      i = 0;
      if (i < ((List)localObject1).size())
      {
        Object localObject2 = (String)((List)localObject1).get(i);
        if (QLog.isColorLevel()) {
          QLog.d("Q.qqstory.fourTab", 2, "receiveAllConfigs|type: 115,content: " + (String)localObject2 + ",version: " + paramConfig.version.get());
        }
        if (TextUtils.isEmpty((CharSequence)localObject2)) {}
        for (;;)
        {
          i += 1;
          break;
          localObject2 = ((String)localObject2).split("=");
          if ((localObject2 != null) && (localObject2.length == 2))
          {
            localHashMap.put(localObject2[0], localObject2[1]);
            if (QLog.isColorLevel()) {
              QLog.i("Q.qqstory.fourTab", 2, "NowTabConfigCmd, name=" + localObject2[0] + ", val=" + localObject2[1]);
            }
          }
        }
      }
      paramConfig = (String)localHashMap.get("mqq_nowtab_plan");
      if (QLog.isColorLevel()) {
        QLog.i("nowtabPlan", 2, "nowtabPlan=" + paramConfig);
      }
      if (paramConfig != null) {}
      try
      {
        localObject1 = paramIntent.a().a();
        i = Integer.valueOf("" + ((String)localObject1).charAt(2)).intValue();
        k = Integer.valueOf(paramConfig).intValue();
        if (i != k)
        {
          localObject1 = new Integer[5];
          i = j;
        }
        switch (k)
        {
        case 0: 
          paramIntent.a().a = paramConfig.charAt(0);
          paramConfig = (String)localHashMap.get("mqq_nowtab_index");
          if (QLog.isColorLevel()) {
            QLog.i("Q.qqstory.fourTab:nowtabIndex", 2, "nowtabIndex=" + paramConfig);
          }
          if (paramConfig == null) {}
          break;
        }
      }
      catch (Exception paramConfig)
      {
        for (;;)
        {
          try
          {
            int k;
            for (;;)
            {
              paramIntent.getApp().getSharedPreferences("now_tab_sp", 0).edit().putInt("now_index_key", Integer.valueOf(paramConfig).intValue());
              paramIntent.a().jdField_b_of_type_Int = Integer.valueOf(paramConfig).intValue();
              paramConfig = (String)localHashMap.get("mqq_open_myvideo");
              if (QLog.isColorLevel()) {
                QLog.i("Q.qqstory:IsOpenMyVideo", 2, "IsOpenMyVideo=" + paramConfig);
              }
              try
              {
                if (TextUtils.isEmpty(paramConfig)) {
                  break;
                }
                ((QQStoryManager)paramIntent.getManager(180)).h(Boolean.parseBoolean(paramConfig));
                return;
              }
              catch (Exception paramIntent)
              {
                QLog.w("Q.qqstory:drawerMyVideoItem", 2, "drawerMyVideoItem is not value of Int!");
                return;
              }
            }
            if (i < localObject1.length)
            {
              localObject1[i] = Integer.valueOf(0);
              i += 1;
            }
            else
            {
              localObject1[2] = Integer.valueOf(k);
              if (QLog.isColorLevel()) {
                QLog.i("Q.qqstory.fourTab:nowtabPlan", 2, "case 0 1 nowtabPlan=" + paramConfig);
              }
              paramIntent.a().a((Integer[])localObject1);
              continue;
              paramConfig = paramConfig;
              QLog.w("Q.qqstory.fourTab:nowtabPlan", 2, "" + paramConfig.getMessage(), paramConfig);
              continue;
              localObject1[1] = Integer.valueOf(0);
              localObject1[2] = Integer.valueOf(k);
              paramIntent.a().a((Integer[])localObject1);
              if (QLog.isColorLevel())
              {
                QLog.i("Q.qqstory.fourTab:nowtabPlan", 2, "case 2 nowtabPlan=" + paramConfig);
                continue;
                localObject1[2] = Integer.valueOf(k);
                localObject1[1] = Integer.valueOf(1);
                paramIntent.a().a((Integer[])localObject1);
                if (QLog.isColorLevel()) {
                  QLog.i("Q.qqstory.fourTab:nowtabPlan", 2, "case 3 nowtabPlan=" + paramConfig);
                }
              }
            }
          }
          catch (Exception paramConfig)
          {
            QLog.w("Q.qqstory.fourTab:nowtabIndex", 2, "nowtabIndex is not value of Int!");
          }
        }
      }
    }
  }
  
  private void j(ConfigurationService.Config paramConfig)
  {
    com.tencent.mobileqq.shortvideo.PtvTemplateManager localPtvTemplateManager = com.tencent.mobileqq.shortvideo.PtvTemplateManager.a((QQAppInterface)getAppRuntime());
    int k = paramConfig.version.get();
    int i = SharedPreUtils.k(((QQAppInterface)getAppRuntime()).getApp());
    if (!com.tencent.mobileqq.shortvideo.PtvTemplateManager.c()) {
      i = 0;
    }
    int j;
    if (paramConfig.msg_content_list != null)
    {
      j = paramConfig.msg_content_list.size();
      if (QLog.isColorLevel()) {
        QLog.d("Doodle_Strokes_SPLASH_ConfigServlet", 2, String.format("个性笔触配置回包, serverVersion[%s], localVersion[%s], size[%s]", new Object[] { Integer.valueOf(k), Integer.valueOf(i), Integer.valueOf(j) }));
      }
      if (k != i) {
        break label115;
      }
    }
    label115:
    do
    {
      do
      {
        return;
        j = -1;
        break;
        if (j <= 0) {
          break label214;
        }
        paramConfig = b(paramConfig, i, 139);
        if (TextUtils.isEmpty(paramConfig)) {
          break label197;
        }
        localPtvTemplateManager.a(paramConfig, (QQAppInterface)getAppRuntime());
        SharedPreUtils.i(((QQAppInterface)getAppRuntime()).getApp(), k);
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServletDoodle_Strokes_", 2, "GetDoodleTemplateConfig|type: 个性笔触配置回包内容, content: \n" + paramConfig);
      return;
    } while (!QLog.isColorLevel());
    label197:
    QLog.d("Doodle_Strokes_SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: 个性笔触配置回包内容为空");
    return;
    label214:
    if (QLog.isColorLevel()) {
      QLog.d("Doodle_Strokes_SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: 个性笔触配置回包为空");
    }
    localPtvTemplateManager.c();
  }
  
  private void k(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    paramIntent = (QQAppInterface)getAppRuntime();
    int i = paramConfig.version.get();
    int j = SharedPreUtils.w(((QQAppInterface)getAppRuntime()).getApp(), jdField_a_of_type_JavaLangString);
    if (i == j) {}
    label179:
    label195:
    do
    {
      do
      {
        return;
        SharedPreUtils.r(((QQAppInterface)getAppRuntime()).getApp(), i, jdField_a_of_type_JavaLangString);
        for (;;)
        {
          try
          {
            if (paramConfig.msg_content_list != null)
            {
              i = paramConfig.msg_content_list.size();
              paramIntent = (NowDownloadEngineManager)paramIntent.getManager(266);
              if (i <= 0) {
                break label195;
              }
              paramConfig = b(paramConfig, j, 286);
              paramIntent.a(paramConfig);
              if (TextUtils.isEmpty(paramConfig)) {
                break label179;
              }
              if (!QLog.isColorLevel()) {
                break;
              }
              QLog.d("SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: handleNowDownloadEngineConfigCmd, content: \n" + paramConfig);
              return;
            }
          }
          catch (Exception paramIntent)
          {
            QLog.e("SPLASH_ConfigServlet", 2, "Exception e = " + paramIntent.toString());
            return;
          }
          i = -1;
        }
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: handleNowDownloadEngineConfigCmd null");
      return;
      paramIntent.a("");
    } while (!QLog.isColorLevel());
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 286,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  private void k(ConfigurationService.Config paramConfig)
  {
    dov.com.tencent.mobileqq.shortvideo.PtvTemplateManager localPtvTemplateManager = dov.com.tencent.mobileqq.shortvideo.PtvTemplateManager.a((QQAppInterface)getAppRuntime());
    int k = paramConfig.version.get();
    int i = SharedPreUtils.l(((QQAppInterface)getAppRuntime()).getApp());
    if (!dov.com.tencent.mobileqq.shortvideo.PtvTemplateManager.a()) {
      i = 0;
    }
    int j;
    if (paramConfig.msg_content_list != null)
    {
      j = paramConfig.msg_content_list.size();
      if (QLog.isColorLevel()) {
        QLog.d("DOV_Doodle_Strokes_SPLASH_ConfigServlet", 2, String.format("个性笔触配置回包, serverVersion[%s], localVersion[%s], size[%s]", new Object[] { Integer.valueOf(k), Integer.valueOf(i), Integer.valueOf(j) }));
      }
      if (k != i) {
        break label115;
      }
    }
    label115:
    do
    {
      do
      {
        return;
        j = -1;
        break;
        if (j <= 0) {
          break label214;
        }
        paramConfig = b(paramConfig, i, 310);
        if (TextUtils.isEmpty(paramConfig)) {
          break label197;
        }
        localPtvTemplateManager.a(paramConfig, (QQAppInterface)getAppRuntime());
        SharedPreUtils.j(((QQAppInterface)getAppRuntime()).getApp(), k);
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServletDOV_Doodle_Strokes_", 2, "GetDoodleTemplateConfig|type: 个性笔触配置回包内容, content: \n" + paramConfig);
      return;
    } while (!QLog.isColorLevel());
    label197:
    QLog.d("DOV_Doodle_Strokes_SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: 个性笔触配置回包内容为空");
    return;
    label214:
    if (QLog.isColorLevel()) {
      QLog.d("DOV_Doodle_Strokes_SPLASH_ConfigServlet", 2, "GetDoodleTemplateConfig|type: 个性笔触配置回包为空");
    }
    localPtvTemplateManager.a();
  }
  
  private void l(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0)) {}
    for (Object localObject1 = paramConfig.content_list.get();; localObject1 = null)
    {
      if ((localObject1 != null) && (((List)localObject1).size() > 0))
      {
        localHashMap = new HashMap();
        i = 0;
        if (i < ((List)localObject1).size())
        {
          localObject2 = (String)((List)localObject1).get(i);
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 101,content: " + (String)localObject2 + ",version: " + paramConfig.version.get());
          }
          if (TextUtils.isEmpty((CharSequence)localObject2)) {}
          for (;;)
          {
            i += 1;
            break;
            localObject2 = ((String)localObject2).split("=");
            if ((localObject2 != null) && (localObject2.length == 2))
            {
              localHashMap.put(localObject2[0], localObject2[1]);
              if (QLog.isColorLevel()) {
                QLog.i("SPLASH_ConfigServlet", 2, "GENERAL_CONFIGS_CMD, name=" + localObject2[0] + ", val=" + localObject2[1]);
              }
            }
          }
        }
        localObject1 = (String)localHashMap.get("mask_lightalk");
        localObject2 = (LightalkSwitchManager)localQQAppInterface.getManager(85);
        if (!"1".equals(localObject1))
        {
          bool = true;
          ((LightalkSwitchManager)localObject2).a(bool);
          localObject2 = (String)localHashMap.get("ptlogin_flag");
          localObject1 = BaseApplication.getContext().getSharedPreferences("mobileQQ", 4);
          ((SharedPreferences)localObject1).edit().putBoolean("ptlogin_flag" + getAppRuntime().getAccount(), "1".equalsIgnoreCase((String)localObject2)).commit();
          localObject2 = (String)localHashMap.get("msgrevoke_flag");
          if (QLog.isColorLevel()) {
            QLog.i("msgrevoke", 2, "GENERAL_CONFIGS_CMD, msgRevokeFlag=" + (String)localObject2);
          }
          if (localObject2 != null) {
            BaseApplication.getContext().getSharedPreferences("mobileQQ", 0).edit().putBoolean("msgrevoke_flag" + getAppRuntime().getAccount(), "1".equalsIgnoreCase((String)localObject2)).commit();
          }
          localObject2 = (String)localHashMap.get("lmr_block");
          if (QLog.isColorLevel()) {
            QLog.i("new_regprxy_switch", 2, "GENERAL_CONFIGS_CMD, new_regprxy_switch=" + (String)localObject2);
          }
          if (localObject2 != null) {
            BaseApplication.getContext().getSharedPreferences("mobileQQ", 0).edit().putBoolean("new_regprxy_switch", "1".equalsIgnoreCase((String)localObject2)).commit();
          }
          localObject2 = (String)localHashMap.get("qfind_report_gps_bt_stat");
          str = (String)localHashMap.get("qfind_searching");
          localObject3 = ((SharedPreferences)localObject1).edit();
          ((SharedPreferences.Editor)localObject3).putBoolean("qfind_searching" + getAppRuntime().getAccount(), "1".equals(str));
          ((SharedPreferences.Editor)localObject3).putBoolean("qfind_report_gps_bt_stat" + getAppRuntime().getAccount(), "1".equals(localObject2));
          ((SharedPreferences.Editor)localObject3).commit();
          if (QLog.isColorLevel()) {
            QLog.w("QFind", 2, "qfind flags qfindStatFlag=" + (String)localObject2 + ", qfind_searching=" + str);
          }
          localObject2 = (String)localHashMap.get("enable_public_device");
          if (localObject2 != null) {
            BaseApplication.getContext().getSharedPreferences("smartdevice_entry", 4).edit().putBoolean("enable_public_device" + "_" + getAppRuntime().getAccount(), "1".equalsIgnoreCase((String)localObject2)).commit();
          }
          localObject2 = (String)localHashMap.get("search_device_enable_https");
          if (localObject2 != null)
          {
            BaseApplication.getContext().getSharedPreferences("smartdevice_entry", 4).edit().putBoolean("search_device_enable_https" + "_" + getAppRuntime().getAccount(), "1".equalsIgnoreCase((String)localObject2)).commit();
            if (QLog.isColorLevel()) {
              QLog.w("smartdevice", 2, "search_device_enable_https=" + (String)localObject2);
            }
          }
          localObject2 = (String)localHashMap.get("mqq_calltab");
          str = (String)localHashMap.get("mqq_calltab_setting");
          if ((localObject2 != null) || (str != null))
          {
            localObject3 = new Integer[7];
            if (localObject2 != null)
            {
              if (((String)localObject2).indexOf('|') <= 0) {
                break label2231;
              }
              if (!localObject2.split("|")[0].equals("1")) {
                break label2226;
              }
              i = 1;
              localObject3[1] = Integer.valueOf(i);
            }
            if (str != null)
            {
              if (!str.equals("1")) {
                break label2260;
              }
              i = 1;
              localObject3[5] = Integer.valueOf(i);
            }
            localQQAppInterface.a((Integer[])localObject3);
          }
          localObject3 = (String)localHashMap.get("subscribe_discovery");
          if (!TextUtils.isEmpty((CharSequence)localObject3))
          {
            SubscriptRecommendController.d(localQQAppInterface, "1".equals(localObject3));
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "subscribe discovery btn config : " + (String)localObject3);
            }
          }
          if ((localObject2 == null) || (str == null))
          {
            localObject3 = new Integer[7];
            if (localObject2 == null)
            {
              localObject3[1] = Integer.valueOf("0111100".charAt(1) - '0');
              localObject3[2] = Integer.valueOf("0111100".charAt(2) - '0');
            }
            if (str == null)
            {
              localObject3[5] = Integer.valueOf("0111100".charAt(5) - '0');
              localObject3[6] = Integer.valueOf("0111100".charAt(6) - '0');
            }
            localQQAppInterface.a((Integer[])localObject3);
          }
          localObject2 = (String)localHashMap.get("share_to_news");
          if (localObject2 != null) {
            ReadInJoyHelper.a((String)localObject2, localQQAppInterface);
          }
          localObject2 = (String)localHashMap.get("synchronize_to_qzone");
          if (localObject2 != null) {
            ReadInJoyHelper.b((String)localObject2, localQQAppInterface);
          }
          localObject2 = (String)localHashMap.get("merge_feeds");
          if (localObject2 != null) {
            ReadInJoyHelper.d((String)localObject2, localQQAppInterface);
          }
          localObject2 = (String)localHashMap.get("kandian_feeds");
          if (localObject2 != null) {
            ReadInJoyHelper.e((String)localObject2, localQQAppInterface);
          }
          i = paramConfig.version.get();
          SharedPreUtils.j(getAppRuntime().getApplication(), i, jdField_a_of_type_JavaLangString);
          if ((paramIntent != null) && (paramIntent.hasExtra("update101Version"))) {
            SettingCloneUtil.writeValueForInt(getAppRuntime().getApplication(), jdField_a_of_type_JavaLangString, null, "qqsetting_calltab_show_key_version", paramIntent.getIntExtra("update101Version", 0));
          }
          ArkAppCenter.b((String)localHashMap.get("arkapp_pa_nshow"));
          NearbySPUtil.a(localQQAppInterface.getAccount(), "supportHotChatDemo", Boolean.valueOf("1".equals(localHashMap.get("hotchat_demo"))));
          paramIntent = (PttConfigController)localQQAppInterface.getManager(88);
          paramIntent.a((String)localHashMap.get("ptt_stream_slice_cfg"));
          paramIntent.b((String)localHashMap.get("ptt_optimize_cfg_v2"));
          paramIntent.c((String)localHashMap.get("ptt_pre_download"));
          paramIntent = (String)localHashMap.get("splashpic_charm_requirement");
          if (paramIntent != null) {
            HotChatManager.a(localQQAppInterface, paramIntent);
          }
          paramIntent = (String)localHashMap.get("kFreezeTipsShow");
          paramConfig = localQQAppInterface.getApp();
          if (Build.VERSION.SDK_INT <= 10) {
            break label2265;
          }
          i = 4;
          paramConfig = paramConfig.getSharedPreferences("qwallet_multi", i);
          if (paramConfig != null)
          {
            paramConfig = paramConfig.edit();
            if ((!TextUtils.isEmpty(paramIntent)) && (!"1".equals(paramIntent))) {
              break label2270;
            }
            bool = true;
            paramConfig.putBoolean("is_tenpay_yellowtip_valid", bool);
            paramIntent = (String)localHashMap.get("publicWhiteList");
            QWalletHelper.updatePublicAccWhiteMap(paramIntent);
            paramConfig.putString("publicAcc_white_list", paramIntent);
            paramConfig.commit();
          }
          QWalletHelper.updateHongBaoSpeedWitch(localQQAppInterface, (String)localHashMap.get("hongbao_speed"));
          paramIntent = (String)localHashMap.get("shortvideo_predownload_strategy");
          if (paramIntent == null) {}
        }
      }
      label2226:
      label2231:
      label2260:
      label2265:
      label2270:
      while (!QLog.isColorLevel()) {
        try
        {
          String str;
          i = Integer.valueOf(paramIntent).intValue();
          localQQAppInterface.a().a.set(i);
          paramIntent = (String)localHashMap.get("camera_compatible_list");
          if (paramIntent == null) {}
        }
        catch (Exception paramIntent)
        {
          try
          {
            CameraCompatibleList.a(paramIntent, true);
            paramIntent = (String)localHashMap.get("qqwifi_provider_mask");
            if (paramIntent != null) {
              ((SharedPreferences)localObject1).edit().putString("qqwifi_provider_mask", paramIntent).commit();
            }
            paramIntent = (String)localHashMap.get("signalling_switch");
            if (QLog.isColorLevel()) {
              QLog.i("signalling_switch", 2, "GENERAL_CONFIGS_CMD, signalling_switch=" + paramIntent);
            }
            if (paramIntent != null)
            {
              paramConfig = localQQAppInterface.a();
              if ("1".equals(paramIntent))
              {
                i = 1;
                paramConfig.b(i);
              }
            }
            else
            {
              paramIntent = (String)localHashMap.get("public_offline_search_enable");
              if (QLog.isColorLevel()) {
                QLog.i("PAOfflineSearchManager", 2, "GENERAL_CONFIGS_CMD, public_offline_search_enable=" + paramIntent);
              }
              if (paramIntent != null)
              {
                paramConfig = PAOfflineSearchManager.a();
                if (!"1".equals(paramIntent)) {
                  break label2340;
                }
                bool = true;
                paramConfig.jdField_b_of_type_Boolean = bool;
              }
              paramIntent = (String)localHashMap.get("public_advance_search_freq");
              if (QLog.isColorLevel()) {
                QLog.i("searchutils", 2, "GENERAL_CONFIGS_CMD, netsearchlevel=" + paramIntent);
              }
              if (paramIntent == null) {}
            }
          }
          catch (Exception paramIntent)
          {
            try
            {
              for (;;)
              {
                HashMap localHashMap;
                Object localObject2;
                Object localObject3;
                com.tencent.mobileqq.search.util.SearchUtils.jdField_b_of_type_Int = Integer.valueOf(paramIntent).intValue();
                paramIntent = (String)localHashMap.get("activity_dau_percent_report");
                if (QLog.isColorLevel()) {
                  QLog.d("Q.activity_dau", 2, "dauSwitch:" + paramIntent);
                }
                DAUStatistic.a(localQQAppInterface.c(), paramIntent);
                ProgressiveUtils.a((String)localHashMap.get("shortvideo_progressive_enable"));
                paramIntent = (String)localHashMap.get("aio_autoinput_time");
                if (paramIntent != null) {
                  i = 900;
                }
                try
                {
                  int j = Integer.parseInt(paramIntent);
                  i = j;
                }
                catch (NumberFormatException paramConfig)
                {
                  for (;;)
                  {
                    QLog.i("inputx", 2, "GENERAL_CONFIGS_CMD, aio_autoinput_time not a int");
                  }
                }
                if (QLog.isColorLevel()) {
                  QLog.i("inputx", 2, "GENERAL_CONFIGS_CMD, aio_autoinput_time=" + paramIntent);
                }
                BaseApplication.getContext().getSharedPreferences("mobileQQ", 0).edit().putInt("aio_autoinput_time", i).commit();
                paramIntent = (String)localHashMap.get("pic_thumb_400");
                if (QLog.isColorLevel()) {
                  QLog.i("inputx", 2, "GENERAL_CONFIGS_CMD, pic_thumb_400=" + paramIntent);
                }
                GeneralConfigUtils.a("pic_thumb_400Enable", paramIntent);
                paramIntent = (String)localHashMap.get("Show_Business_Card");
                if (QLog.isColorLevel()) {
                  QLog.d("BusinessCara_Manager", 2, "Show_Business_Card= " + paramIntent);
                }
                paramConfig = (BusinessCardManager)localQQAppInterface.getManager(111);
                if (paramConfig != null) {
                  paramConfig.a(0, "1".equals(paramIntent));
                }
                return;
                bool = false;
                continue;
                int i = 0;
                continue;
                if (((String)localObject2).equals("1")) {}
                for (i = 1;; i = 0)
                {
                  localObject3[1] = Integer.valueOf(i);
                  break;
                }
                i = 0;
                continue;
                i = 0;
                continue;
                bool = false;
                continue;
                paramIntent = paramIntent;
                if (QLog.isColorLevel())
                {
                  QLog.i("SPLASH_ConfigServlet", 2, paramIntent.getMessage());
                  continue;
                  paramIntent = paramIntent;
                  if (QLog.isColorLevel())
                  {
                    QLog.i("SPLASH_ConfigServlet", 2, "camera_compatible_list ERROR = " + paramIntent.getMessage());
                    continue;
                    i = 0;
                  }
                }
              }
              boolean bool = false;
            }
            catch (Exception paramIntent)
            {
              for (;;)
              {
                paramIntent.printStackTrace();
              }
            }
          }
        }
      }
      label2340:
      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 101,content_list is empty ,version: " + paramConfig.version.get());
      return;
    }
  }
  
  private void l(ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    SharedPreUtils.k(getAppRuntime().getApplication(), i, jdField_a_of_type_JavaLangString);
    Object localObject2 = null;
    Object localObject1 = localObject2;
    if (paramConfig.content_list != null)
    {
      localObject1 = localObject2;
      if (paramConfig.content_list.size() > 0) {
        localObject1 = paramConfig.content_list.get();
      }
    }
    if ((localObject1 != null) && (((List)localObject1).size() > 0))
    {
      localObject1 = (String)((List)localObject1).get(0);
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 102,content: " + (String)localObject1 + ",version: " + paramConfig.version.get());
      }
      if (!TextUtils.isEmpty((CharSequence)localObject1)) {}
      try
      {
        paramConfig = Xml.newPullParser();
        paramConfig.setInput(new ByteArrayInputStream(((String)localObject1).getBytes()), "UTF-8");
        for (i = 0; i != 1; i = paramConfig.next()) {
          if ((i == 2) && (paramConfig.getName().equalsIgnoreCase("JA_Switch"))) {
            JumpActivity.a(paramConfig.nextText(), true);
          }
        }
        while (!QLog.isColorLevel()) {}
      }
      catch (Exception paramConfig)
      {
        paramConfig = paramConfig;
        paramConfig.printStackTrace();
        return;
      }
      finally {}
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 102,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  private void m(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    com.tencent.mobileqq.shortvideo.PtvTemplateManager localPtvTemplateManager = com.tencent.mobileqq.shortvideo.PtvTemplateManager.a((QQAppInterface)getAppRuntime());
    int j = paramConfig.version.get();
    int i = SharedPreUtils.m(((QQAppInterface)getAppRuntime()).getApp());
    if (!com.tencent.mobileqq.shortvideo.PtvTemplateManager.d()) {
      i = 0;
    }
    if (QLog.isColorLevel()) {
      QLog.d("PtvTemplateManager", 2, "GetBlessSpecialPendantConfig serverVersion=" + j + "|localVersion=" + i);
    }
    if (j != i)
    {
      SharedPreUtils.k(((QQAppInterface)getAppRuntime()).getApp(), j);
      if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
        break label269;
      }
      paramIntent = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramIntent != null)
      {
        if (paramIntent.compress.get() != 1) {
          break label255;
        }
        paramIntent = OlympicUtil.a(paramIntent.content.get().toByteArray());
        if (paramIntent == null) {
          break label250;
        }
      }
    }
    label250:
    label255:
    while (!QLog.isColorLevel()) {
      for (;;)
      {
        try
        {
          paramIntent = new String(paramIntent, "UTF-8");
          localPtvTemplateManager.a(paramIntent, (QQAppInterface)getAppRuntime());
          if (QLog.isColorLevel()) {
            QLog.d("PtvTemplateManager", 2, "receiveAllConfigs|type: 145,content: " + paramIntent + ",version: " + paramConfig.version.get());
          }
          return;
        }
        catch (Exception paramIntent)
        {
          paramIntent.printStackTrace();
        }
        paramIntent = null;
        continue;
        paramIntent = paramIntent.content.get().toStringUtf8();
      }
    }
    label269:
    QLog.d("PtvTemplateManager", 2, "receiveAllConfigs|type: 145,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  private void m(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    if (QLog.isColorLevel()) {
      QLog.d("MobileUnityManager", 2, "CMD_PHONE_UNITY_BANNER_CONFIG");
    }
    PhoneUnityManager localPhoneUnityManager = (PhoneUnityManager)localQQAppInterface.getManager(101);
    i = localPhoneUnityManager.a();
    int m = paramConfig.version.get();
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "newVersion " + m);
    }
    if (i == m) {
      return;
    }
    localObject1 = null;
    Object localObject2;
    Object localObject6;
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
    {
      localObject2 = paramConfig.content_list.get();
      localObject6 = localObject1;
      if (localObject2 != null)
      {
        localObject6 = localObject1;
        if (((List)localObject2).size() > 0)
        {
          localObject1 = (String)((List)localObject2).get(0);
          localObject6 = localObject1;
          if (QLog.isColorLevel())
          {
            QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 34,content: " + (String)localObject1 + ",version: " + paramConfig.version.get());
            localObject6 = localObject1;
          }
        }
      }
    }
    for (;;)
    {
      try
      {
        if (TextUtils.isEmpty(localObject6)) {
          continue;
        }
        localPhoneUnityBannerData2 = new PhoneUnityBannerData();
      }
      catch (Throwable localThrowable2)
      {
        PhoneUnityBannerData localPhoneUnityBannerData2;
        XmlPullParser localXmlPullParser;
        int k;
        Object localObject3;
        PhoneUnityBannerData localPhoneUnityBannerData1 = null;
        i = 0;
        paramConfig = null;
        localObject1 = null;
        continue;
        localPhoneUnityBannerData1 = null;
        int j = 0;
        Object localObject4 = null;
        Object localObject5 = null;
        continue;
      }
      try
      {
        localXmlPullParser = Xml.newPullParser();
        localXmlPullParser.setInput(new ByteArrayInputStream(localObject6.getBytes()), "UTF-8");
        i = 0;
        paramConfig = null;
        localObject1 = null;
        k = 0;
        localPhoneUnityBannerData1 = localPhoneUnityBannerData2;
        j = i;
        localObject2 = paramConfig;
        localObject5 = localObject1;
        if (k == 1) {
          continue;
        }
        if (k != 2) {
          continue;
        }
        try
        {
          localObject2 = localXmlPullParser.getName();
          if (!((String)localObject2).equalsIgnoreCase("banner")) {
            continue;
          }
          k = localXmlPullParser.getAttributeCount();
          j = 0;
          if (j >= k) {
            continue;
          }
          localObject2 = localXmlPullParser.getAttributeName(j);
          if ("text".equals(localObject2))
          {
            localPhoneUnityBannerData2.jdField_b_of_type_JavaLangString = localXmlPullParser.getAttributeValue(j);
            j += 1;
            continue;
            localObject6 = localObject1;
            if (!QLog.isColorLevel()) {
              continue;
            }
            QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 34,content_list is empty ,version: " + paramConfig.version.get());
            localObject6 = localObject1;
            continue;
          }
          if (!"url".equals(localObject2)) {
            continue;
          }
          localPhoneUnityBannerData2.jdField_a_of_type_JavaLangString = localXmlPullParser.getAttributeValue(j);
          continue;
          QLog.e("PhoneContact.Manager", 1, "", localThrowable1);
        }
        catch (Throwable localThrowable1)
        {
          localPhoneUnityBannerData1 = localPhoneUnityBannerData2;
        }
      }
      catch (Throwable localThrowable3)
      {
        i = 0;
        paramConfig = null;
        localObject1 = null;
        localPhoneUnityBannerData1 = localPhoneUnityBannerData2;
        continue;
        continue;
        continue;
      }
      localObject5 = localObject1;
      localObject3 = paramConfig;
      j = i;
      localPhoneUnityManager.a(m, localObject6, localPhoneUnityBannerData1);
      ((PhoneContactManagerImp)localQQAppInterface.getManager(10)).a(j, localObject5, (String)localObject3);
      return;
      if ("dayNum".equals(localObject3)) {
        localPhoneUnityBannerData2.jdField_a_of_type_Int = Integer.valueOf(localXmlPullParser.getAttributeValue(j)).intValue();
      } else if ("dayIntervalNum".equals(localObject3)) {
        localPhoneUnityBannerData2.jdField_b_of_type_Int = Integer.valueOf(localXmlPullParser.getAttributeValue(j)).intValue();
      } else if ("totalNum".equals(localObject3)) {
        localPhoneUnityBannerData2.c = Integer.valueOf(localXmlPullParser.getAttributeValue(j)).intValue();
      } else if ("loginNum".equals(localObject3)) {
        localPhoneUnityBannerData2.e = Integer.valueOf(localXmlPullParser.getAttributeValue(j)).intValue();
      } else if ("banner".equals(localObject3)) {
        localPhoneUnityBannerData2.jdField_a_of_type_Boolean = "1".equals(localXmlPullParser.getAttributeValue(j));
      } else if ("setEntry".equals(localObject3)) {
        localPhoneUnityBannerData2.jdField_b_of_type_Boolean = "1".equals(localXmlPullParser.getAttributeValue(j));
      }
    }
    for (;;)
    {
      try
      {
        k = localXmlPullParser.next();
      }
      catch (Throwable localThrowable4)
      {
        localPhoneUnityBannerData1 = localPhoneUnityBannerData2;
      }
      if (((String)localObject3).equalsIgnoreCase("bindGuideWording"))
      {
        localObject3 = localXmlPullParser.nextText();
        localObject1 = localObject3;
      }
      else if (((String)localObject3).equalsIgnoreCase("bindGuideStyle"))
      {
        j = Integer.valueOf(localXmlPullParser.nextText()).intValue();
        i = j;
      }
      else
      {
        if (!((String)localObject3).equalsIgnoreCase("guideWording")) {
          break label836;
        }
        localObject3 = localXmlPullParser.nextText();
        paramConfig = (ConfigurationService.Config)localObject3;
      }
    }
  }
  
  private void n(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    int j = paramConfig.version.get();
    if (j == SharedPreUtils.a(localQQAppInterface.getApp(), "tencent_docs_config_version", jdField_a_of_type_JavaLangString)) {
      return;
    }
    ArrayList localArrayList = new ArrayList();
    Object localObject;
    if (paramConfig.msg_content_list.size() > 0)
    {
      paramConfig = paramConfig.msg_content_list.get().iterator();
      paramIntent = null;
      if (!paramConfig.hasNext()) {
        break label370;
      }
      localObject = (ConfigurationService.Content)paramConfig.next();
      if (((ConfigurationService.Content)localObject).compress.get() == 1)
      {
        localObject = OlympicUtil.a(((ConfigurationService.Content)localObject).content.get().toByteArray());
        if (localObject == null)
        {
          if (!QLog.isColorLevel()) {
            break label666;
          }
          QLog.e("SPLASH_ConfigServlet", 2, "buffer is null");
        }
      }
    }
    label666:
    for (;;)
    {
      if (QLog.isColorLevel()) {
        QLog.i("SPLASH_ConfigServlet", 2, "xmlContent :" + paramIntent);
      }
      if (paramIntent != null) {
        localArrayList.add(paramIntent);
      }
      break;
      try
      {
        paramIntent = new String((byte[])localObject, "UTF-8");
      }
      catch (UnsupportedEncodingException paramIntent)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServlet", 2, paramIntent, new Object[0]);
        }
        paramIntent = null;
      }
      continue;
      paramIntent = ((ConfigurationService.Content)localObject).content.get().toStringUtf8();
      continue;
      if (paramConfig.content_list.size() > 0)
      {
        if (QLog.isColorLevel()) {
          QLog.i("SPLASH_ConfigServlet", 2, "content_list_size " + paramConfig.content_list.size());
        }
        paramIntent = paramConfig.content_list.get().iterator();
        while (paramIntent.hasNext())
        {
          paramConfig = (String)paramIntent.next();
          if (QLog.isColorLevel()) {
            QLog.i("SPLASH_ConfigServlet", 2, "xmlContent :" + paramConfig);
          }
          if (paramConfig != null) {
            localArrayList.add(paramConfig);
          }
        }
      }
      label370:
      if ((localArrayList != null) && (localArrayList.size() > 0))
      {
        paramIntent = new HashMap();
        int i = 0;
        if (i < localArrayList.size())
        {
          paramConfig = (String)localArrayList.get(i);
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "handleTencentDocsConfigCmd receiveAllConfigs |type: 294,content: " + paramConfig + ",version: " + j);
          }
          if (TextUtils.isEmpty(paramConfig)) {}
          for (;;)
          {
            i += 1;
            break;
            paramConfig = paramConfig.split("=");
            if ((paramConfig != null) && (paramConfig.length == 2))
            {
              if (!TextUtils.isEmpty(paramConfig[1])) {
                paramConfig[1] = paramConfig[1].trim();
              }
              paramIntent.put(paramConfig[0], paramConfig[1]);
              if (QLog.isColorLevel()) {
                QLog.i("SPLASH_ConfigServlet", 2, "handleTencentDocsConfigCmd, name=" + paramConfig[0] + ", val=" + paramConfig[1]);
              }
            }
          }
        }
        TeamWorkUtils.a(localQQAppInterface, "1".equals((String)paramIntent.get("enable_tencent_docs_assistant")));
        TeamWorkUtils.b(localQQAppInterface, "1".equals((String)paramIntent.get("preload_tool_process")));
      }
      for (;;)
      {
        SharedPreUtils.a(localQQAppInterface.getApp(), "tencent_docs_config_version", jdField_a_of_type_JavaLangString, j);
        return;
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "handleTencentDocsConfigCmd receiveAllConfigs|type: 294,content_list is empty ,version: " + j);
        }
      }
    }
  }
  
  private void n(ConfigurationService.Config paramConfig)
  {
    try
    {
      QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
      if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
      {
        String str = (String)paramConfig.content_list.get(0);
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 32,content: " + str + ",version: " + paramConfig.version.get());
        }
        int i = paramConfig.version.get();
        int j = SharedPreUtils.n(localQQAppInterface.getApp());
        if (i != j)
        {
          if (!PublicAccountConfigUtil.a((QQAppInterface)getAppRuntime(), getAppRuntime().getApplication(), str)) {
            return;
          }
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_CONFIG_CMD save version: " + i);
          }
          SharedPreUtils.l(getAppRuntime().getApplication(), i);
          return;
        }
        if (!QLog.isColorLevel()) {
          return;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_CONFIG_CMD remote version: " + i + " | localVersion: " + j);
        return;
      }
    }
    catch (Exception paramConfig)
    {
      if (QLog.isColorLevel()) {
        QLog.e("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_CONFIG_CMD error", paramConfig);
      }
      paramConfig.printStackTrace();
      return;
    }
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 32,content_list is empty ,version: " + paramConfig.version.get());
    }
  }
  
  private void o(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    paramIntent = (QIMPtvTemplateManager)QIMManager.a(3);
    int j = paramConfig.version.get();
    int i = SharedPreUtils.E(((QQAppInterface)getAppRuntime()).getApp());
    if (!QIMPtvTemplateManager.a()) {
      i = 0;
    }
    for (;;)
    {
      if (QLog.isColorLevel()) {
        QLog.d("QIMPtvTemplateManager", 2, "serverVersion=" + j + "|localVersion=" + i);
      }
      if (j != i)
      {
        SharedPreUtils.x(((QQAppInterface)getAppRuntime()).getApp(), j);
        String str = a(paramConfig, i, 307);
        if (str == null) {
          break label200;
        }
        new ConfigSimplifier().a(str, QIMPtvTemplateManager.b.getAbsolutePath(), "temp_faceu_zip", new absv(this, paramIntent));
        if (QLog.isColorLevel()) {
          QLog.d("QIMPtvTemplateManager", 2, "receiveAllConfigs|type: 307,content: " + str + ",version: " + paramConfig.version.get());
        }
      }
      label200:
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("QIMPtvTemplateManager", 2, "receiveAllConfigs|type: 307,content_list is empty ,version: " + paramConfig.version.get());
      return;
    }
  }
  
  private void o(ConfigurationService.Config paramConfig)
  {
    try
    {
      QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
      if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
      {
        String str = (String)paramConfig.content_list.get(0);
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 35,content: " + str + ",version: " + paramConfig.version.get());
        }
        int i = paramConfig.version.get();
        int j = SharedPreUtils.G(localQQAppInterface.getApp(), localQQAppInterface.getAccount());
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "received PA_SUBCRIBE_RED_DOT remote version: " + i + " | localVersion: " + j);
        }
        if (i != j)
        {
          if ((PublicAccountConfigUtil.b((QQAppInterface)getAppRuntime(), getAppRuntime().getApplication(), str)) && (QLog.isColorLevel())) {
            QLog.d("SPLASH_ConfigServlet", 2, "received PA_SUBCRIBE_RED_DOT save version: " + i);
          }
          SharedPreUtils.l(getAppRuntime().getApplication(), localQQAppInterface.getAccount(), i);
          return;
        }
        if (!QLog.isColorLevel()) {
          return;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "received PA_SUBCRIBE_RED_DOT IGNORE THIS ACTION  because of SAME VERSION");
        return;
      }
    }
    catch (Exception paramConfig)
    {
      if (QLog.isColorLevel()) {
        QLog.e("SPLASH_ConfigServlet", 2, "received PA_SUBCRIBE_RED_DOT error", paramConfig);
      }
      paramConfig.printStackTrace();
      return;
    }
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 35,content_list is empty ,version: " + paramConfig.version.get());
    }
  }
  
  private void p(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    int j = paramConfig.version.get();
    int i = SharedPreUtils.D(((QQAppInterface)getAppRuntime()).getApp());
    if (!QIMPasterConfigManager.a()) {
      i = 0;
    }
    for (;;)
    {
      if (QLog.isColorLevel()) {
        QLog.d("QIMPasterConfigManager", 2, "serverVersion=" + j + "|localVersion=" + i);
      }
      if (j != i)
      {
        SharedPreUtils.w(((QQAppInterface)getAppRuntime()).getApp(), j);
        paramIntent = a(paramConfig, i, 304);
        if (paramIntent == null) {
          break label187;
        }
        new ConfigSimplifier().a(paramIntent, QIMPasterConfigManager.a.getAbsolutePath(), "temp_sticker_zip", new absw(this));
        if (QLog.isColorLevel()) {
          QLog.d("QIMPasterConfigManager", 2, "receiveAllConfigs|type: 304,content: " + paramIntent + ",version: " + paramConfig.version.get());
        }
      }
      label187:
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("QIMPasterConfigManager", 2, "receiveAllConfigs|type: 304,content_list is empty ,version: " + paramConfig.version.get());
      return;
    }
  }
  
  private void p(ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int i;
      try
      {
        QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          i = 0;
          if (i < paramConfig.content_list.size())
          {
            String str = (String)paramConfig.content_list.get(i);
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 66,content: " + str + ",version: " + paramConfig.version.get());
            }
            int j = paramConfig.version.get();
            int k = SharedPreUtils.H(localQQAppInterface.getApp(), localQQAppInterface.getAccount());
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "received SUBSCRIPT_RECOMMEND_CMD remote version: " + j + " | localVersion: " + k);
            }
            if ((j != k) || (paramConfig.content_list.size() > 0))
            {
              if ((PublicAccountConfigUtil.a((QQAppInterface)getAppRuntime(), str)) && (QLog.isColorLevel())) {
                QLog.d("SPLASH_ConfigServlet", 2, "received SUBSCRIPT_RECOMMEND_CMD save version: " + j);
              }
              SharedPreUtils.m(getAppRuntime().getApplication(), localQQAppInterface.getAccount(), j);
            }
            else if (QLog.isColorLevel())
            {
              QLog.d("SPLASH_ConfigServlet", 2, "received SUBSCRIPT_RECOMMEND_CMD IGNORE THIS ACTION  because of SAME VERSION");
            }
          }
        }
      }
      catch (Exception paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServlet", 2, "received subscript recommend config error,cmd : 66");
        }
      }
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 66,content_list is empty ,version: " + paramConfig.version.get());
      return;
      i += 1;
    }
  }
  
  private void q(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    paramIntent = (QIMMusicConfigManager)QIMManager.a(2);
    int j = paramConfig.version.get();
    int i = SharedPreUtils.C(((QQAppInterface)getAppRuntime()).getApp());
    if (!QIMMusicConfigManager.a()) {
      i = 0;
    }
    for (;;)
    {
      if (QLog.isColorLevel()) {
        QLog.d("QIMMusicConfigManager", 2, "serverVersion=" + j + "|localVersion=" + i);
      }
      if (j != i)
      {
        SharedPreUtils.v(((QQAppInterface)getAppRuntime()).getApp(), j);
        String str = a(paramConfig, i, 305);
        if (str == null) {
          break label200;
        }
        new ConfigSimplifier().a(str, QIMMusicConfigManager.a.getAbsolutePath(), "temp_music_zip", new absx(this, paramIntent));
        if (QLog.isColorLevel()) {
          QLog.d("QIMMusicConfigManager", 2, "receiveAllConfigs|type: 305,content: " + str + ",version: " + paramConfig.version.get());
        }
      }
      label200:
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("QIMMusicConfigManager", 2, "receiveAllConfigs|type: 305,content_list is empty ,version: " + paramConfig.version.get());
      return;
    }
  }
  
  private void q(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
    {
      str = (String)paramConfig.content_list.get(0);
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 43,content: " + str + ",version: " + paramConfig.version.get());
      }
      i = paramConfig.version.get();
      j = SharedPreUtils.O(localQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "received READINJOY_LOCAL_CHANNEL_CONFIG_CMD remote version: " + i + " | localVersion: " + j);
      }
      if (i != j)
      {
        SharedPreUtils.q(localQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, i);
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "received READINJOY_LOCAL_CHANNEL_CONFIG_CMD save version: " + i);
        }
        a(i, "LocalChannelCity", str, localQQAppInterface);
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "received READINJOY_LOCAL_CHANNEL_CONFIG_CMD save to database");
        }
      }
    }
    while (!QLog.isColorLevel())
    {
      String str;
      int i;
      int j;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 43,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  private void r(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    paramIntent = (DynamicTextConfigManager)QIMManager.a(7);
    int j = paramConfig.version.get();
    int i = SharedPreUtils.a(((QQAppInterface)getAppRuntime()).getApp());
    if (!DynamicTextConfigManager.b()) {
      i = 0;
    }
    for (;;)
    {
      if (QLog.isColorLevel()) {
        QLog.d("DText", 2, "serverVersion=" + j + "|localVersion=" + i);
      }
      if (j != i)
      {
        SharedPreUtils.a(((QQAppInterface)getAppRuntime()).getApp(), j);
        String str = a(paramConfig, i, 309);
        if (str == null) {
          break label177;
        }
        paramIntent.a(str);
        if (QLog.isColorLevel()) {
          QLog.d("DText", 2, "receiveAllConfigs|type: 309,content: " + str + ",version: " + paramConfig.version.get());
        }
      }
      label177:
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("DText", 2, "receiveAllConfigs|type: 309,content_list is empty ,version: " + paramConfig.version.get());
      return;
    }
  }
  
  private void r(ConfigurationService.Config paramConfig)
  {
    try
    {
      int i = SharedPreUtils.t(((QQAppInterface)getAppRuntime()).getApp());
      int j = paramConfig.version.get();
      if (i != j)
      {
        ThreadManager.post(new abtd(this, paramConfig), 8, null, false);
        return;
      }
      if (QLog.isColorLevel())
      {
        QLog.d("SPLASH_ConfigServlet", 2, "received HOTCHAT_SCENE_CONFIGS_CMD same version, " + j);
        return;
      }
    }
    catch (Exception paramConfig)
    {
      paramConfig.printStackTrace();
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "received HOTCHAT_SCENE_CONFIGS_CMD, EXCEPTION" + paramConfig.toString());
      }
    }
  }
  
  private void s(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    for (;;)
    {
      try
      {
        int i = PatchSharedPreUtil.a(BaseApplicationImpl.sApplication);
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          int j = paramConfig.version.get();
          QLog.d("PatchLogTag", 1, "handlePatchConfigCmd server version: " + j + " | localVersion: " + i + ", content_list size: " + paramConfig.content_list.size());
          if (j != i)
          {
            i = 0;
            if (i < paramConfig.content_list.size())
            {
              String str = (String)paramConfig.content_list.get(i);
              QLog.d("PatchLogTag", 1, "handlePatchConfigCmd index=" + i + ", content=" + str);
              PatchConfigManager.a(BaseApplicationImpl.sApplication, str);
              i += 1;
              continue;
            }
            PatchSharedPreUtil.a(BaseApplicationImpl.sApplication, j);
            PatchReporter.a(BaseApplicationImpl.sApplication, localQQAppInterface.c(), "actPatchConfig", 100, "");
            PatchFileManager.a(localQQAppInterface);
            return;
          }
          QLog.d("PatchLogTag", 1, "handlePatchConfigCmd not update config as same version");
          continue;
        }
        QLog.d("PatchLogTag", 1, "handlePatchConfigCmd content_list is empty");
      }
      catch (Throwable paramConfig)
      {
        QLog.e("PatchLogTag", 1, "handlePatchConfigCmd throwable=" + paramConfig);
        PatchReporter.a(BaseApplicationImpl.sApplication, localQQAppInterface.c(), "actPatchConfig", 102, "");
        return;
      }
    }
  }
  
  private void t(ConfigurationService.Config paramConfig)
  {
    Object localObject = (QQAppInterface)getAppRuntime();
    int j = paramConfig.version.get();
    int k = SharedPreUtils.o(((QQAppInterface)localObject).getApp());
    int i;
    if (paramConfig.msg_content_list != null)
    {
      i = paramConfig.msg_content_list.size();
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 186, localVersion: " + k + ", serverVersion: " + j + ", size: " + i);
      }
      if (j != k) {
        break label107;
      }
    }
    label107:
    do
    {
      do
      {
        do
        {
          return;
          i = -1;
          break;
          if (i <= 0) {
            break label221;
          }
          paramConfig = b(paramConfig, k, 186);
          if (TextUtils.isEmpty(paramConfig)) {
            break label205;
          }
          SharedPreUtils.m(((QQAppInterface)localObject).getApp(), j);
          SharedPreUtils.j(((QQAppInterface)localObject).getApp(), paramConfig);
          localObject = ((ArkAppCenter)((QQAppInterface)localObject).getManager(120)).a();
          ((ArkAiAppCenter)localObject).c();
          ((ArkAiAppCenter)localObject).a(paramConfig);
        } while (!QLog.isColorLevel());
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 186, content=" + paramConfig);
        return;
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 186, content is empty");
      return;
    } while (!QLog.isColorLevel());
    label205:
    label221:
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 186, config_list is empty");
  }
  
  private void u(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    int j = paramConfig.version.get();
    int k = SharedPreUtils.p(localQQAppInterface.getApp());
    int i;
    if (paramConfig.msg_content_list != null)
    {
      i = paramConfig.msg_content_list.size();
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 250, localVersion: " + k + ", serverVersion: " + j + ", size: " + i);
      }
      if (j != k) {
        break label107;
      }
    }
    label107:
    do
    {
      do
      {
        do
        {
          return;
          i = -1;
          break;
          if (i <= 0) {
            break label195;
          }
          paramConfig = b(paramConfig, k, 250);
          if (TextUtils.isEmpty(paramConfig)) {
            break label179;
          }
          SharedPreUtils.n(localQQAppInterface.getApp(), j);
          SharedPreUtils.k(localQQAppInterface.getApp(), paramConfig);
        } while (!QLog.isColorLevel());
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 250, content=" + paramConfig);
        return;
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 250, content is empty");
      return;
    } while (!QLog.isColorLevel());
    label179:
    label195:
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 250, config_list is empty");
  }
  
  private void v(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
    {
      str1 = (String)paramConfig.content_list.get(0);
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 50,content: " + str1 + ",version: " + paramConfig.version.get());
      }
      i = paramConfig.version.get();
      j = SharedPreUtils.D(localQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "received SEARCH_CONFIG_CMD remote version: " + i + " | localVersion: " + j);
      }
      if (i != j)
      {
        SharedPreUtils.i(localQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, i);
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "received SEARCH_CONFIG_CMD save version: " + i);
        }
        localIterator = paramConfig.content_list.get().iterator();
        while (localIterator.hasNext())
        {
          str2 = (String)localIterator.next();
          SearchConfigManager.a(localQQAppInterface, jdField_a_of_type_JavaLangString, str2);
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 50,config_content_item: " + str1 + ",version: " + paramConfig.version.get());
          }
        }
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "received SEARCH_CONFIG_CMD save to sps");
        }
      }
    }
    while (!QLog.isColorLevel())
    {
      String str1;
      int i;
      int j;
      Iterator localIterator;
      String str2;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 50,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  private void w(ConfigurationService.Config paramConfig)
  {
    ThreadManager.getSubThreadHandler().post(new abte(this, paramConfig));
  }
  
  private void x(ConfigurationService.Config paramConfig)
  {
    ThreadManager.post(new abss(this, paramConfig), 5, null, false);
  }
  
  private void y(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
    {
      str = (String)paramConfig.content_list.get(0);
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 61,content: " + str + ",version: " + paramConfig.version.get());
      }
      i = paramConfig.version.get();
      j = SharedPreUtils.u(localQQAppInterface.getApp());
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "received CAMERA_COMPATIBLE_LIST_CONFIG remote version: " + i + " | localVersion: " + j);
      }
      if (i != j)
      {
        SharedPreUtils.p(localQQAppInterface.getApp(), i);
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "received CAMERA_COMPATIBLE_LIST_CONFIG save version: " + i);
        }
        CameraCompatibleList.a(str, true);
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "received CAMERA_COMPATIBLE_LIST_CONFIG save to sps");
        }
      }
    }
    while (!QLog.isColorLevel())
    {
      String str;
      int i;
      int j;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 61,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  private void z(ConfigurationService.Config paramConfig)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
    {
      str = (String)paramConfig.content_list.get(0);
      i = paramConfig.version.get();
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 64,content: " + str + ",version: " + paramConfig.version.get());
      }
      if (i != SharedPreUtils.w(localQQAppInterface.getApp()))
      {
        SharedPreUtils.q(localQQAppInterface.getApp(), i);
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "received SHORTVIDEO_PROGRESSIVE_BLACKLIST_CONFIG save version: " + i);
        }
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "received SHORTVIDEO_PROGRESSIVE_BLACKLIST_CONFIG save to sps");
        }
      }
    }
    while (!QLog.isColorLevel())
    {
      String str;
      int i;
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 64,content_list is empty ,version: " + paramConfig.version.get());
  }
  
  void A(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    Object localObject2 = null;
    Object localObject1 = null;
    int i = SharedPreUtils.aD(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
    int j = paramConfig.version.get();
    if (i != j) {
      if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
      {
        paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
        if ((paramConfig != null) && (paramConfig.content.has())) {
          if (paramConfig.compress.get() == 1)
          {
            paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
            if (paramConfig == null) {
              break label339;
            }
          }
        }
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        SharedPreUtils.S(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
        ((CUOpenCardGuideMng)paramQQAppInterface.getManager(220)).a(paramConfig);
        if (QLog.isColorLevel()) {
          QLog.i("CU_OPEN_CARD_GUIDE", 2, String.format(Locale.getDefault(), "handleCUOpenCardGuideConfig reqVer: %d rspVer: %d config: %s", new Object[] { Integer.valueOf(i), Integer.valueOf(j), paramConfig }));
        }
        return;
      }
      catch (Exception paramConfig)
      {
        QLog.e("SPLASH_ConfigServlet", 1, "handleCUOpenCardGuideConfig|uncompress failed" + paramConfig);
        paramConfig = null;
        continue;
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      paramConfig = localObject1;
      if (QLog.isColorLevel())
      {
        QLog.i("CU_OPEN_CARD_GUIDE", 2, String.format(Locale.getDefault(), "handleCUOpenCardGuideConfig empty content", new Object[0]));
        paramConfig = localObject1;
        continue;
        paramConfig = localObject1;
        if (QLog.isColorLevel())
        {
          QLog.i("CU_OPEN_CARD_GUIDE", 2, String.format(Locale.getDefault(), "handleCUOpenCardGuideConfig empty config", new Object[0]));
          paramConfig = localObject1;
          continue;
          paramConfig = localObject2;
          if (QLog.isColorLevel())
          {
            QLog.i("CU_OPEN_CARD_GUIDE", 2, String.format(Locale.getDefault(), "handleCUOpenCardGuideConfig same version, no need to update", new Object[0]));
            paramConfig = localObject2;
            continue;
            label339:
            paramConfig = null;
          }
        }
      }
    }
  }
  
  public void C(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    boolean bool;
    if (i != paramQQAppInterface.getPreferences().getInt("tim_upgrade_hongdian_version", 0))
    {
      long l1 = System.currentTimeMillis();
      bool = PackageUtil.a(paramQQAppInterface.getApp(), "com.tencent.tim");
      long l2 = System.currentTimeMillis();
      if (QLog.isColorLevel()) {
        QLog.d("TimUpgradeHondianManager", 2, "is install TIM = " + bool + " time cost = " + (l2 - l1));
      }
      if (bool) {
        break label386;
      }
      paramConfig = a(paramConfig);
      if ((paramConfig == null) || (paramConfig.size() <= 0)) {}
    }
    try
    {
      Object localObject = new JSONObject((String)paramConfig.get(0));
      if (((JSONObject)localObject).has("AboutTIMRedDot"))
      {
        paramConfig = paramQQAppInterface.getApp().getSharedPreferences("tim_upgrade_hongdian_pre_" + paramQQAppInterface.c(), 0).edit();
        localObject = ((JSONObject)localObject).getJSONObject("AboutTIMRedDot");
        if (((JSONObject)localObject).has("On")) {
          if (((JSONObject)localObject).getInt("On") != 1) {
            break label374;
          }
        }
      }
      label374:
      for (bool = true;; bool = false)
      {
        paramConfig.putBoolean("tim_upgrade_hongdian_switch", bool);
        if (((JSONObject)localObject).has("AboutTitle")) {
          paramConfig.putString("tim_upgrade_hongdian_title", ((JSONObject)localObject).getString("AboutTitle"));
        }
        if (((JSONObject)localObject).has("AboutSubtitle")) {
          paramConfig.putString("tim_upgrade_hongdian_sub_title", ((JSONObject)localObject).getString("AboutSubtitle"));
        }
        if (((JSONObject)localObject).has("AndroidAboutURL"))
        {
          localObject = ((JSONObject)localObject).getString("AndroidAboutURL");
          paramConfig.putString("tim_upgrade_hongdian_url", (String)localObject);
          ((UpgradeTIMManager)paramQQAppInterface.getManager(255)).a((String)localObject);
        }
        paramConfig.commit();
        paramQQAppInterface = paramQQAppInterface.getPreferences().edit();
        paramQQAppInterface.putInt("tim_upgrade_hongdian_version", i);
        paramQQAppInterface.apply();
        return;
      }
      ((TimUpgradeHongdianManager)paramQQAppInterface.getManager(243)).a();
    }
    catch (JSONException paramQQAppInterface)
    {
      paramQQAppInterface.printStackTrace();
      return;
    }
    label386:
  }
  
  public void D(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    if (i != paramQQAppInterface.getPreferences().getInt("tim_login_jump", 0))
    {
      paramConfig = a(paramConfig);
      if ((paramConfig == null) || (paramConfig.size() <= 0)) {}
    }
    try
    {
      JSONObject localJSONObject = new JSONObject((String)paramConfig.get(0));
      if (localJSONObject.has("LoginedTipForTIM"))
      {
        paramConfig = paramQQAppInterface.getApp().getSharedPreferences("tim_login_shared_pre_" + paramQQAppInterface.c(), 0).edit();
        localJSONObject = localJSONObject.getJSONObject("LoginedTipForTIM");
        if (localJSONObject.has("On")) {
          if (localJSONObject.getInt("On") != 1) {
            break label463;
          }
        }
      }
      label463:
      for (boolean bool = true;; bool = false)
      {
        paramConfig.putBoolean("tim_login_s", bool);
        if (localJSONObject.has("ShowTipTimeIntervalAfterLogined")) {
          paramConfig.putInt("tim_login_tal", localJSONObject.getInt("ShowTipTimeIntervalAfterLogined"));
        }
        if (localJSONObject.has("ShowTipDay")) {
          paramConfig.putString("tim_login_sd", localJSONObject.getJSONArray("ShowTipDay").toString());
        }
        if (localJSONObject.has("ShowTipTime")) {
          paramConfig.putString("tim_login_st", localJSONObject.getJSONArray("ShowTipTime").toString());
        }
        if (localJSONObject.has("AndroidLimit")) {
          paramConfig.putInt("tim_login_l", localJSONObject.getInt("AndroidLimit"));
        }
        if (localJSONObject.has("ShowTipTotalCount")) {
          paramConfig.putInt("tim_login_tc", localJSONObject.getInt("ShowTipTotalCount"));
        }
        if (localJSONObject.has("ShowTipHourInterval")) {
          paramConfig.putInt("tim_login_sti", localJSONObject.getInt("ShowTipHourInterval"));
        }
        if (localJSONObject.has("Title")) {
          paramConfig.putString("tim_login_t", localJSONObject.getString("Title"));
        }
        if (localJSONObject.has("Message")) {
          paramConfig.putString("tim_login_c", localJSONObject.getString("Message"));
        }
        if (localJSONObject.has("Buttons")) {
          paramConfig.putString("tim_login_btns", localJSONObject.getJSONArray("Buttons").toString());
        }
        paramConfig.commit();
        paramQQAppInterface = paramQQAppInterface.getPreferences().edit();
        paramQQAppInterface.putInt("tim_login_jump", i);
        paramQQAppInterface.apply();
        return;
      }
      return;
    }
    catch (JSONException paramQQAppInterface)
    {
      paramQQAppInterface.printStackTrace();
    }
  }
  
  public void E(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    if (i != paramQQAppInterface.getPreferences().getInt("tim_pc_banner", 0))
    {
      paramConfig = a(paramConfig);
      if ((paramConfig == null) || (paramConfig.size() <= 0)) {}
    }
    try
    {
      JSONObject localJSONObject = new JSONObject((String)paramConfig.get(0));
      if (localJSONObject.has("PCTIMLoginBanner"))
      {
        paramConfig = paramQQAppInterface.getApp().getSharedPreferences("tim_pc_banner_shared_pre_" + paramQQAppInterface.c(), 0).edit();
        localJSONObject = localJSONObject.getJSONObject("PCTIMLoginBanner");
        if (localJSONObject.has("On")) {
          if (localJSONObject.getInt("On") != 1) {
            break label338;
          }
        }
      }
      label338:
      for (boolean bool = true;; bool = false)
      {
        paramConfig.putBoolean("tim_pc_banner_switch", bool);
        if (localJSONObject.has("bannerURL")) {
          paramConfig.putString("tim_pc_banner_image_url", localJSONObject.getString("bannerURL"));
        }
        if (localJSONObject.has("bannerVersion")) {
          paramConfig.putInt("tim_pc_banner_image_ver", localJSONObject.getInt("bannerVersion"));
        }
        if (localJSONObject.has("androidURL")) {
          paramConfig.putString("tim_pc_banner_click_url", localJSONObject.getString("androidURL"));
        }
        if (localJSONObject.has("linkText")) {
          paramConfig.putString("tim_pc_banner_link_text", localJSONObject.getString("linkText"));
        }
        if (localJSONObject.has("androidLinkURL")) {
          paramConfig.putString("tim_pc_banner_link_url", localJSONObject.getString("androidLinkURL"));
        }
        paramConfig.commit();
        paramQQAppInterface = paramQQAppInterface.getPreferences().edit();
        paramQQAppInterface.putInt("tim_pc_banner", i);
        paramQQAppInterface.apply();
        return;
      }
      return;
    }
    catch (JSONException paramQQAppInterface)
    {
      paramQQAppInterface.printStackTrace();
    }
  }
  
  public void F(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "TIM_CONVERT_TEAMWORK_CONFIG handleTimConvertTeamWorkConfig");
    }
    int i = paramConfig.version.get();
    if (i != paramQQAppInterface.getPreferences().getInt("tim_convert_teamwork", 0))
    {
      paramConfig = a(paramConfig);
      if ((paramConfig == null) || (paramConfig.size() <= 0)) {}
    }
    try
    {
      JSONObject localJSONObject = new JSONObject((String)paramConfig.get(0));
      if (localJSONObject.has("TIMDocs"))
      {
        paramConfig = paramQQAppInterface.getApp().getSharedPreferences("tim_convert_teamwork_pre_" + paramQQAppInterface.c(), 4).edit();
        localJSONObject = localJSONObject.getJSONObject("TIMDocs");
        if (localJSONObject.has("autoImportToSharedDocSwitch"))
        {
          if (localJSONObject.getInt("autoImportToSharedDocSwitch") != 1) {
            break label889;
          }
          bool = true;
          paramConfig.putBoolean("tim_convert_teamwork_switch", bool);
        }
        if (localJSONObject.has("openWithSharedDocInTimSwitch"))
        {
          if (localJSONObject.getInt("openWithSharedDocInTimSwitch") != 1) {
            break label895;
          }
          bool = true;
          label199:
          paramConfig.putBoolean("tim_convert_teamwork_open_with_share_doc", bool);
        }
        if (localJSONObject.has("openFileInTimSwitch"))
        {
          if (localJSONObject.getInt("openFileInTimSwitch") != 1) {
            break label901;
          }
          bool = true;
          label237:
          paramConfig.putBoolean("tim_convert_teamwork_open_file_in_tim", bool);
        }
        if (localJSONObject.has("aioSwitch"))
        {
          if (localJSONObject.getInt("aioSwitch") != 1) {
            break label907;
          }
          bool = true;
          label275:
          paramConfig.putBoolean("tim_convert_teamwork_show_aio_menu", bool);
        }
        if (localJSONObject.has("fileViewerMenuSwitch"))
        {
          if (localJSONObject.getInt("fileViewerMenuSwitch") != 1) {
            break label913;
          }
          bool = true;
          label313:
          paramConfig.putBoolean("tim_convert_teamwork_show_file_viewer_menu", bool);
        }
        if (localJSONObject.has("openFileInTimEntry")) {
          paramConfig.putInt("tim_convert_teamwork_tim_open_file_entry", localJSONObject.getInt("openFileInTimEntry"));
        }
        if (localJSONObject.has("androidURL")) {
          paramConfig.putString("tim_convert_teamwork_download_url", localJSONObject.getString("androidURL"));
        }
        if (localJSONObject.has("maxFileSizeToImportSharedDoc")) {
          paramConfig.putInt("tim_convert_teamwork_file_size", localJSONObject.getInt("maxFileSizeToImportSharedDoc"));
        }
        if (localJSONObject.has("insertGrayTipAfterOpenWithSharedDocInTim"))
        {
          if (localJSONObject.getInt("insertGrayTipAfterOpenWithSharedDocInTim") != 1) {
            break label919;
          }
          bool = true;
          label438:
          paramConfig.putBoolean("tim_convert_teamwork_show_convert_tip", bool);
        }
        if (localJSONObject.has("timVersion")) {
          paramConfig.putInt("tim_convert_teamwork_tim_version", localJSONObject.getInt("timVersion"));
        }
        if (localJSONObject.has("saveTipLine0")) {
          paramConfig.putString("tim_convert_teamwork_save_tip_0", localJSONObject.getString("saveTipLine0"));
        }
        if (localJSONObject.has("saveTipLine1")) {
          paramConfig.putString("tim_convert_teamwork_save_tip_1", localJSONObject.getString("saveTipLine1"));
        }
        if (localJSONObject.has("saveAndCloseTipLine0")) {
          paramConfig.putString("tim_convert_teamwork_save_and_close_tip_0", localJSONObject.getString("saveAndCloseTipLine0"));
        }
        if (localJSONObject.has("saveAndCloseTipLine1")) {
          paramConfig.putString("tim_convert_teamwork_save_and_close_tip_1", localJSONObject.getString("saveAndCloseTipLine1"));
        }
        if (localJSONObject.has("saveTipCount")) {
          paramConfig.putInt("tim_convert_teamwork_save_tip_count", localJSONObject.getInt("saveTipCount"));
        }
        if (localJSONObject.has("contentEditedTipLine0")) {
          paramConfig.putString("tim_convert_teamwork_content_edit_tip_0", localJSONObject.getString("contentEditedTipLine0"));
        }
        if (localJSONObject.has("contentEditedTipLine1")) {
          paramConfig.putString("tim_convert_teamwork_content_edit_tip_1", localJSONObject.getString("contentEditedTipLine1"));
        }
        if (localJSONObject.has("contentEditedTipCount")) {
          paramConfig.putInt("tim_convert_teamwork_content_edit_tip_count", localJSONObject.getInt("contentEditedTipCount"));
        }
        if (localJSONObject.has("docListEntryInFileSwitch"))
        {
          if (localJSONObject.getInt("docListEntryInFileSwitch") != 1) {
            break label925;
          }
          bool = true;
          label737:
          paramConfig.putBoolean("tim_myfile_teamwork_entry_list", bool);
        }
        if (localJSONObject.has("hideDocAuthoritySettingEntry"))
        {
          if (localJSONObject.getInt("hideDocAuthoritySettingEntry") != 1) {
            break label931;
          }
          bool = true;
          label775:
          paramConfig.putBoolean("tim_teamwork_hide_authorize_setting", bool);
        }
        if (localJSONObject.has("docListUrl")) {
          paramConfig.putString("tim_myfile_teamwork_list_url", localJSONObject.getString("docListUrl"));
        }
        if (localJSONObject.has("docListEntryInFileSwitch")) {
          if (localJSONObject.getInt("docListEntryInFileSwitch") != 1) {
            break label937;
          }
        }
      }
      label901:
      label907:
      label913:
      label919:
      label925:
      label931:
      label937:
      for (boolean bool = true;; bool = false)
      {
        paramConfig.putBoolean("tim_myfile_teamwork_entry_list", bool);
        paramConfig.commit();
        paramQQAppInterface = paramQQAppInterface.getPreferences().edit();
        paramQQAppInterface.putInt("tim_convert_teamwork", i);
        paramQQAppInterface.apply();
        return;
        label889:
        bool = false;
        break;
        label895:
        bool = false;
        break label199;
        bool = false;
        break label237;
        bool = false;
        break label275;
        bool = false;
        break label313;
        bool = false;
        break label438;
        bool = false;
        break label737;
        bool = false;
        break label775;
      }
      return;
    }
    catch (JSONException paramQQAppInterface)
    {
      paramQQAppInterface.printStackTrace();
    }
  }
  
  public void G(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    if (i != paramQQAppInterface.getPreferences().getInt("troop_link_config_version", 0))
    {
      paramConfig = a(paramConfig);
      if ((paramConfig != null) && (paramConfig.size() > 0))
      {
        paramConfig = (String)paramConfig.get(0);
        if (TroopLinkManager.a().a(paramConfig)) {
          paramQQAppInterface.getPreferences().edit().putInt("troop_link_config_version", i).commit();
        }
      }
    }
  }
  
  public void H(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    paramQQAppInterface = paramQQAppInterface.getPreferences();
    if (paramQQAppInterface == null) {}
    label17:
    do
    {
      break label17;
      do
      {
        return;
      } while (paramQQAppInterface.getInt("key_game_troop_bind_config_version", 0) == i);
      paramConfig = a(paramConfig);
      if ((paramConfig == null) || (paramConfig.size() <= 0)) {
        break;
      }
      paramConfig = (String)paramConfig.get(0);
    } while (paramConfig == null);
    for (;;)
    {
      try
      {
        paramConfig = new JSONObject(paramConfig);
        if ((!paramConfig.has("showBindGameEntry")) || (paramConfig.getInt("showBindGameEntry") != 1)) {
          break label266;
        }
        bool = true;
        paramQQAppInterface.edit().putBoolean("key_game_troop_bind_config_switch", bool).apply();
        paramQQAppInterface.edit().putInt("key_game_troop_bind_config_version", i).apply();
        if (!QLog.isColorLevel()) {
          break label17;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "game troop config set:" + bool);
        return;
      }
      catch (Exception paramQQAppInterface) {}
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.e("SPLASH_ConfigServlet", 2, "game troop config parse error:" + paramQQAppInterface.toString());
      return;
      paramQQAppInterface.edit().putBoolean("key_game_troop_bind_config_switch", false).apply();
      paramQQAppInterface.edit().putInt("key_game_troop_bind_config_version", i).apply();
      if (!QLog.isColorLevel()) {
        break;
      }
      QLog.d("SPLASH_ConfigServlet", 2, "game troop config empty content get");
      return;
      label266:
      boolean bool = false;
    }
  }
  
  public void I(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    int j = paramQQAppInterface.getPreferences().getInt("tim_aio_tips_bar_version", 0);
    if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.isEmpty()))
    {
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, new Object[] { "handleTimAIOTipsBar| config empty, delete config, version=", Integer.valueOf(i) });
      }
      paramQQAppInterface.getPreferences().edit().remove("tim_aio_tips_bar_version").apply();
      ((AppGuideTipsManager)paramQQAppInterface.getManager(217)).d();
    }
    Object localObject;
    do
    {
      do
      {
        return;
      } while (i == j);
      paramQQAppInterface.getPreferences().edit().putInt("tim_aio_tips_bar_version", i).apply();
      localObject = a(paramConfig);
    } while ((localObject == null) || (((List)localObject).size() <= 0));
    paramConfig = new AppGuideTipsConfig();
    try
    {
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, new Object[] { "handleTimAIOTipsBar| Get Config ", Integer.valueOf(254), ": ", ((List)localObject).get(0) });
      }
      localObject = new JSONObject((String)((List)localObject).get(0));
      if (((JSONObject)localObject).has("SendMessageAIOTopTip"))
      {
        localObject = ((JSONObject)localObject).getJSONObject("SendMessageAIOTopTip");
        paramConfig.switchKey = ((JSONObject)localObject).getString("switch");
        paramConfig.maxCount = Integer.valueOf(((JSONObject)localObject).getString("total")).intValue();
        paramConfig.duration = Long.valueOf(((JSONObject)localObject).getString("duration")).longValue();
        paramConfig.tipsUrl = ((JSONObject)localObject).getString("androidURL");
        paramConfig.tipsMsg = ((JSONObject)localObject).getString("title");
        paramConfig.msgTypeStr = ((JSONObject)localObject).getString("androidtypes");
        paramConfig.aioTypeStr = ((JSONObject)localObject).getString("androidAIOTypes");
      }
    }
    catch (JSONException localJSONException)
    {
      for (;;)
      {
        localJSONException.printStackTrace();
      }
    }
    paramQQAppInterface = (AppGuideTipsManager)paramQQAppInterface.getManager(217);
    paramQQAppInterface.a(paramConfig);
    paramQQAppInterface.c();
  }
  
  public void J(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    if (i != QmcfDevicesStrategy.a(paramQQAppInterface.getApp()))
    {
      paramConfig = a(paramConfig);
      if ((paramConfig != null) && (paramConfig.size() > 0)) {
        QmcfDevicesStrategy.a((String)paramConfig.get(0), i, paramQQAppInterface.getApp());
      }
    }
  }
  
  public void K(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    LightReplyMenuManager localLightReplyMenuManager;
    if (i != paramQQAppInterface.getPreferences().getInt("pic_light_reply_version_new", 0))
    {
      paramConfig = a(paramConfig);
      localLightReplyMenuManager = LightReplyMenuManager.a();
      if ((paramConfig == null) || (paramConfig.size() <= 0)) {
        break label107;
      }
      if (localLightReplyMenuManager.a((String)paramConfig.get(0), true)) {
        paramQQAppInterface.getPreferences().edit().putInt("pic_light_reply_version_new", i).commit();
      }
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "config has value");
      }
    }
    label107:
    do
    {
      return;
      localLightReplyMenuManager.a("", true);
      paramQQAppInterface.getPreferences().edit().putInt("pic_light_reply_version_new", i).commit();
    } while (!QLog.isColorLevel());
    QLog.d("SPLASH_ConfigServlet", 2, "config has no value");
  }
  
  public void L(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    boolean bool4 = true;
    boolean bool5 = false;
    int i = paramConfig.version.get();
    Object localObject2;
    SharedPreferences.Editor localEditor;
    Object localObject1;
    boolean bool1;
    if (i != paramQQAppInterface.getPreferences().getInt("data_migration_tim_version", 0))
    {
      paramConfig = a(paramConfig);
      localObject2 = paramQQAppInterface.getApp().getSharedPreferences("data_migration_tim", 0);
      localEditor = ((SharedPreferences)localObject2).edit();
      if ((paramConfig == null) || (paramConfig.size() <= 0)) {}
    }
    else
    {
      try
      {
        paramConfig = new JSONObject((String)paramConfig.get(0));
        if (!paramConfig.has("DataMigration")) {
          break label334;
        }
        localObject1 = paramConfig.getJSONObject("DataMigration");
        paramConfig = "";
        str1 = "";
        if (!((JSONObject)localObject1).has("switch")) {
          break label567;
        }
        if (((JSONObject)localObject1).getInt("switch") != 1) {
          break label369;
        }
        bool1 = true;
      }
      catch (JSONException paramConfig)
      {
        for (;;)
        {
          String str1;
          label173:
          paramConfig.printStackTrace();
        }
      }
      if (!((JSONObject)localObject1).has("uninstall")) {
        break label561;
      }
      if (((JSONObject)localObject1).getInt("uninstall") == 1)
      {
        bool1 = true;
        break label580;
        if (((JSONObject)localObject1).has("title")) {
          paramConfig = ((JSONObject)localObject1).getString("title");
        }
        if (((JSONObject)localObject1).has("content")) {
          str1 = ((JSONObject)localObject1).getString("content");
        }
        bool1 = bool5;
        if (((JSONObject)localObject1).has("uninstallNotify"))
        {
          if (((JSONObject)localObject1).getInt("uninstallNotify") != 1) {
            break label381;
          }
          bool1 = bool4;
          break label587;
        }
      }
    }
    label561:
    label567:
    label580:
    label587:
    for (;;)
    {
      if (((JSONObject)localObject1).has("uninstallTitle")) {}
      for (String str2 = ((JSONObject)localObject1).getString("uninstallTitle");; str2 = "")
      {
        if (((JSONObject)localObject1).has("uninstallContent")) {}
        for (localObject1 = ((JSONObject)localObject1).getString("uninstallContent");; localObject1 = "")
        {
          localObject2 = a((SharedPreferences)localObject2, paramQQAppInterface.getCurrentAccountUin(), bool2);
          if (TextUtils.isEmpty((CharSequence)localObject2))
          {
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "handleDataMigrationForTIM| remove all uins");
            }
            localEditor.clear();
          }
          for (;;)
          {
            label334:
            localEditor.apply();
            paramQQAppInterface = paramQQAppInterface.getPreferences().edit();
            paramQQAppInterface.putInt("data_migration_tim_version", i);
            paramQQAppInterface.apply();
            return;
            label369:
            bool1 = false;
            break;
            bool1 = false;
            break label580;
            label381:
            bool1 = false;
            break label587;
            localEditor.putString("data_migration_tim_uins", (String)localObject2);
            localEditor.putBoolean("data_migration_tim_uninstall_flag", bool3);
            localEditor.putString("data_migration_tim_title", paramConfig);
            localEditor.putString("data_migration_tim_content", str1);
            localEditor.putBoolean("data_migration_tim_uninstall_notify", bool1);
            localEditor.putString("data_migration_tim_uninstall_title", str2);
            localEditor.putString("data_migration_tim_uninstall_content", (String)localObject1);
            continue;
            paramConfig = a((SharedPreferences)localObject2, paramQQAppInterface.getCurrentAccountUin(), false);
            if (TextUtils.isEmpty(paramConfig))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "handleDataMigrationForTIM| remove all uins");
              }
              localEditor.clear();
            }
            else
            {
              localEditor.putString("data_migration_tim_uins", paramConfig);
            }
          }
        }
      }
      boolean bool3 = false;
      break label173;
      boolean bool2 = false;
      break;
      bool2 = bool1;
      break;
      bool3 = bool1;
      break label173;
    }
  }
  
  public void M(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    Object localObject;
    if (i != paramQQAppInterface.getPreferences().getInt("call_tim_config_version", 0))
    {
      localObject = a(paramConfig);
      paramConfig = paramQQAppInterface.getApp().getSharedPreferences("call_tim_config_pre" + paramQQAppInterface.c(), 0).edit();
      if ((localObject == null) || (((List)localObject).size() <= 0)) {
        break label262;
      }
    }
    for (;;)
    {
      try
      {
        localObject = new JSONObject((String)((List)localObject).get(0));
        if (((JSONObject)localObject).has("TIMFreeCloud"))
        {
          localObject = ((JSONObject)localObject).getJSONObject("TIMFreeCloud");
          if (((JSONObject)localObject).has("On")) {
            paramConfig.putBoolean("call_tim_config_switch", "1".equals(((JSONObject)localObject).getString("On")));
          }
          if (((JSONObject)localObject).has("Title")) {
            paramConfig.putString("call_tim_config_title", ((JSONObject)localObject).getString("Title"));
          }
          if (((JSONObject)localObject).has("androidURL")) {
            paramConfig.putString("call_tim_config_url", ((JSONObject)localObject).getString("androidURL"));
          }
        }
      }
      catch (JSONException localJSONException)
      {
        localJSONException.printStackTrace();
        continue;
      }
      paramConfig.commit();
      paramQQAppInterface = paramQQAppInterface.getPreferences().edit();
      paramQQAppInterface.putInt("call_tim_config_version", i);
      paramQQAppInterface.apply();
      return;
      label262:
      paramConfig.putBoolean("call_tim_config_switch", false);
    }
  }
  
  public void N(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    int j = paramQQAppInterface.getPreferences().getInt("homework_troop_config_version", 0);
    if (QLog.isColorLevel()) {
      QLog.i("SPLASH_ConfigServlet", 2, "handleHomeworkTroopConfig: ,version: " + paramConfig.version.get() + "| localVersion: " + j);
    }
    if (i != j)
    {
      paramConfig = a(paramConfig);
      localEditor = paramQQAppInterface.getApp().getSharedPreferences("homework_troop_config" + paramQQAppInterface.c(), 0).edit();
      if ((paramConfig != null) && (paramConfig.size() > 0))
      {
        str = (String)paramConfig.get(0);
        try
        {
          paramConfig = new JSONObject(str);
          if (paramConfig.has("HWTroopAIOTip"))
          {
            localObject = paramConfig.getJSONObject("HWTroopAIOTip");
            if (((JSONObject)localObject).has("show")) {
              localEditor.putInt("homework_troop_aio_tip_show", ((JSONObject)localObject).getInt("show"));
            }
          }
          if (paramConfig.has("keywordConfigs"))
          {
            localObject = paramConfig.getJSONArray("keywordConfigs").toString();
            localEditor.putString("troop_school_keyword_config", (String)localObject);
            ((SchoolTroopKeywordManager)paramQQAppInterface.getManager(261)).a((String)localObject);
          }
          ((TroopAppMgr)paramQQAppInterface.getManager(108)).a(paramConfig);
        }
        catch (JSONException paramConfig)
        {
          for (;;)
          {
            if (QLog.isColorLevel())
            {
              paramConfig = str;
              if (str == null) {
                paramConfig = "";
              }
              QLog.e("SPLASH_ConfigServlet", 2, new Object[] { "handleHomeworkTroopConfig json fail. content: ", paramConfig });
            }
            localEditor.clear();
          }
        }
        localEditor.commit();
        paramQQAppInterface.getPreferences().edit().putInt("homework_troop_config_version", i).commit();
      }
    }
    while (!QLog.isColorLevel()) {
      for (;;)
      {
        SharedPreferences.Editor localEditor;
        String str;
        Object localObject;
        return;
        localEditor.clear();
      }
    }
    QLog.i("SPLASH_ConfigServlet", 2, "handleHomeworkTroopConfig:localVersion == version = " + i);
  }
  
  void O(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if ((paramConfig.type.get() != 267) || (paramQQAppInterface == null)) {}
    int i;
    int j;
    do
    {
      return;
      i = SharedPreUtils.a(paramQQAppInterface.getApp(), "sport_config", jdField_a_of_type_JavaLangString);
      j = paramConfig.version.get();
    } while (i == j);
    ((SportManager)paramQQAppInterface.getManager(259)).a(paramConfig);
    SharedPreUtils.a(paramQQAppInterface.getApp(), "sport_config", jdField_a_of_type_JavaLangString, j);
  }
  
  public void P(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if ((paramConfig.type.get() != 281) || (paramQQAppInterface == null)) {}
    do
    {
      String str;
      do
      {
        return;
        str = a(paramConfig, SharedPreUtils.a(paramQQAppInterface.getApp(), "troop_gift_anim_limit", "0"), 281);
      } while (TextUtils.isEmpty(str));
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "handleTroopGiftLimitConfig content: " + str);
      }
      int i = paramConfig.version.get();
      SharedPreUtils.a(paramQQAppInterface.getApp(), "troop_gift_anim_limit", "0", i);
      try
      {
        i = new JSONObject(str).getInt("limitGiftAnimCount");
        com.tencent.mobileqq.troop.utils.AIOAnimationControlManager.jdField_b_of_type_Int = i;
        paramQQAppInterface = PreferenceManager.getDefaultSharedPreferences(paramQQAppInterface.getApp()).edit();
        paramQQAppInterface.putInt("AIOAnimationControlManager_limit_gif_count_MAX", i);
        paramQQAppInterface.commit();
        return;
      }
      catch (JSONException paramQQAppInterface) {}
    } while (!QLog.isColorLevel());
    QLog.w("SPLASH_ConfigServlet", 2, "handleTroopGiftLimitConfig error" + paramQQAppInterface.getMessage());
  }
  
  public void Q(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if ((paramConfig.type.get() != 284) || (paramQQAppInterface == null)) {}
    int i;
    int j;
    do
    {
      return;
      i = SharedPreUtils.a(paramQQAppInterface.getApp(), "task_entry_config_version", jdField_a_of_type_JavaLangString);
      j = paramConfig.version.get();
      if (QLog.isColorLevel()) {
        QLog.w("zivonchen", 2, "handleTaskEntryConfig reqVersion = " + i);
      }
    } while (i == j);
    SharedPreferences.Editor localEditor = paramQQAppInterface.getApp().getSharedPreferences("task_entry_config" + jdField_a_of_type_JavaLangString, 0).edit();
    paramConfig = a(paramConfig);
    String str1;
    if ((paramConfig != null) && (paramConfig.size() > 0))
    {
      str1 = (String)paramConfig.get(0);
      if (QLog.isColorLevel()) {
        QLog.w("zivonchen", 2, "handleTaskEntryConfig configJson = " + str1);
      }
    }
    for (;;)
    {
      try
      {
        Object localObject = new JSONObject(str1);
        paramConfig = ((JSONObject)localObject).optString("icon_url");
        String str2 = ((JSONObject)localObject).optString("night_icon_url");
        String str3 = ((JSONObject)localObject).optString("jump_url");
        localObject = ((JSONObject)localObject).optString("word");
        if ((!TextUtils.isEmpty(paramConfig)) && (!TextUtils.isEmpty(str3)))
        {
          localEditor.putBoolean("open", true);
          localEditor.putString("icon_url", paramConfig);
          localEditor.putString("night_icon_url", str2);
          localEditor.putString("jump_url", str3);
          localEditor.putString("word", (String)localObject);
          SharedPreUtils.a(paramQQAppInterface.getApp(), "task_entry_config_version", jdField_a_of_type_JavaLangString, j);
          localEditor.commit();
          return;
        }
        localEditor.putBoolean("open", false);
        localEditor.remove("icon_url");
        localEditor.remove("night_icon_url");
        localEditor.remove("jump_url");
        localEditor.remove("word");
        continue;
      }
      catch (JSONException paramConfig)
      {
        localEditor.clear();
        if (!QLog.isColorLevel()) {
          continue;
        }
        paramConfig = str1;
        if (str1 == null) {
          paramConfig = "";
        }
        QLog.e("zivonchen", 2, new Object[] { "handleTaskEntryConfig json fail. content: ", paramConfig });
        continue;
      }
      localEditor.clear();
    }
  }
  
  public void R(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    if (i != SVParamManager.a().a(paramQQAppInterface.getApp()))
    {
      paramConfig = a(paramConfig);
      if ((paramConfig != null) && (paramConfig.size() > 0))
      {
        paramConfig = (String)paramConfig.get(0);
        SVParamManager.a().a(paramConfig, i, paramQQAppInterface.getApp());
      }
    }
  }
  
  public void S(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = paramConfig.version.get();
    int j = SharedPreUtils.a(paramQQAppInterface.getApp(), "buluo_enter_config_version", jdField_a_of_type_JavaLangString);
    if (QLog.isColorLevel()) {
      QLog.i("SPLASH_ConfigServlet", 2, "handleBuluoEnterConfig: ,version: " + paramConfig.version.get() + "| localVersion: " + j);
    }
    if (i != j)
    {
      localObject1 = a(paramConfig);
      if ((localObject1 != null) && (((List)localObject1).size() > 0)) {
        localObject1 = (String)((List)localObject1).get(0);
      }
    }
    while (!QLog.isColorLevel())
    {
      do
      {
        try
        {
          paramConfig = new JSONObject((String)localObject1);
          if (paramConfig.has("jump_url"))
          {
            paramConfig = paramConfig.getJSONObject("jump_url");
            if (paramConfig.has("android"))
            {
              Object localObject2 = new JSONObject(paramConfig.getString("android"));
              if ((((JSONObject)localObject2).has("url")) && (((JSONObject)localObject2).has("scheme")))
              {
                paramConfig = ((JSONObject)localObject2).getString("scheme");
                localObject2 = ((JSONObject)localObject2).getString("url");
                paramConfig = paramConfig + Base64Util.encodeToString(((String)localObject2).getBytes(), 0);
                SharedPreUtils.c(paramQQAppInterface.getApp(), paramQQAppInterface.getCurrentAccountUin(), paramConfig);
                if (QLog.isColorLevel()) {
                  QLog.e("SPLASH_ConfigServlet", 2, new Object[] { "handleBuluoEnterConfig. buluoEntryUrl: ", paramConfig });
                }
              }
            }
          }
          SharedPreUtils.a(paramQQAppInterface.getApp(), "buluo_enter_config_version", jdField_a_of_type_JavaLangString, i);
          return;
        }
        catch (JSONException paramConfig)
        {
          for (;;)
          {
            Object localObject1;
            if (QLog.isColorLevel())
            {
              paramConfig = (ConfigurationService.Config)localObject1;
              if (localObject1 == null) {
                paramConfig = "";
              }
              QLog.e("SPLASH_ConfigServlet", 2, new Object[] { "handleBuluoEnterConfig json fail. content: ", paramConfig });
            }
          }
        }
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServlet", 2, "handleBuluoEnterConfig json fail. configContent is empty ,version: " + paramConfig.version.get());
      return;
    }
    QLog.i("SPLASH_ConfigServlet", 2, "handleBuluoEnterConfig:localVersion == version = " + i);
  }
  
  AVRedPacketConfig a(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    Object localObject2 = null;
    Object localObject1 = null;
    int i = ((AVRedPacketConfigManager)paramQQAppInterface.getManager(253)).a();
    int j = paramConfig.version.get();
    QLog.d("SPLASH_ConfigServlet", 1, "handleAVRedPacketConfig, version:" + j + ",localVersion:" + i);
    paramQQAppInterface = localObject2;
    if (i != j)
    {
      if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
        break label319;
      }
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      paramQQAppInterface = localObject2;
      if (paramConfig != null)
      {
        if (paramConfig.compress.get() != 1) {
          break label305;
        }
        paramQQAppInterface = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (paramQQAppInterface == null) {
          break label285;
        }
      }
    }
    for (;;)
    {
      try
      {
        paramQQAppInterface = new String(paramQQAppInterface, "UTF-8");
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "handleAVRedPacketConfig,xmlContent:" + paramQQAppInterface);
        }
        paramConfig = localObject1;
        if (paramQQAppInterface != null) {
          paramConfig = AVRedPacketConfig.parse(paramQQAppInterface);
        }
        paramQQAppInterface = paramConfig;
        if (paramConfig != null)
        {
          paramConfig.version = j;
          paramQQAppInterface = paramConfig;
        }
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "handleAVRedPacketConfig, redPacketConfig = " + paramQQAppInterface);
        }
        return paramQQAppInterface;
      }
      catch (Throwable paramQQAppInterface)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "Throwable:" + paramQQAppInterface.getMessage());
        }
        paramQQAppInterface = null;
        continue;
      }
      label285:
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "inflateConfigString error!");
      }
      paramQQAppInterface = null;
      continue;
      label305:
      paramQQAppInterface = paramConfig.content.get().toStringUtf8();
      continue;
      label319:
      AVRedPacketConfig.deleteLocalConfig(jdField_a_of_type_JavaLangString);
      paramQQAppInterface = localObject2;
      if (QLog.isColorLevel())
      {
        QLog.d("SPLASH_ConfigServlet", 2, "handleAVRedPacketConfig, msg_content_list is null");
        paramQQAppInterface = localObject2;
      }
    }
  }
  
  void a(Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanStarFaceConfig |  type= " + paramConfig.type.get());
    }
    ARGlobalConfigManager localARGlobalConfigManager = (ARGlobalConfigManager)((QQAppInterface)getAppRuntime()).getManager(219);
    int i;
    byte[] arrayOfByte;
    if (paramConfig.type.get() == 206)
    {
      i = paramConfig.version.get();
      if (paramIntent.getIntExtra("ar_scan_star_face_config_version", 0) == i) {
        break label353;
      }
      if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
        break label325;
      }
      paramIntent = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramIntent == null) {
        break label307;
      }
      if (paramIntent.compress.get() != 1) {
        break label293;
      }
      arrayOfByte = OlympicUtil.a(paramIntent.content.get().toByteArray());
      if (arrayOfByte == null) {
        break label371;
      }
    }
    for (;;)
    {
      try
      {
        paramIntent = new String(arrayOfByte, "UTF-8");
        if (paramIntent != null)
        {
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanStarFaceConfig, config_content is " + paramIntent);
          }
          i = paramConfig.version.get();
          if (localARGlobalConfigManager.b(paramIntent)) {
            localARGlobalConfigManager.b(i);
          }
        }
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanStarFaceConfig, config type 206");
        }
        return;
      }
      catch (UnsupportedEncodingException paramIntent)
      {
        if (QLog.isColorLevel()) {
          paramIntent.printStackTrace();
        }
        paramIntent = null;
        continue;
      }
      catch (OutOfMemoryError paramIntent)
      {
        if (QLog.isColorLevel()) {
          paramIntent.printStackTrace();
        }
        System.gc();
        try
        {
          paramIntent = new String(arrayOfByte, "UTF-8");
        }
        catch (Throwable paramIntent)
        {
          paramIntent = null;
        }
        continue;
      }
      label293:
      paramIntent = paramIntent.content.get().toStringUtf8();
      continue;
      label307:
      if (QLog.isColorLevel())
      {
        QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanStarFaceConfig, content is null");
        continue;
        label325:
        if (localARGlobalConfigManager != null) {
          localARGlobalConfigManager.c();
        }
        if (QLog.isColorLevel())
        {
          QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanStarFaceConfig we delete ARConfig info here");
          continue;
          label353:
          if (QLog.isColorLevel())
          {
            QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanStarFaceConfig, version same");
            continue;
            label371:
            paramIntent = null;
          }
        }
      }
    }
  }
  
  public void a(Intent paramIntent, boolean paramBoolean, ConfigurationService.Config paramConfig, int paramInt)
  {
    if (QLog.isColorLevel()) {
      QLog.d("Olympic.configServlet", 2, new Object[] { "handleResp_GetOlympicActConfig, success=", Boolean.valueOf(paramBoolean) });
    }
    int m = 0;
    int i = 0;
    int j = 2;
    int k;
    OlympicActConfig localOlympicActConfig;
    if ((paramBoolean) && (paramConfig != null) && (paramConfig.type.get() == 86))
    {
      if (QLog.isColorLevel()) {
        QLog.d("Olympic.configServlet", 2, new Object[] { "handleResp_GetOlympicActConfig, result=", Integer.valueOf(paramInt) });
      }
      if (paramInt == 0)
      {
        k = paramConfig.version.get();
        paramInt = paramIntent.getIntExtra("config_version", 0);
        if (QLog.isColorLevel()) {
          QLog.d("Olympic.configServlet", 2, new Object[] { "handleResp_GetOlympicActConfig, reqVersion=", Integer.valueOf(paramInt), ", receiveVersion=", Integer.valueOf(k) });
        }
        if (k != paramInt) {
          if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
          {
            paramIntent = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
            if (paramIntent != null)
            {
              j = paramIntent.task_id.get();
              if (paramIntent.compress.get() == 1)
              {
                paramConfig = OlympicUtil.a(paramIntent.content.get().toByteArray());
                if (paramConfig == null)
                {
                  paramInt = 4;
                  paramIntent = null;
                  if (QLog.isColorLevel()) {
                    QLog.d("Olympic.configServlet", 2, new Object[] { "handleResp_GetOlympicActConfig, xmlContent=", paramIntent });
                  }
                  localOlympicActConfig = OlympicActConfig.parse(getAppRuntime(), paramIntent);
                  if (QLog.isColorLevel())
                  {
                    if (localOlympicActConfig != null) {
                      break label522;
                    }
                    paramConfig = "null";
                    label293:
                    QLog.d("Olympic.configServlet", 2, new Object[] { "handleResp_GetOlympicActConfig, newConfig=", paramConfig });
                  }
                  if (localOlympicActConfig == null) {
                    break label555;
                  }
                  i = 0;
                  localOlympicActConfig.version = k;
                  paramIntent = (OlympicManager)((QQAppInterface)getAppRuntime()).getManager(166);
                  if (paramIntent == null) {
                    break label528;
                  }
                  paramIntent.a(localOlympicActConfig);
                  paramInt = i;
                  label360:
                  i = j;
                  label364:
                  j = k;
                  k = i;
                  i = paramInt;
                  paramInt = k;
                }
              }
            }
          }
        }
      }
    }
    for (;;)
    {
      for (;;)
      {
        OlympicServlet.a(getAppRuntime(), 86, j, paramInt, 1, i, -1);
        paramIntent = (OlympicManager)((QQAppInterface)getAppRuntime()).getManager(166);
        if (paramIntent != null)
        {
          paramIntent.g();
          paramIntent.f();
        }
        return;
        try
        {
          paramIntent = new String(paramConfig, "UTF-8");
          paramInt = 2;
        }
        catch (UnsupportedEncodingException paramIntent)
        {
          if (QLog.isColorLevel()) {
            paramIntent.printStackTrace();
          }
          paramIntent = null;
          paramInt = 2;
        }
        catch (OutOfMemoryError paramIntent)
        {
          for (;;)
          {
            if (QLog.isColorLevel()) {
              paramIntent.printStackTrace();
            }
            System.gc();
            try
            {
              paramIntent = new String(paramConfig, "UTF-8");
              paramInt = 2;
            }
            catch (Throwable paramIntent)
            {
              paramIntent = null;
              paramInt = 2;
            }
          }
        }
      }
      break;
      paramIntent = paramIntent.content.get().toStringUtf8();
      paramInt = 2;
      break;
      label522:
      paramConfig = localOlympicActConfig;
      break label293;
      label528:
      paramInt = i;
      if (!QLog.isColorLevel()) {
        break label360;
      }
      QLog.d("Olympic.configServlet", 2, "handleResp_GetOlympicActConfig, manager is null!");
      paramInt = i;
      break label360;
      label555:
      i = paramInt;
      if (paramIntent != null) {
        i = 5;
      }
      paramInt = i;
      if (!QLog.isColorLevel()) {
        break label360;
      }
      QLog.d("Olympic.configServlet", 2, "handleResp_GetOlympicActConfig, parse failed, newConfig is null!");
      paramInt = i;
      break label360;
      if (QLog.isColorLevel()) {
        QLog.d("Olympic.configServlet", 2, "handleResp_GetOlympicActConfig, content is null");
      }
      i = 0;
      paramInt = j;
      break label364;
      if (QLog.isColorLevel()) {
        QLog.d("Olympic.configServlet", 2, "handleResp_GetOlympicActConfig, msg_content_list is null");
      }
      paramIntent = (QQAppInterface)getAppRuntime();
      paramConfig = (OlympicManager)paramIntent.getManager(166);
      if (paramConfig != null) {
        paramConfig.e();
      }
      OlympicActConfig.deleteFile(paramIntent, BaseApplicationImpl.getContext());
      paramInt = j;
      i = m;
      break label364;
      paramInt = j;
      i = m;
      if (!QLog.isColorLevel()) {
        break label364;
      }
      QLog.d("Olympic.configServlet", 2, "handleResp_GetOlympicActConfig, has same version");
      paramInt = j;
      i = m;
      break label364;
      paramInt = 0;
      k = 1;
      j = i;
      i = k;
      continue;
      paramInt = 0;
      k = 1;
      j = i;
      i = k;
    }
  }
  
  void a(QQAppInterface paramQQAppInterface, Intent paramIntent, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanFacePreDownConfig |  type= " + paramConfig.type.get());
    }
    if (paramConfig.type.get() != 205) {}
    do
    {
      do
      {
        do
        {
          return;
          int i = paramConfig.version.get();
          if (paramIntent.getIntExtra("key_download_cfg_version", 0) != i) {
            break;
          }
        } while (!QLog.isColorLevel());
        QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanFacePreDownConfig, version same");
        return;
        if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0)) {
          break;
        }
      } while (!QLog.isColorLevel());
      QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanFacePreDownConfig we delete ARConfig info here");
      return;
      paramIntent = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramIntent != null) {
        break;
      }
    } while (!QLog.isColorLevel());
    QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanFacePreDownConfig, content is null");
    return;
    byte[] arrayOfByte;
    if (paramIntent.compress.get() == 1)
    {
      arrayOfByte = OlympicUtil.a(paramIntent.content.get().toByteArray());
      if (arrayOfByte == null) {
        break label351;
      }
    }
    for (;;)
    {
      try
      {
        paramIntent = new String(arrayOfByte, "UTF-8");
        if (paramIntent == null) {
          break label329;
        }
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanFacePreDownConfig, config_content is " + paramIntent);
        }
        FaceScanDownloadManager.a(paramQQAppInterface, paramIntent, paramConfig.version.get());
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanFacePreDownConfig, config type 205");
        return;
      }
      catch (UnsupportedEncodingException paramIntent)
      {
        if (QLog.isColorLevel()) {
          paramIntent.printStackTrace();
        }
        paramIntent = null;
        continue;
      }
      catch (OutOfMemoryError paramIntent)
      {
        if (QLog.isColorLevel()) {
          paramIntent.printStackTrace();
        }
        System.gc();
        try
        {
          paramIntent = new String(arrayOfByte, "UTF-8");
        }
        catch (Throwable paramIntent)
        {
          paramIntent = null;
        }
        continue;
      }
      paramIntent = paramIntent.content.get().toStringUtf8();
      continue;
      label329:
      FaceScanDownloadManager.b(paramQQAppInterface);
      if (QLog.isColorLevel())
      {
        QLog.d("SPLASH_ConfigServlet", 2, "handleResp_GetArScanFacePreDownConfig we delete ARConfig info here");
        continue;
        label351:
        paramIntent = null;
      }
    }
  }
  
  /* Error */
  protected void a(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore 5
    //   3: aload_2
    //   4: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   7: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   10: istore 4
    //   12: aload_1
    //   13: invokevirtual 2328	com/tencent/mobileqq/app/QQAppInterface:getPreferences	()Landroid/content/SharedPreferences;
    //   16: astore 6
    //   18: aload_2
    //   19: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   22: ifnull +162 -> 184
    //   25: aload_2
    //   26: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   29: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   32: ifle +152 -> 184
    //   35: aload_2
    //   36: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   39: iconst_0
    //   40: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   43: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   46: astore_1
    //   47: aload_1
    //   48: ifnull +136 -> 184
    //   51: aload_1
    //   52: getfield 912	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:compress	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   55: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   58: iconst_1
    //   59: if_icmpne +205 -> 264
    //   62: aload_1
    //   63: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   66: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   69: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   72: invokestatic 932	com/tencent/mobileqq/olympic/utils/OlympicUtil:a	([B)[B
    //   75: astore_2
    //   76: aload_2
    //   77: ifnull +182 -> 259
    //   80: new 139	java/lang/String
    //   83: dup
    //   84: aload_2
    //   85: ldc_w 934
    //   88: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   91: astore_1
    //   92: aload_1
    //   93: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   96: ifne +88 -> 184
    //   99: new 141	org/json/JSONObject
    //   102: dup
    //   103: aload_1
    //   104: invokespecial 144	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   107: ldc_w 6215
    //   110: invokevirtual 154	org/json/JSONObject:getInt	(Ljava/lang/String;)I
    //   113: istore_3
    //   114: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   117: ifeq +35 -> 152
    //   120: new 4062	java/lang/StringBuffer
    //   123: dup
    //   124: invokespecial 4063	java/lang/StringBuffer:<init>	()V
    //   127: astore_1
    //   128: aload_1
    //   129: ldc_w 6217
    //   132: invokevirtual 4070	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   135: pop
    //   136: aload_1
    //   137: iload_3
    //   138: invokevirtual 6220	java/lang/StringBuffer:append	(I)Ljava/lang/StringBuffer;
    //   141: pop
    //   142: ldc 90
    //   144: iconst_2
    //   145: aload_1
    //   146: invokevirtual 4071	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   149: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   152: aload 6
    //   154: invokeinterface 645 1 0
    //   159: ldc_w 2343
    //   162: iload 4
    //   164: invokeinterface 953 3 0
    //   169: ldc_w 6215
    //   172: iload_3
    //   173: invokeinterface 953 3 0
    //   178: invokeinterface 656 1 0
    //   183: pop
    //   184: return
    //   185: astore_1
    //   186: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   189: ifeq +13 -> 202
    //   192: ldc 90
    //   194: iconst_2
    //   195: ldc_w 6222
    //   198: aload_1
    //   199: invokestatic 4935	com/tencent/qphone/base/util/QLog:w	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V
    //   202: aconst_null
    //   203: astore_1
    //   204: goto -112 -> 92
    //   207: astore_1
    //   208: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   211: ifeq +13 -> 224
    //   214: ldc 90
    //   216: iconst_2
    //   217: ldc_w 6222
    //   220: aload_1
    //   221: invokestatic 4935	com/tencent/qphone/base/util/QLog:w	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V
    //   224: invokestatic 966	java/lang/System:gc	()V
    //   227: new 139	java/lang/String
    //   230: dup
    //   231: aload_2
    //   232: ldc_w 934
    //   235: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   238: astore_1
    //   239: goto -147 -> 92
    //   242: astore_1
    //   243: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   246: ifeq +13 -> 259
    //   249: ldc 90
    //   251: iconst_2
    //   252: ldc_w 6222
    //   255: aload_1
    //   256: invokestatic 4935	com/tencent/qphone/base/util/QLog:w	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V
    //   259: aconst_null
    //   260: astore_1
    //   261: goto -169 -> 92
    //   264: aload_1
    //   265: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   268: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   271: invokevirtual 971	com/tencent/mobileqq/pb/ByteStringMicro:toStringUtf8	()Ljava/lang/String;
    //   274: astore_1
    //   275: goto -183 -> 92
    //   278: astore_1
    //   279: iconst_0
    //   280: istore_3
    //   281: aload_1
    //   282: invokevirtual 167	org/json/JSONException:printStackTrace	()V
    //   285: aload 6
    //   287: invokeinterface 645 1 0
    //   292: ldc_w 2343
    //   295: iconst_0
    //   296: invokeinterface 953 3 0
    //   301: ldc_w 6215
    //   304: iload_3
    //   305: invokeinterface 953 3 0
    //   310: invokeinterface 656 1 0
    //   315: pop
    //   316: return
    //   317: astore_1
    //   318: iconst_0
    //   319: istore_3
    //   320: aload 6
    //   322: invokeinterface 645 1 0
    //   327: ldc_w 2343
    //   330: iload 4
    //   332: invokeinterface 953 3 0
    //   337: ldc_w 6215
    //   340: iload_3
    //   341: invokeinterface 953 3 0
    //   346: invokeinterface 656 1 0
    //   351: pop
    //   352: aload_1
    //   353: athrow
    //   354: astore_1
    //   355: goto -35 -> 320
    //   358: astore_1
    //   359: iload 5
    //   361: istore 4
    //   363: goto -43 -> 320
    //   366: astore_1
    //   367: goto -86 -> 281
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	370	0	this	ConfigServlet
    //   0	370	1	paramQQAppInterface	QQAppInterface
    //   0	370	2	paramConfig	ConfigurationService.Config
    //   113	228	3	i	int
    //   10	352	4	j	int
    //   1	359	5	k	int
    //   16	305	6	localSharedPreferences	SharedPreferences
    // Exception table:
    //   from	to	target	type
    //   80	92	185	java/lang/Exception
    //   80	92	207	java/lang/OutOfMemoryError
    //   227	239	242	java/lang/Throwable
    //   99	114	278	org/json/JSONException
    //   99	114	317	finally
    //   114	152	354	finally
    //   281	285	358	finally
    //   114	152	366	org/json/JSONException
  }
  
  protected void a(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig, String paramString, ConfigServlet.IHandleConfigCallback paramIHandleConfigCallback)
  {
    int j = paramConfig.version.get();
    int i = paramIHandleConfigCallback.a();
    if (QLog.isColorLevel()) {
      QLog.d("TroopRankConfig", 2, paramString + ", serverVersion=" + j + "|localVersion=" + i);
    }
    if ((j != i) && (paramConfig.msg_content_list.size() > 0))
    {
      ArrayList localArrayList = new ArrayList();
      int k = paramConfig.msg_content_list.size();
      i = 0;
      if (i < k)
      {
        paramQQAppInterface = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
        byte[] arrayOfByte;
        if (paramQQAppInterface != null)
        {
          if (paramQQAppInterface.compress.get() != 1) {
            break label271;
          }
          arrayOfByte = OlympicUtil.a(paramQQAppInterface.content.get().toByteArray());
          if (arrayOfByte == null) {
            break label266;
          }
        }
        for (;;)
        {
          try
          {
            paramQQAppInterface = new String(arrayOfByte, "UTF-8");
            if (!TextUtils.isEmpty(paramQQAppInterface)) {
              localArrayList.add(paramQQAppInterface);
            }
            i += 1;
          }
          catch (Exception paramQQAppInterface)
          {
            if (QLog.isColorLevel()) {
              QLog.w("SPLASH_ConfigServlet", 2, paramString, paramQQAppInterface);
            }
            paramQQAppInterface = null;
            continue;
          }
          catch (OutOfMemoryError paramQQAppInterface)
          {
            if (QLog.isColorLevel()) {
              QLog.w("SPLASH_ConfigServlet", 2, paramString, paramQQAppInterface);
            }
            System.gc();
            try
            {
              paramQQAppInterface = new String(arrayOfByte, "UTF-8");
            }
            catch (Throwable paramQQAppInterface)
            {
              if (QLog.isColorLevel()) {
                QLog.w("SPLASH_ConfigServlet", 2, paramString, paramQQAppInterface);
              }
            }
          }
          label266:
          paramQQAppInterface = null;
          continue;
          label271:
          paramQQAppInterface = paramQQAppInterface.content.get().toStringUtf8();
        }
      }
      if (localArrayList.size() <= 0) {
        break label314;
      }
      paramIHandleConfigCallback.a(j);
      paramIHandleConfigCallback.a(localArrayList);
    }
    label314:
    while (!QLog.isColorLevel()) {
      return;
    }
    QLog.d("SPLASH_ConfigServlet", 2, paramString + ", config_content is empty");
  }
  
  public void a(ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int i;
      try
      {
        QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          i = 0;
          if (i < paramConfig.content_list.size())
          {
            String str = ((String)paramConfig.content_list.get(i)).trim();
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 79,content: " + str + ",version: " + paramConfig.version.get());
            }
            int j = paramConfig.version.get();
            if ((j != SharedPreUtils.Y(localQQAppInterface.getApp(), localQQAppInterface.getCurrentAccountUin())) || (paramConfig.content_list.size() > 0))
            {
              str = str.split("=")[1];
              if (!TextUtils.isEmpty(str)) {
                ReadInJoyHelper.c(str, localQQAppInterface);
              }
              SharedPreUtils.u(localQQAppInterface.getApp(), j, localQQAppInterface.getCurrentAccountUin());
            }
            else if (QLog.isColorLevel())
            {
              QLog.d("SPLASH_ConfigServlet", 2, "received READINJOY_MERGE_CONFIG_CMD IGNORE THIS ACTION  because of SAME VERSION");
            }
          }
        }
      }
      catch (Exception paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServlet", 2, "received readinjoy merge config error,cmd : 79" + paramConfig.toString());
        }
      }
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 79,content_list is empty ,version: " + paramConfig.version.get());
      return;
      i += 1;
    }
  }
  
  public void b(Intent paramIntent, boolean paramBoolean, ConfigurationService.Config paramConfig, int paramInt)
  {
    if (QLog.isColorLevel()) {
      QLog.d("Q.camera.configServlet", 2, "[handleRespQCameraPhoneConfig] ENTER success=" + paramBoolean + " result=" + paramInt);
    }
    int j = 0;
    int i = 2;
    String str = paramIntent.getStringExtra("uin");
    int k;
    if ((paramBoolean) && (paramConfig != null) && (paramConfig.type.get() == 109)) {
      if (paramInt == 0)
      {
        k = paramConfig.version.get();
        int m = paramIntent.getIntExtra("qcamera_conf_version", 0);
        QLog.i("Q.camera.configServlet", 1, "[handleRespQCameraPhoneConfig] reqVersion=" + m + " receiveVersion=" + k);
        paramInt = i;
        i = j;
        if (k != m)
        {
          CameraUtils.a(BaseApplicationImpl.getContext(), k);
          if (QLog.isColorLevel()) {
            QLog.d("Q.camera.configServlet", 2, "[handleRespQCameraPhoneConfig] save version: " + k + " and check config version: " + CameraUtils.a(BaseApplicationImpl.getContext()));
          }
          if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
            break label582;
          }
          paramIntent = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
          i = paramIntent.task_id.get();
          if (paramIntent.compress.get() != 1) {
            break label517;
          }
          paramIntent = CameraUtils.a(paramIntent.content.get().toByteArray());
          if (paramIntent == null)
          {
            paramInt = 4;
            CameraUtils.a(BaseApplicationImpl.getContext(), true);
            QLog.w("Q.camera.configServlet", 1, "[handleRespQCameraPhoneConfig] uncompress failed");
          }
        }
        else
        {
          j = paramInt;
          paramInt = k;
          k = i;
          i = m;
        }
      }
    }
    for (;;)
    {
      for (;;)
      {
        for (;;)
        {
          QLog.i("Q.camera.configServlet", 1, "[handleRespQCameraPhoneConfig] rptResult=" + j);
          paramIntent = new HashMap();
          paramIntent.put("rpt_type", String.valueOf(109));
          paramIntent.put("rpt_task_id", String.valueOf(k));
          paramIntent.put("rpt_req_version", String.valueOf(i));
          paramIntent.put("rpt_version", String.valueOf(paramInt));
          paramIntent.put("rpt_report_type", String.valueOf(1));
          paramIntent.put("rpt_result", String.valueOf(j));
          StatisticCollector.a(BaseApplication.getContext()).a(str, "qcamera_phone_config_pull_event", paramBoolean, 0L, 0L, paramIntent, String.valueOf(j));
          return;
          paramInt = 0;
          paramIntent = new String(paramIntent);
          if (QLog.isColorLevel()) {
            QLog.d("Q.camera.configServlet", 4, new Object[] { "[handleRespQCameraPhoneConfig] zip xmlContent=", paramIntent });
          }
          try
          {
            CameraUtils.a(BaseApplicationImpl.getContext(), paramIntent, k);
          }
          catch (Exception paramIntent)
          {
            paramIntent.printStackTrace();
            paramInt = 3;
          }
        }
        break;
        label517:
        paramIntent = paramIntent.content.get().toStringUtf8();
        if (QLog.isColorLevel()) {
          QLog.d("Q.camera.configServlet", 4, new Object[] { "[handleRespQCameraPhoneConfig] raw xmlContent=", paramIntent });
        }
        try
        {
          CameraUtils.a(BaseApplicationImpl.getContext(), paramIntent, k);
          paramInt = 0;
        }
        catch (Exception paramIntent)
        {
          paramIntent.printStackTrace();
          paramInt = 3;
        }
      }
      break;
      label582:
      paramInt = 5;
      QLog.w("Q.camera.configServlet", 1, "[handleRespQCameraPhoneConfig] no data, current disableCameraSDK=" + CameraUtils.a(BaseApplicationImpl.getContext()));
      i = j;
      break;
      paramInt = 0;
      j = 1;
      k = 0;
      i = 0;
      continue;
      paramInt = 0;
      j = 1;
      k = 0;
      i = 0;
    }
  }
  
  protected void b(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig != null) {}
    for (;;)
    {
      try
      {
        if (paramConfig.type.get() != 143) {
          break label366;
        }
        if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
          break label431;
        }
        Object localObject1 = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
        if (localObject1 == null) {
          break label349;
        }
        if (((ConfigurationService.Content)localObject1).compress.get() == 1)
        {
          byte[] arrayOfByte = OlympicUtil.a(((ConfigurationService.Content)localObject1).content.get().toByteArray());
          if (arrayOfByte == null) {
            break label425;
          }
          try
          {
            localObject1 = new String(arrayOfByte, "UTF-8");
            if (localObject1 == null) {
              break label431;
            }
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServletQ.nearby.tag_nearby_glamour_level_config", 2, "receiveAllConfigs|type: 143,content: " + (String)localObject1 + ",version: " + paramConfig.version.get());
            }
            int i = paramConfig.version.get();
            if ((i == SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_glamour_level_config_version", jdField_a_of_type_JavaLangString)) || (TextUtils.isEmpty((CharSequence)localObject1))) {
              continue;
            }
            NearbyFlowerUtil.a((String)localObject1);
            NearbyFlowerUtil.b((String)localObject1);
            SharedPreUtils.h(paramQQAppInterface.getApp(), (String)localObject1);
            SharedPreUtils.a(paramQQAppInterface.getApp(), "nearby_glamour_level_config_version", jdField_a_of_type_JavaLangString, i);
            return;
          }
          catch (UnsupportedEncodingException localUnsupportedEncodingException)
          {
            if (!QLog.isColorLevel()) {
              break label432;
            }
            localUnsupportedEncodingException.printStackTrace();
          }
          catch (OutOfMemoryError localOutOfMemoryError)
          {
            if (QLog.isColorLevel()) {
              localOutOfMemoryError.printStackTrace();
            }
            System.gc();
            try
            {
              String str = new String(arrayOfByte, "UTF-8");
            }
            catch (Throwable localThrowable)
            {
              localObject2 = null;
            }
            continue;
          }
        }
        else
        {
          localObject2 = ((ConfigurationService.Content)localObject2).content.get().toStringUtf8();
          continue;
        }
        if (!QLog.isColorLevel()) {
          break label431;
        }
        QLog.d("SPLASH_ConfigServletQ.nearby.tag_nearby_glamour_level_config", 2, "received CHNAGE_MACHINE_CONFIG IGNORE THIS ACTION  because of SAME VERSION ");
        return;
      }
      catch (Exception paramQQAppInterface)
      {
        if (!QLog.isColorLevel()) {
          break label431;
        }
      }
      QLog.e("SPLASH_ConfigServletQ.nearby.tag_nearby_glamour_level_config", 2, "received change machine config error,cmd : 143" + paramQQAppInterface.toString());
      return;
      label349:
      if (QLog.isColorLevel())
      {
        QLog.d("SPLASH_ConfigServletQ.nearby.tag_nearby_glamour_level_config", 2, "handleNearbyGlamourLevelConfig, content is null");
        return;
        label366:
        if (QLog.isColorLevel())
        {
          localObject2 = new StringBuilder().append("receiveAllConfigs|type: 143,content_list is empty ,version: ");
          if (paramConfig != null) {}
          for (paramQQAppInterface = Integer.valueOf(paramConfig.version.get());; paramQQAppInterface = "")
          {
            QLog.d("SPLASH_ConfigServletQ.nearby.tag_nearby_glamour_level_config", 2, paramQQAppInterface);
            return;
          }
          localObject2 = null;
          continue;
        }
      }
      label425:
      label431:
      return;
      label432:
      Object localObject2 = null;
    }
  }
  
  public void b(ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int j;
      try
      {
        QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          int i = 0;
          j = paramConfig.content_list.size();
          if (i < j)
          {
            String str2;
            int k;
            Document localDocument;
            Object localObject2;
            String str1;
            try
            {
              str2 = ((String)paramConfig.content_list.get(i)).trim();
              k = paramConfig.version.get();
              j = SharedPreUtils.Z(localQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 92,content: " + str2 + ",version: " + paramConfig.version.get() + "local version = " + j);
              }
              if ((k == j) && (paramConfig.content_list.size() <= 0)) {
                continue;
              }
              localDocument = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(str2.getBytes("utf-8")));
              Node localNode = localDocument.getElementsByTagName("configs").item(0).getFirstChild();
              if (localNode == null) {
                continue;
              }
              if (localNode.getFirstChild() != null)
              {
                localObject2 = localNode.getNodeName();
                str1 = localNode.getFirstChild().getNodeValue();
                if (TextUtils.equals((CharSequence)localObject2, "smartcrop_pic")) {
                  ReadInJoyHelper.c(localQQAppInterface, str1);
                }
              }
              else
              {
                localNode = localNode.getNextSibling();
                continue;
              }
              if (!TextUtils.equals((CharSequence)localObject2, "feeds_group")) {
                continue;
              }
              ReadInJoyHelper.a(localQQAppInterface, str1);
              continue;
              i += 1;
            }
            catch (Exception localException1)
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "exception occurs", localException1);
              }
            }
            continue;
            if (TextUtils.equals((CharSequence)localObject2, "remind_only_wifi"))
            {
              ReadInJoyHelper.b(localQQAppInterface, str1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "kandian_individual_time_push"))
            {
              if (!TextUtils.equals(str1, "1")) {
                break label3917;
              }
              bool1 = true;
              ReadInJoyHelper.a(localQQAppInterface, bool1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "push_switch"))
            {
              ReadInJoyHelper.d(localQQAppInterface, TextUtils.equals(str1, "1"));
              continue;
            }
            bool1 = TextUtils.equals((CharSequence)localObject2, "sticky_times");
            int m;
            if (bool1)
            {
              try
              {
                j = Integer.valueOf(str1).intValue();
                m = Integer.valueOf(localDocument.getElementsByTagName("effective_time").item(0).getFirstChild().getNodeValue()).intValue();
                if ((j >= 0) && (m < 86400)) {
                  continue;
                }
                throw new IllegalArgumentException("stickyTime or effectiveTime has error ! " + j + "," + m);
              }
              catch (Exception localException2)
              {
                localException2.printStackTrace();
                QLog.d("SPLASH_ConfigServlet", 2, "covert stickyTime and effectiveTime has error : " + localException2);
              }
              continue;
              ((KandianMergeManager)localQQAppInterface.getManager(161)).a(j, m);
              continue;
            }
            Object localObject1;
            Object localObject3;
            if (TextUtils.equals((CharSequence)localObject2, "socializeWebUrl"))
            {
              localObject1 = localException1.getFirstChild();
              if (localObject1 != null)
              {
                if (((Node)localObject1).getNodeType() == 1)
                {
                  localObject2 = ((Node)localObject1).getNodeName();
                  localObject3 = ((Node)localObject1).getFirstChild().getNodeValue();
                  if (ReadInJoyHelper.a((String)localObject2)) {
                    ReadInJoyHelper.a(localQQAppInterface, (String)localObject2, (String)localObject3);
                  }
                }
                else
                {
                  localObject1 = ((Node)localObject1).getNextSibling();
                }
              }
              else {
                continue;
              }
              QLog.d("SPLASH_ConfigServlet", 1, "find unrecognized key:" + (String)localObject2 + " with value:" + (String)localObject3);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "free_time_refresh_push"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "updateFreeTimeRefreshPush " + TextUtils.equals((CharSequence)localObject1, "1"));
              }
              ReadInJoyHelper.h(localQQAppInterface, TextUtils.equals((CharSequence)localObject1, "1"));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "tab_click_gap_in_seconds"))
            {
              SPEventReportSwitch.a(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "tab_click_count_limit"))
            {
              SPEventReportSwitch.b(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "tab_click_push_algo_id"))
            {
              SPEventReportSwitch.c(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "tab_click_forbid_report_time_in_seconds"))
            {
              SPEventReportSwitch.d(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "fore_ground_gap_in_seconds"))
            {
              SPEventReportSwitch.e(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "screen_switch_in_seconds"))
            {
              SPEventReportSwitch.f(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "user_idle_repor"))
            {
              SPEventReportSwitch.g(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "readinjoy_smrm_switch"))
            {
              SMRM.a(localQQAppInterface, TextUtils.equals((CharSequence)localObject1, "1"));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "kandian_report_tt"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "kandian_report_tt = " + TextUtils.equals((CharSequence)localObject1, "1"));
              }
              if (TextUtils.equals((CharSequence)localObject1, "1"))
              {
                ReadInJoyHelper.i(localQQAppInterface, true);
                continue;
              }
              ReadInJoyHelper.i(localQQAppInterface, false);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "actKandianReportManyApps"))
            {
              ReadInJoyReportManyApps.a(localException1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "maintab_reddot_times"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "maintab_reddot_times = " + (String)localObject1);
              }
              ReadInJoyHelper.h(localQQAppInterface, Integer.valueOf((String)localObject1).intValue());
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "maintab_reddot_feeds"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "maintab_reddot_feeds = " + (String)localObject1);
              }
              ReadInJoyHelper.i(localQQAppInterface, Integer.valueOf((String)localObject1).intValue());
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "feedsbackWebUrl"))
            {
              ReadInJoyHelper.b(localQQAppInterface, (String)localObject2, (String)localObject1);
              if (!QLog.isColorLevel()) {
                continue;
              }
              QLog.d("SPLASH_ConfigServlet", 2, "feedsbackWebUrl " + TextUtils.equals((CharSequence)localObject1, "1"));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "feedsbackSwitch"))
            {
              ReadInJoyHelper.b(localQQAppInterface, (String)localObject2, (String)localObject1);
              if (!QLog.isColorLevel()) {
                continue;
              }
              QLog.d("SPLASH_ConfigServlet", 2, "feedsbackSwitch " + TextUtils.equals((CharSequence)localObject1, "1"));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "feedsbackName"))
            {
              ReadInJoyHelper.b(localQQAppInterface, (String)localObject2, (String)localObject1);
              if (!QLog.isColorLevel()) {
                continue;
              }
              QLog.d("SPLASH_ConfigServlet", 2, "feedsbackName " + TextUtils.equals((CharSequence)localObject1, "1"));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "biufeedsSwitch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "biufeedsSwitch = " + (String)localObject1);
              }
              ReadInJoyHelper.k(localQQAppInterface, Integer.valueOf((String)localObject1).intValue());
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "biufeedsName"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "biufeedsName = " + (String)localObject1);
              }
              ReadInJoyHelper.g(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "biufeedsWebUrl"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "biufeedsWebUrl = " + (String)localObject1);
              }
              ReadInJoyHelper.h(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "badgeNumber"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "badgeNumber = " + (String)localObject1);
              }
              ReadInJoyHelper.w(localQQAppInterface, Integer.valueOf((String)localObject1).intValue());
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "biu_word_count"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "biu_word_count = " + (String)localObject1);
              }
              ReadInJoyHelper.i(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "new_channel_style"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "new_channel_style = " + (String)localObject1);
              }
              ReadInJoyHelper.l(localQQAppInterface, Integer.valueOf((String)localObject1).intValue());
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "local_record_time"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "local_record_time = " + (String)localObject1);
              }
              ReadInJoyHelper.b(localQQAppInterface, Long.valueOf((String)localObject1).longValue());
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "local_record_feeds"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "local_record_feeds = " + (String)localObject1);
              }
              ReadInJoyHelper.x(localQQAppInterface, Integer.valueOf((String)localObject1).intValue());
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "kandianWebPreLoadData"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "kandianWebPreLoadData = " + (String)localObject1);
              }
              if (TextUtils.equals((CharSequence)localObject1, "1"))
              {
                ReadInJoyHelper.m(localQQAppInterface, true);
                continue;
              }
              ReadInJoyHelper.m(localQQAppInterface, false);
              continue;
            }
            if ((TextUtils.equals((CharSequence)localObject2, "ExitAIO_Android_Uin")) && (localObject1 != null))
            {
              localObject1 = ((String)localObject1).split(":");
              if (localObject1.length < 2) {
                continue;
              }
              ReadInJoyHelper.b(Integer.valueOf(localObject1[0]).intValue(), Integer.valueOf(localObject1[1]).intValue());
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "kandian_tab_switch"))
            {
              localObject2 = ReadInJoyHelper.a("local_kd_tab_has_set");
              bool1 = false;
              if ((localObject2 instanceof Boolean)) {
                bool1 = ((Boolean)localObject2).booleanValue();
              }
              if ((TextUtils.isEmpty((CharSequence)localObject1)) || (!((String)localObject1).equals("1"))) {
                break label3923;
              }
              bool2 = true;
              ReadInJoyHelper.a(localQQAppInterface, "remote_kd_tab_switch", Boolean.valueOf(bool2));
              if (!bool1)
              {
                ReadInJoyHelper.a(localQQAppInterface, "local_kd_tab_switch", Boolean.valueOf(bool2));
                QLog.d("SPLASH_ConfigServlet", 1, new Object[] { "receiveKDTabRemoteSP, userHasSetKDTab = ", Boolean.valueOf(bool1), ", updateLocalTabSwitch tabSwitch = ", Boolean.valueOf(bool2) });
                continue;
              }
              QLog.d("SPLASH_ConfigServlet", 1, new Object[] { "receiveKDTabRemoteSP, userHasSetKDTab = ", Boolean.valueOf(bool1), ", no need to updateTabSwitch." });
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "kandian_tab_type"))
            {
              ReadInJoyHelper.a(localQQAppInterface, "remote_kd_tab_type", localObject1);
              localObject2 = ReadInJoyHelper.a("local_kd_tab_has_set");
              if (!(localObject2 instanceof Boolean)) {
                break label3911;
              }
              bool1 = ((Boolean)localObject2).booleanValue();
              if (!bool1)
              {
                ReadInJoyHelper.a(localQQAppInterface, "local_kd_tab_type", localObject1);
                QLog.d("SPLASH_ConfigServlet", 1, new Object[] { "receiveKDTabTypeRemoteSP, userHasSetKDTab = ", Boolean.valueOf(bool1), ", updateLocalTabSwitch tabType = ", localObject1 });
                continue;
              }
              QLog.d("SPLASH_ConfigServlet", 1, new Object[] { "receiveKDTabTypeRemoteSP, userHasSetKDTab = ", Boolean.valueOf(bool1), ", no need to updateTabType." });
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "DiaobaodeKandian"))
            {
              ReadInJoyHelper.z(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "topic_card_jump"))
            {
              ReadInJoyHelper.a(localQQAppInterface, "kd_topic_recommend_card_jump_switch", Boolean.valueOf(((String)localObject1).equals("1")));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "topic_card_jump_url"))
            {
              ReadInJoyHelper.a(localQQAppInterface, "kd_topic_recommend_card_jump_url", localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "comment_word_count"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "comment_word_count = " + (String)localObject1);
              }
              ReadInJoyHelper.j(localQQAppInterface, (String)localObject1);
              continue;
            }
            if ((TextUtils.equals((CharSequence)localObject2, "KW")) && (!TextUtils.isEmpty((CharSequence)localObject1)))
            {
              localObject2 = new HashMap();
              localObject1 = ((String)localObject1).split(",");
              m = localObject1.length;
              j = 0;
              if (j < m)
              {
                localObject3 = localObject1[j].split(":");
                if (localObject3.length != 2) {
                  break label3929;
                }
                ((HashMap)localObject2).put(localObject3[1], localObject3[0]);
                break label3929;
              }
              ReadInJoyUtils.a("kandian_aio_sp_word", localObject2, true);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "comment_gif_switch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "comment_gif_switch = " + (String)localObject1);
              }
              ReadInJoyHelper.k(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "ugc_gif_switch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "ugc_gif_switch = " + (String)localObject1);
              }
              ReadInJoyHelper.l(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "biu_at_switch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "biu_at_switch = " + (String)localObject1);
              }
              ReadInJoyHelper.o(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "UGC_at_switch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "UGC_at_switch = " + (String)localObject1);
              }
              ReadInJoyHelper.n(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "comment_at_switch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "comment_at_switch = " + (String)localObject1);
              }
              ReadInJoyHelper.u(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "biu_profile_switch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "biu_profile_switch = " + (String)localObject1);
              }
              ReadInJoyHelper.p(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "IconMerge_BiuMsg"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "IconMerge_BiuMsg = " + (String)localObject1);
              }
              ReadInJoyHelper.a(TextUtils.equals((CharSequence)localObject1, "1"));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "IconMerge_InteractiveMsg"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "IconMerge_InteractiveMsg = " + (String)localObject1);
              }
              ReadInJoyHelper.b(TextUtils.equals((CharSequence)localObject1, "1"));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "IconMerge_SubscribeMsg"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "IconMerge_InteractiveMsg = " + (String)localObject1);
              }
              ReadInJoyHelper.a((String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "nw_support"))
            {
              ReadInJoyHelper.n(localQQAppInterface, TextUtils.equals((CharSequence)localObject1, "1"));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "nw_preload"))
            {
              ReadInJoyHelper.o(localQQAppInterface, TextUtils.equals((CharSequence)localObject1, "1"));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "arkapp_enable_switch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, new Object[] { "arkapp_enable_switch, value: ", localObject1 });
              }
              ReadInJoyHelper.e(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "exposure_strengthen"))
            {
              ReadInJoyHelper.p(localQQAppInterface, "1".equals(localObject1));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "native_timeout"))
            {
              ReadInJoyHelper.A(localQQAppInterface, (String)localObject1);
              QLog.d("SPLASH_ConfigServlet", 2, "update native engine timeout config : " + (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "diandian_release_switch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "dian dian right button config: " + (String)localObject1);
              }
              ReadInJoyHelper.q(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "WXShareFromKandian_Switch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "get wx share from readinjoy :" + (String)localObject1);
              }
              ReadInJoyHelper.r(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "proteus_enable"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "get proteus switch from config: " + (String)localObject1);
              }
              ReadInJoyHelper.c("1".equals(localObject1));
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "proteus_bid"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "get proteus offline bid from config: " + (String)localObject1);
              }
              ReadInJoyHelper.b((String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "zhitu"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "comment_zhitu_switch:" + (String)localObject1);
              }
              ReadInJoyHelper.m(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "comment_biu_switch"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "comment biu switch :" + (String)localObject1);
              }
              ReadInJoyHelper.s(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "native_comment_biu"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "native comment biu switch:" + (String)localObject1);
              }
              ReadInJoyHelper.t(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "readinjoy_short_video_width_height_ratio"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "readinjoy_short_video_width_height_ratio :" + (String)localObject1);
              }
              ReadInJoyHelper.c(localQQAppInterface, Float.valueOf((String)localObject1).floatValue());
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "readinjoy_short_video_max_duration_limit"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "readinjoy_short_video_max_duration_limit :" + (String)localObject1);
              }
              ReadInJoyHelper.v(localQQAppInterface, Integer.valueOf((String)localObject1).intValue());
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "multi_video_ad_config"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "multi_video_ad_config :" + (String)localObject1);
              }
              ReadInJoyHelper.w(localQQAppInterface, (String)localObject1);
              continue;
            }
            if (TextUtils.equals((CharSequence)localObject2, "record_duration_count"))
            {
              if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "record_duration_count :" + (String)localObject1);
              }
              ReadInJoyHelper.g(localQQAppInterface, Integer.valueOf((String)localObject1).intValue());
              continue;
            }
            if (!TextUtils.equals((CharSequence)localObject2, "kandiansettings")) {
              continue;
            }
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "kandiansettings :" + str2);
            }
            ReadInJoyHelper.x(localQQAppInterface, str2);
            continue;
            SharedPreUtils.v(localQQAppInterface.getApp(), k, jdField_a_of_type_JavaLangString);
            continue;
            if (!QLog.isColorLevel()) {
              continue;
            }
            QLog.d("SPLASH_ConfigServlet", 2, "received READINJOY_COMMON_CONFIG IGNORE THIS ACTION  because of SAME VERSION");
            continue;
          }
        }
        else if (QLog.isColorLevel())
        {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 92,content_list is empty ,version: " + paramConfig.version.get());
        }
        return;
      }
      catch (Exception paramConfig)
      {
        if (!QLog.isColorLevel()) {
          continue;
        }
        QLog.e("SPLASH_ConfigServlet", 2, "received readinjoy cropandgroup config error,cmd : 92" + paramConfig.toString());
        return;
      }
      label3911:
      boolean bool1 = false;
      continue;
      label3917:
      bool1 = false;
      continue;
      label3923:
      boolean bool2 = false;
      continue;
      label3929:
      j += 1;
    }
  }
  
  protected void c(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int i;
      try
      {
        FunctionModuleConfigManager localFunctionModuleConfigManager = (FunctionModuleConfigManager)paramQQAppInterface.getManager(221);
        if ((paramConfig != null) && (paramConfig.type.get() == 190)) {
          if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
          {
            i = 0;
            if (i < paramConfig.msg_content_list.size())
            {
              Object localObject1 = (ConfigurationService.Content)paramConfig.msg_content_list.get(i);
              if (localObject1 == null) {
                break label382;
              }
              if (((ConfigurationService.Content)localObject1).compress.get() == 1)
              {
                byte[] arrayOfByte = OlympicUtil.a(((ConfigurationService.Content)localObject1).content.get().toByteArray());
                if (arrayOfByte == null) {
                  break label460;
                }
                try
                {
                  localObject1 = new String(arrayOfByte, "UTF-8");
                  if (localObject1 == null) {
                    break label466;
                  }
                  if (QLog.isColorLevel()) {
                    QLog.d("SPLASH_ConfigServletQ.uniteSearch.tag_search_function_module", 2, "receiveAllConfigs|type: 190,content: " + (String)localObject1 + ",version: " + paramConfig.version.get());
                  }
                  int j = paramConfig.version.get();
                  if ((j == SharedPreUtils.a(paramQQAppInterface.getApp(), "search_function_config_version", jdField_a_of_type_JavaLangString)) || (TextUtils.isEmpty((CharSequence)localObject1))) {
                    continue;
                  }
                  localFunctionModuleConfigManager.b(new JSONObject((String)localObject1).optString("kFTSFunctionListUrlKey"));
                  SharedPreUtils.a(paramQQAppInterface.getApp(), "search_function_config_version", jdField_a_of_type_JavaLangString, j);
                }
                catch (UnsupportedEncodingException localUnsupportedEncodingException)
                {
                  if (!QLog.isColorLevel()) {
                    break label473;
                  }
                  localUnsupportedEncodingException.printStackTrace();
                  break label473;
                }
                catch (OutOfMemoryError localOutOfMemoryError)
                {
                  if (QLog.isColorLevel()) {
                    localOutOfMemoryError.printStackTrace();
                  }
                  System.gc();
                  try
                  {
                    String str = new String(arrayOfByte, "UTF-8");
                  }
                  catch (Throwable localThrowable)
                  {
                    localObject2 = null;
                  }
                  continue;
                }
              }
              else
              {
                localObject2 = ((ConfigurationService.Content)localObject2).content.get().toStringUtf8();
                continue;
              }
              if (!QLog.isColorLevel()) {
                break label466;
              }
              QLog.d("SPLASH_ConfigServletQ.uniteSearch.tag_search_function_module", 2, "received SEARCH_FUNCTION_MODULE_CONFIG IGNORE THIS ACTION  because of SAME VERSION ");
            }
          }
        }
      }
      catch (Exception paramQQAppInterface)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServletQ.uniteSearch.tag_search_function_module", 2, "received search function module error,cmd : 190" + paramQQAppInterface.toString());
        }
      }
      label382:
      do
      {
        return;
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServletQ.uniteSearch.tag_search_function_module", 2, "handleFunctionModuleConfig, content is null");
        break;
      } while (!QLog.isColorLevel());
      Object localObject2 = new StringBuilder().append("receiveAllConfigs|type: 190,msg_content_list is empty ,version: ");
      if (paramConfig != null) {}
      for (paramQQAppInterface = Integer.valueOf(paramConfig.version.get());; paramQQAppInterface = "")
      {
        QLog.d("SPLASH_ConfigServletQ.uniteSearch.tag_search_function_module", 2, paramQQAppInterface);
        return;
      }
      label460:
      localObject2 = null;
      continue;
      label466:
      i += 1;
      continue;
      label473:
      localObject2 = null;
    }
  }
  
  public void c(ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int i;
      try
      {
        QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          i = 0;
          if (i < paramConfig.content_list.size())
          {
            String str = (String)paramConfig.content_list.get(i);
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 72,content: " + str + ",version: " + paramConfig.version.get());
            }
            int j = paramConfig.version.get();
            if ((j != SharedPreUtils.W(localQQAppInterface.getApp(), localQQAppInterface.c())) || (paramConfig.content_list.size() > 0))
            {
              if (ReadInJoyHelper.a(localQQAppInterface, str))
              {
                if (QLog.isColorLevel()) {
                  QLog.d("SPLASH_ConfigServlet", 2, "received 72 ark config");
                }
                SharedPreUtils.y(getAppRuntime().getApplication(), localQQAppInterface.c(), j);
                break label304;
              }
              if ((!PublicAccountConfigUtil.b((QQAppInterface)getAppRuntime(), str)) || (!QLog.isColorLevel())) {
                continue;
              }
              QLog.d("SPLASH_ConfigServlet", 2, "received READINJOY_FOLDER_CONFIG_CMD save version: " + j);
              continue;
            }
          }
          else
          {
            return;
          }
        }
      }
      catch (Exception paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServlet", 2, "received readinjoy folder config error,cmd : 72");
        }
      }
      while (QLog.isColorLevel())
      {
        QLog.d("SPLASH_ConfigServlet", 2, "received READINJOY_FOLDER_CONFIG_CMD IGNORE THIS ACTION  because of SAME VERSION");
        break;
        if (QLog.isColorLevel())
        {
          QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 72,content_list is empty ,version: " + paramConfig.version.get());
          return;
        }
      }
      label304:
      i += 1;
    }
  }
  
  public void d(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("HotFriend_SPLASH_ConfigServlet", 2, "handleRespGetHotDaysConfig|type= " + paramConfig.type.get());
    }
    if (paramConfig != null) {}
    for (;;)
    {
      Object localObject2;
      try
      {
        if (paramConfig.type.get() != 146) {
          break label283;
        }
        if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0)) {
          break label345;
        }
        Object localObject1 = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
        if (localObject1 != null)
        {
          if (((ConfigurationService.Content)localObject1).compress.get() == 1)
          {
            byte[] arrayOfByte = OlympicUtil.a(((ConfigurationService.Content)localObject1).content.get().toByteArray());
            if (arrayOfByte == null) {
              break label340;
            }
            try
            {
              localObject1 = new String(arrayOfByte, "UTF-8");
              if (localObject1 == null) {
                break label345;
              }
              if (QLog.isColorLevel()) {
                QLog.d("HotFriend_SPLASH_ConfigServlet", 2, "handleRespGetHotDaysConfig, config_content is " + (String)localObject1);
              }
              HotReactiveHelper.a(paramQQAppInterface, (String)localObject1, paramConfig.version.get());
              return;
            }
            catch (UnsupportedEncodingException localUnsupportedEncodingException)
            {
              if (!QLog.isColorLevel()) {
                break label346;
              }
              localUnsupportedEncodingException.printStackTrace();
            }
            catch (OutOfMemoryError localOutOfMemoryError)
            {
              if (QLog.isColorLevel()) {
                localOutOfMemoryError.printStackTrace();
              }
              System.gc();
              try
              {
                String str = new String(arrayOfByte, "UTF-8");
              }
              catch (Throwable localThrowable)
              {
                localObject2 = null;
              }
              continue;
            }
          }
          localObject2 = ((ConfigurationService.Content)localObject2).content.get().toStringUtf8();
          continue;
        }
        if (!QLog.isColorLevel()) {
          break label345;
        }
        QLog.d("HotFriend_SPLASH_ConfigServlet", 2, "handleRespGetHotDaysConfig, content is null");
        return;
      }
      catch (Exception paramQQAppInterface)
      {
        if (!QLog.isColorLevel()) {
          break label345;
        }
      }
      QLog.e("HotFriend_SPLASH_ConfigServlet", 2, paramQQAppInterface.toString());
      return;
      label283:
      if (QLog.isColorLevel())
      {
        localObject2 = new StringBuilder().append("content_list is empty ,version: ");
        if (paramConfig != null) {}
        for (paramQQAppInterface = Integer.valueOf(paramConfig.version.get());; paramQQAppInterface = "")
        {
          QLog.d("HotFriend_SPLASH_ConfigServlet", 2, paramQQAppInterface);
          return;
        }
        label340:
        localObject2 = null;
      }
      else
      {
        label345:
        return;
        label346:
        localObject2 = null;
      }
    }
  }
  
  public void d(ConfigurationService.Config paramConfig)
  {
    for (;;)
    {
      int i;
      try
      {
        QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
        if ((paramConfig.content_list != null) && (paramConfig.content_list.size() > 0))
        {
          i = 0;
          if (i < paramConfig.content_list.size())
          {
            Object localObject1 = ((String)paramConfig.content_list.get(i)).trim();
            if (QLog.isColorLevel()) {
              QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 73,content: " + (String)localObject1 + ",version: " + paramConfig.version.get());
            }
            int j = paramConfig.version.get();
            if ((j != SharedPreUtils.y(localQQAppInterface.getApp())) || (paramConfig.content_list.size() > 0))
            {
              Object localObject2 = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(((String)localObject1).getBytes("utf-8")));
              localObject1 = (Element)((Document)localObject2).getElementsByTagName("kandian_setting").item(0);
              localObject2 = (Element)((Document)localObject2).getElementsByTagName("url").item(0);
              localObject1 = ((Element)localObject1).getFirstChild().getNodeValue();
              localObject2 = ((Element)localObject2).getFirstChild().getNodeValue();
              if ((!TextUtils.isEmpty((CharSequence)localObject1)) && (!TextUtils.isEmpty((CharSequence)localObject2))) {
                SharedPreUtils.c(localQQAppInterface.getApp(), (String)localObject2, "1".equals(localObject1));
              }
              SharedPreUtils.r(localQQAppInterface.getApp(), j);
            }
            else if (QLog.isColorLevel())
            {
              QLog.d("SPLASH_ConfigServlet", 2, "received READINJOY_FOLDER_SETTING_CMD IGNORE THIS ACTION  because of SAME VERSION");
            }
          }
        }
      }
      catch (Exception paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServlet", 2, "received readinjoy folder setting config error,cmd : 73");
        }
      }
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 73,content_list is empty ,version: " + paramConfig.version.get());
      return;
      i += 1;
    }
  }
  
  void e(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig.type.get() != 147) {}
    for (;;)
    {
      return;
      int i = SharedPreUtils.a(paramQQAppInterface.getApp(), "shop_tab", jdField_a_of_type_JavaLangString);
      int j = paramConfig.version.get();
      if ((i != j) && (paramConfig.content_list != null) && (paramConfig.content_list.size() > 0)) {
        try
        {
          paramConfig = new JSONObject((String)paramConfig.content_list.get(0));
          boolean bool = paramConfig.getBoolean("android");
          SharedPreUtils.a(paramQQAppInterface.getApp(), "shop_tab", jdField_a_of_type_JavaLangString, j);
          paramQQAppInterface = (EcShopAssistantManager)paramQQAppInterface.getManager(87);
          paramQQAppInterface.b(bool);
          paramQQAppInterface.c = paramConfig.optBoolean("preload_web_process", false);
          paramQQAppInterface.a = paramConfig.optLong("stay_time", 5000L);
          paramQQAppInterface.d = paramConfig.optInt("day_limit", 3);
          EcShopAssistantManager.a().edit().putBoolean("preload_web", paramQQAppInterface.c).putLong("stayTime", paramQQAppInterface.a).putInt("dayLimit", paramQQAppInterface.d).commit();
          if (QLog.isColorLevel())
          {
            QLog.i("Ecshop", 2, "current config set tab show:" + bool + ",preload:" + paramQQAppInterface.c + ",stayTime:" + paramQQAppInterface.a + ",dayLimit:" + paramQQAppInterface.d);
            return;
          }
        }
        catch (Exception paramQQAppInterface) {}
      }
    }
  }
  
  protected void f(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "handleQuickShotShareToStoryConfig type = " + paramConfig.type.get());
    }
    int i = SharedPreUtils.am(paramQQAppInterface.getApp(), paramQQAppInterface.c());
    int j = paramConfig.version.get();
    if (i == j)
    {
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "handleQuickShotShareToStoryConfig version code not changed .");
      }
      return;
    }
    SharedPreUtils.D(paramQQAppInterface.getApp(), paramQQAppInterface.c(), j);
    if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() < 1) || (paramConfig.msg_content_list.get(0) == null))
    {
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "handleQuickShotShareToStoryConfig data is null!!!");
      }
      SharedPreUtils.g(paramQQAppInterface.getApp(), paramQQAppInterface.c(), null);
      return;
    }
    paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
    byte[] arrayOfByte;
    if (paramConfig.compress.get() == 1)
    {
      arrayOfByte = OlympicUtil.a(paramConfig.content.get().toByteArray());
      if (arrayOfByte == null) {}
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(arrayOfByte, "UTF-8");
        if (TextUtils.isEmpty(paramConfig)) {
          break label367;
        }
        SharedPreUtils.g(paramQQAppInterface.getApp(), paramQQAppInterface.c(), paramConfig);
        ((QQStoryManager)paramQQAppInterface.getManager(180)).a(paramConfig);
        if (!QLog.isColorLevel()) {
          break;
        }
        QLog.d("SPLASH_ConfigServlet", 2, "handleQuickShotShareToStoryConfig() configContent = " + paramConfig);
        return;
      }
      catch (Exception paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.w("SPLASH_ConfigServlet", 2, QLog.getStackTraceString(paramConfig));
        }
        paramConfig = null;
        continue;
      }
      catch (OutOfMemoryError paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.w("SPLASH_ConfigServlet", 2, QLog.getStackTraceString(paramConfig));
        }
        System.gc();
        try
        {
          paramConfig = new String(arrayOfByte, "UTF-8");
        }
        catch (Throwable paramConfig)
        {
          if (QLog.isColorLevel()) {
            QLog.w("SPLASH_ConfigServlet", 2, QLog.getStackTraceString(paramConfig));
          }
        }
      }
      paramConfig = null;
      continue;
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label367:
      SharedPreUtils.g(paramQQAppInterface.getApp(), paramQQAppInterface.c(), null);
    }
  }
  
  void g(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig.type.get() != 159) {}
    int i;
    int j;
    do
    {
      do
      {
        return;
        i = SharedPreUtils.ao(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        j = paramConfig.version.get();
      } while ((i == j) || (paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0));
      i = 0;
    } while (i >= paramConfig.msg_content_list.size());
    Object localObject1 = (ConfigurationService.Content)paramConfig.msg_content_list.get(i);
    if (localObject1 != null)
    {
      if (((ConfigurationService.Content)localObject1).compress.get() != 1) {
        break label670;
      }
      localObject1 = OlympicUtil.a(((ConfigurationService.Content)localObject1).content.get().toByteArray());
      if (localObject1 == null) {
        break label755;
      }
    }
    for (;;)
    {
      try
      {
        localObject1 = new String((byte[])localObject1, "UTF-8");
        if (localObject1 != null) {}
        try
        {
          localObject1 = new JSONObject((String)localObject1);
          if (i == 0)
          {
            if (((JSONObject)localObject1).optInt("arkmsgai_disable") == 0) {
              break label686;
            }
            bool1 = true;
            SharedPreUtils.z(paramQQAppInterface.getApp(), j, jdField_a_of_type_JavaLangString);
            SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, bool1);
            ArkAiAppCenter.b(paramQQAppInterface, bool1);
            if (((JSONObject)localObject1).optInt("arkmsgai_msgflow_disable") == 0) {
              break label692;
            }
            bool2 = true;
            SharedPreUtils.e(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, bool2);
            ArkAiAppCenter.d = bool2;
            if (((JSONObject)localObject1).optInt("arkmsgai_input_disable") == 0) {
              break label698;
            }
            bool3 = true;
            SharedPreUtils.f(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, bool3);
            ArkAiAppCenter.e = bool3;
            if (((JSONObject)localObject1).optInt("ark_at_babyq_disable", 1) == 0) {
              break label704;
            }
            bool4 = true;
            SharedPreUtils.g(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, bool4);
            ArkAiAppCenter.f = bool4;
            if (((JSONObject)localObject1).optInt("ark_app_manage_panel_disable", 1) == 0) {
              break label710;
            }
            bool5 = true;
            SharedPreUtils.h(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, bool5);
            ArkAiAppCenter.g = bool5;
            int k = ((JSONObject)localObject1).optInt("ark_service_type", 0);
            SharedPreUtils.F(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, k);
            ArkAiAppCenter.jdField_a_of_type_Int = k;
            if (((JSONObject)localObject1).optInt("ark_download_by_yyb_disable", 1) == 0) {
              break label716;
            }
            bool6 = true;
            SharedPreUtils.i(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, bool6);
            ArkAiAppCenter.n = bool6;
            if (QLog.isColorLevel()) {
              QLog.i("ArkApp.AI_SPLASH_ConfigServlet", 2, "handleArkMsgAIDisableConfig disable=" + bool1 + ", msgFlowDisable=" + bool2 + ", inputDisable=" + bool3 + ", isArkAtBabyqDisable=" + bool4 + ", isAppManagePanelDisable=" + bool5 + ", arkServiceType=" + k + ", download_by_yyb_disable" + bool6);
            }
          }
          SharedPreferences.Editor localEditor = BaseApplicationImpl.getApplication().getSharedPreferences("rqd_catcher_pref", 4).edit();
          if (((JSONObject)localObject1).has("disable_rqd_catcher"))
          {
            bool1 = ((JSONObject)localObject1).optBoolean("disable_rqd_catcher");
            localEditor.putBoolean("disable_rqd_catcher", bool1).commit();
            if (QLog.isColorLevel()) {
              QLog.d("rqd_catcher_pref", 2, "disableRqdCatcher=" + bool1);
            }
          }
          if (((JSONObject)localObject1).has("enable_rqd_debug_log"))
          {
            bool1 = ((JSONObject)localObject1).optBoolean("enable_rqd_debug_log");
            localEditor.putBoolean("enable_rqd_debug_log", bool1).commit();
            if (QLog.isColorLevel()) {
              QLog.d("rqd_catcher_pref", 2, "enableRqdDebugLog=" + bool1);
            }
          }
        }
        catch (Exception localException2)
        {
          boolean bool1;
          boolean bool2;
          boolean bool3;
          boolean bool4;
          boolean bool5;
          boolean bool6;
          String str;
          QLog.d("ArkApp.AI_SPLASH_ConfigServlet", 1, "handleArkMsgAIDisableConfig parse config_content exception=" + localException2);
          continue;
        }
        i += 1;
      }
      catch (Exception localException1)
      {
        QLog.d("ArkApp.AI_SPLASH_ConfigServlet", 2, "handleArkMsgAIDisableConfig|uncompress failed");
        str = null;
        continue;
      }
      label670:
      str = str.content.get().toStringUtf8();
      continue;
      label686:
      bool1 = false;
      continue;
      label692:
      bool2 = false;
      continue;
      label698:
      bool3 = false;
      continue;
      label704:
      bool4 = false;
      continue;
      label710:
      bool5 = false;
      continue;
      label716:
      bool6 = false;
      continue;
      label755:
      Object localObject2 = null;
    }
  }
  
  void h(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig.type.get() != 170) {
      return;
    }
    int i = SharedPreUtils.aq(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
    int j = paramConfig.version.get();
    if (i == j)
    {
      QLog.i("ArkApp.DictConfig", 1, String.format("handleArkAIDictConfig, req-version equals to rsp-version, ver=%d", new Object[] { Integer.valueOf(i) }));
      return;
    }
    if ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() == 0))
    {
      QLog.i("ArkApp.DictConfig", 1, String.format("handleArkAIDictConfig, msg content list is empty", new Object[0]));
      return;
    }
    paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
    if (paramConfig == null)
    {
      QLog.i("ArkApp.DictConfig", 1, String.format("handleArkAIDictConfig, content is null", new Object[0]));
      return;
    }
    byte[] arrayOfByte;
    if (paramConfig.compress.get() == 1)
    {
      arrayOfByte = OlympicUtil.a(paramConfig.content.get().toByteArray());
      if (arrayOfByte == null) {
        break label327;
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(arrayOfByte, "UTF-8");
        if (paramConfig == null) {
          break;
        }
        try
        {
          new JSONObject(paramConfig);
          SharedPreUtils.i(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramConfig);
          SharedPreUtils.G(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
          ((ArkAppCenter)paramQQAppInterface.getManager(120)).a().a();
          QLog.i("ArkApp.DictConfig", 1, String.format("handleArkAIDictConfig, update dict config success, version=%d", new Object[] { Integer.valueOf(j) }));
          return;
        }
        catch (Exception paramQQAppInterface)
        {
          QLog.i("ArkApp.DictConfig", 1, String.format("handleArkAIDictConfig, parse json failed, msg=%s", new Object[] { paramQQAppInterface.getMessage() }));
          return;
        }
      }
      catch (Exception paramConfig)
      {
        QLog.i("ArkApp.DictConfig", 1, String.format("handleArkAIDictConfig, uncompress failed, buf-len=%d", new Object[] { Integer.valueOf(arrayOfByte.length) }));
        paramConfig = null;
        continue;
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label327:
      paramConfig = null;
    }
  }
  
  void i(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = SharedPreUtils.aw(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
    int j = paramConfig.version.get();
    if ((i != j) && (paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
    {
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramConfig != null)
      {
        if (paramConfig.compress.get() != 1) {
          break label219;
        }
        paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (paramConfig == null) {
          break label239;
        }
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (paramConfig == null) {}
      }
      catch (Exception paramConfig)
      {
        try
        {
          paramConfig = new JSONObject(paramConfig);
          boolean bool1 = paramConfig.getBoolean("wifiAutoPreDown");
          boolean bool2 = paramConfig.getBoolean("noSafeDown");
          SharedPreUtils.m(paramQQAppInterface.getApp(), "wifiAutoPreDown", "" + bool1);
          SharedPreUtils.m(paramQQAppInterface.getApp(), "noSafeDown", "" + bool2);
          SharedPreUtils.M(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
          return;
        }
        catch (Exception paramQQAppInterface)
        {
          paramQQAppInterface.printStackTrace();
          return;
        }
        paramConfig = paramConfig;
        QLog.d("SPLASH_ConfigServlet", 2, "handleQQPreDownYYBConfig|uncompress failed");
        paramConfig = null;
        continue;
      }
      label219:
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label239:
      paramConfig = null;
    }
  }
  
  void j(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int i = SharedPreUtils.au(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
    int j = paramConfig.version.get();
    if ((i != j) && (paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
    {
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramConfig != null)
      {
        if (paramConfig.compress.get() != 1) {
          break label206;
        }
        paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (paramConfig == null) {
          break label226;
        }
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (paramConfig == null) {}
      }
      catch (Exception paramConfig)
      {
        try
        {
          Object localObject = new JSONObject(paramConfig);
          paramConfig = ((JSONObject)localObject).getString("url");
          String str = ((JSONObject)localObject).getString("wantWord");
          localObject = ((JSONObject)localObject).getString("thxWord");
          SharedPreUtils.l(paramQQAppInterface.getApp(), "url", paramConfig);
          SharedPreUtils.l(paramQQAppInterface.getApp(), "thxWord", (String)localObject);
          SharedPreUtils.l(paramQQAppInterface.getApp(), "wantWord", str);
          SharedPreUtils.L(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
          return;
        }
        catch (Exception paramQQAppInterface)
        {
          paramQQAppInterface.printStackTrace();
          return;
        }
        paramConfig = paramConfig;
        QLog.d("SPLASH_ConfigServlet", 2, "handleBuluoConfig|uncompress failed");
        paramConfig = null;
        continue;
      }
      label206:
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label226:
      paramConfig = null;
    }
  }
  
  void k(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig.type.get() != 165) {}
    int j;
    do
    {
      int i;
      do
      {
        return;
        i = SharedPreUtils.ax(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        j = paramConfig.version.get();
      } while ((i == j) || (paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0));
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
    } while (paramConfig == null);
    if (paramConfig.compress.get() == 1)
    {
      paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
      if (paramConfig == null) {
        break label194;
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (paramConfig == null) {
          break;
        }
        try
        {
          boolean bool = new JSONObject(paramConfig).getBoolean("isShowBuluoNumRedDot");
          SharedPreUtils.N(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
          SharedPreUtils.k(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, bool);
          return;
        }
        catch (Exception paramQQAppInterface)
        {
          paramQQAppInterface.printStackTrace();
          return;
        }
      }
      catch (Exception paramConfig)
      {
        QLog.d("SPLASH_ConfigServlet", 2, "handleBuluoConfig|uncompress failed");
        paramConfig = null;
        continue;
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label194:
      paramConfig = null;
    }
  }
  
  void l(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    int j = HotPicManager.a(paramQQAppInterface);
    int i = paramConfig.version.get();
    if (QLog.isColorLevel()) {
      QLog.i("SPLASH_ConfigServlet", 2, "handleHotPicConfig l :" + j + " s : " + i);
    }
    if ((j != i) && (paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
    {
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramConfig != null)
      {
        if (paramConfig.compress.get() != 1) {
          break label296;
        }
        paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (paramConfig == null) {
          break label339;
        }
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (paramConfig != null) {
          QLog.i("HotPicManager", 1, "handleHotPicConfig content" + paramConfig);
        }
      }
      catch (Exception paramConfig)
      {
        try
        {
          paramConfig = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(paramConfig.getBytes("utf-8")));
          NodeList localNodeList = paramConfig.getElementsByTagName("hotpic_config");
          if ((localNodeList != null) && (localNodeList.getLength() > 0))
          {
            j = Integer.parseInt(paramConfig.getElementsByTagName("entry").item(0).getFirstChild().getNodeValue());
            HotPicManager.a(paramQQAppInterface, i);
            HotPicManager.a(paramQQAppInterface).b(j);
          }
          return;
        }
        catch (Exception paramQQAppInterface)
        {
          QLog.e("HotPicManager", 1, "handleHotPicConfig failed" + paramQQAppInterface);
          return;
        }
        paramConfig = paramConfig;
        QLog.e("HotPicManager", 1, "handleHotPicConfig|uncompress failed" + paramConfig);
        paramConfig = null;
        continue;
      }
      label296:
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label339:
      paramConfig = null;
    }
  }
  
  void m(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (QLog.isColorLevel()) {
      QLog.d("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_QQ_MAIL_CONFIG response");
    }
    for (;;)
    {
      int i;
      try
      {
        if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
        {
          int j = paramConfig.version.get();
          int k = PublicAccountConfigUtil.c(paramQQAppInterface);
          if (j != k)
          {
            i = 0;
            if (i < paramConfig.msg_content_list.size())
            {
              Object localObject = (ConfigurationService.Content)paramConfig.msg_content_list.get(i);
              if (localObject != null)
              {
                if (((ConfigurationService.Content)localObject).compress.get() == 1)
                {
                  localObject = OlympicUtil.a(((ConfigurationService.Content)localObject).content.get().toByteArray());
                  if (localObject == null) {
                    break label310;
                  }
                  try
                  {
                    localObject = new String((byte[])localObject, "UTF-8");
                    if (QLog.isColorLevel()) {
                      QLog.d("SPLASH_ConfigServlet", 2, "receiveAllConfigs|type: 184, version:" + paramConfig.version.get() + ", content:" + (String)localObject);
                    }
                    PublicAccountConfigUtil.a(paramQQAppInterface, (String)localObject, j);
                  }
                  catch (Exception localException)
                  {
                    localException.printStackTrace();
                    break label310;
                  }
                }
                else
                {
                  str = localException.content.get().toStringUtf8();
                  continue;
                }
              }
              else if (QLog.isColorLevel()) {
                QLog.d("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_QQ_MAIL_CONFIG remote version: " + j + " | localVersion: " + k);
              }
            }
          }
        }
      }
      catch (Exception paramQQAppInterface)
      {
        if (QLog.isColorLevel()) {
          QLog.e("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_QQ_MAIL_CONFIG error", paramQQAppInterface);
        }
        paramQQAppInterface.printStackTrace();
      }
      while (!QLog.isColorLevel()) {
        return;
      }
      QLog.d("SPLASH_ConfigServlet", 2, "received PUBLIC_ACCOUNT_QQ_MAIL_CONFIG content_list is empty");
      return;
      i += 1;
      continue;
      label310:
      String str = null;
    }
  }
  
  /* Error */
  void n(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    // Byte code:
    //   0: aload_2
    //   1: getfield 192	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:type	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   4: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7: sipush 189
    //   10: if_icmpeq +4 -> 14
    //   13: return
    //   14: aload_1
    //   15: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   18: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   21: invokestatic 2275	com/tencent/mobileqq/utils/SharedPreUtils:aE	(Landroid/content/Context;Ljava/lang/String;)I
    //   24: istore_3
    //   25: aload_2
    //   26: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   29: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   32: istore 6
    //   34: iload 6
    //   36: iload_3
    //   37: if_icmpeq -24 -> 13
    //   40: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   43: ifeq +30 -> 73
    //   46: ldc 90
    //   48: iconst_2
    //   49: new 92	java/lang/StringBuilder
    //   52: dup
    //   53: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   56: ldc_w 7005
    //   59: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   62: iload 6
    //   64: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   67: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   70: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   73: aload_2
    //   74: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   77: ifnull +486 -> 563
    //   80: aload_2
    //   81: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   84: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   87: ifle +476 -> 563
    //   90: aload_2
    //   91: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   94: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   97: istore 7
    //   99: iconst_m1
    //   100: istore_3
    //   101: iconst_0
    //   102: istore 4
    //   104: iload 4
    //   106: iload 7
    //   108: if_icmpge +455 -> 563
    //   111: aload_2
    //   112: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   115: iload 4
    //   117: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   120: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   123: astore 9
    //   125: aload 9
    //   127: ifnull +433 -> 560
    //   130: aload 9
    //   132: getfield 235	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:task_id	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   135: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   138: istore 5
    //   140: aload 9
    //   142: getfield 912	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:compress	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   145: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   148: iconst_1
    //   149: if_icmpne +148 -> 297
    //   152: aload 9
    //   154: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   157: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   160: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   163: invokestatic 932	com/tencent/mobileqq/olympic/utils/OlympicUtil:a	([B)[B
    //   166: astore 9
    //   168: aload 9
    //   170: ifnull +406 -> 576
    //   173: new 139	java/lang/String
    //   176: dup
    //   177: aload 9
    //   179: ldc_w 934
    //   182: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   185: astore 9
    //   187: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   190: ifeq +41 -> 231
    //   193: ldc 90
    //   195: iconst_2
    //   196: new 92	java/lang/StringBuilder
    //   199: dup
    //   200: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   203: ldc_w 7007
    //   206: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   209: iload 5
    //   211: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   214: ldc_w 7009
    //   217: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   220: aload 9
    //   222: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   225: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   228: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   231: iload 5
    //   233: iload_3
    //   234: if_icmpge +79 -> 313
    //   237: ldc 90
    //   239: iconst_1
    //   240: new 92	java/lang/StringBuilder
    //   243: dup
    //   244: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   247: ldc_w 7011
    //   250: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   253: iload 5
    //   255: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   258: ldc_w 7013
    //   261: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   264: iload_3
    //   265: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   268: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   271: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   274: iload 4
    //   276: iconst_1
    //   277: iadd
    //   278: istore 4
    //   280: goto -176 -> 104
    //   283: astore 9
    //   285: ldc 90
    //   287: iconst_1
    //   288: ldc_w 7015
    //   291: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   294: goto -20 -> 274
    //   297: aload 9
    //   299: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   302: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   305: invokevirtual 971	com/tencent/mobileqq/pb/ByteStringMicro:toStringUtf8	()Ljava/lang/String;
    //   308: astore 9
    //   310: goto -123 -> 187
    //   313: new 141	org/json/JSONObject
    //   316: dup
    //   317: new 139	java/lang/String
    //   320: dup
    //   321: aload 9
    //   323: ldc_w 433
    //   326: invokevirtual 437	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   329: invokespecial 4533	java/lang/String:<init>	([B)V
    //   332: invokespecial 144	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   335: astore 9
    //   337: aload_1
    //   338: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   341: ldc_w 7017
    //   344: iconst_0
    //   345: invokevirtual 639	com/tencent/qphone/base/util/BaseApplication:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   348: invokeinterface 645 1 0
    //   353: astore 10
    //   355: aload 9
    //   357: ldc_w 7019
    //   360: invokevirtual 150	org/json/JSONObject:has	(Ljava/lang/String;)Z
    //   363: ifeq +66 -> 429
    //   366: aload 9
    //   368: ldc_w 7019
    //   371: invokevirtual 737	org/json/JSONObject:optInt	(Ljava/lang/String;)I
    //   374: putstatic 7022	com/tencent/mobileqq/emoticon/EmojiStickerManager:f	I
    //   377: getstatic 7022	com/tencent/mobileqq/emoticon/EmojiStickerManager:f	I
    //   380: ifgt +9 -> 389
    //   383: getstatic 7023	com/tencent/mobileqq/emoticon/EmojiStickerManager:c	I
    //   386: putstatic 7022	com/tencent/mobileqq/emoticon/EmojiStickerManager:f	I
    //   389: aload 10
    //   391: new 92	java/lang/StringBuilder
    //   394: dup
    //   395: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   398: ldc_w 7025
    //   401: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   404: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   407: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   410: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   413: getstatic 7022	com/tencent/mobileqq/emoticon/EmojiStickerManager:f	I
    //   416: invokeinterface 953 3 0
    //   421: pop
    //   422: aload 10
    //   424: invokeinterface 2593 1 0
    //   429: aload 9
    //   431: ldc_w 7027
    //   434: invokevirtual 150	org/json/JSONObject:has	(Ljava/lang/String;)Z
    //   437: ifeq +67 -> 504
    //   440: aload 9
    //   442: ldc_w 7027
    //   445: invokevirtual 737	org/json/JSONObject:optInt	(Ljava/lang/String;)I
    //   448: putstatic 7028	com/tencent/mobileqq/emoticon/EmojiStickerManager:e	I
    //   451: getstatic 7028	com/tencent/mobileqq/emoticon/EmojiStickerManager:e	I
    //   454: ifgt +9 -> 463
    //   457: getstatic 7023	com/tencent/mobileqq/emoticon/EmojiStickerManager:c	I
    //   460: putstatic 7028	com/tencent/mobileqq/emoticon/EmojiStickerManager:e	I
    //   463: aload 10
    //   465: new 92	java/lang/StringBuilder
    //   468: dup
    //   469: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   472: ldc_w 7030
    //   475: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   478: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   481: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   484: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   487: getstatic 7028	com/tencent/mobileqq/emoticon/EmojiStickerManager:e	I
    //   490: invokeinterface 953 3 0
    //   495: pop
    //   496: aload 10
    //   498: invokeinterface 656 1 0
    //   503: pop
    //   504: aload 9
    //   506: ldc_w 7032
    //   509: invokevirtual 150	org/json/JSONObject:has	(Ljava/lang/String;)Z
    //   512: ifeq +23 -> 535
    //   515: aload 9
    //   517: ldc_w 7032
    //   520: invokevirtual 737	org/json/JSONObject:optInt	(Ljava/lang/String;)I
    //   523: iconst_1
    //   524: if_icmpne +17 -> 541
    //   527: iconst_1
    //   528: istore 8
    //   530: iload 8
    //   532: invokestatic 7035	com/tencent/biz/flatbuffers/FlatBuffersParser:a	(Z)V
    //   535: iload 5
    //   537: istore_3
    //   538: goto -264 -> 274
    //   541: iconst_0
    //   542: istore 8
    //   544: goto -14 -> 530
    //   547: astore 9
    //   549: ldc 90
    //   551: iconst_1
    //   552: ldc_w 7037
    //   555: aload 9
    //   557: invokestatic 804	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V
    //   560: goto -286 -> 274
    //   563: aload_1
    //   564: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   567: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   570: iload 6
    //   572: invokestatic 7039	com/tencent/mobileqq/utils/SharedPreUtils:T	(Landroid/content/Context;Ljava/lang/String;I)V
    //   575: return
    //   576: aconst_null
    //   577: astore 9
    //   579: goto -392 -> 187
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	582	0	this	ConfigServlet
    //   0	582	1	paramQQAppInterface	QQAppInterface
    //   0	582	2	paramConfig	ConfigurationService.Config
    //   24	514	3	i	int
    //   102	177	4	j	int
    //   138	398	5	k	int
    //   32	539	6	m	int
    //   97	12	7	n	int
    //   528	15	8	bool	boolean
    //   123	98	9	localObject1	Object
    //   283	15	9	localException1	Exception
    //   308	208	9	localObject2	Object
    //   547	9	9	localException2	Exception
    //   577	1	9	localObject3	Object
    //   353	144	10	localEditor	SharedPreferences.Editor
    // Exception table:
    //   from	to	target	type
    //   173	187	283	java/lang/Exception
    //   187	231	547	java/lang/Exception
    //   237	274	547	java/lang/Exception
    //   313	389	547	java/lang/Exception
    //   389	429	547	java/lang/Exception
    //   429	463	547	java/lang/Exception
    //   463	504	547	java/lang/Exception
    //   504	527	547	java/lang/Exception
    //   530	535	547	java/lang/Exception
  }
  
  void o(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig.type.get() != 207) {}
    int i;
    int j;
    do
    {
      return;
      i = SharedPreUtils.aF(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      j = paramConfig.version.get();
    } while (j == i);
    if (QLog.isColorLevel()) {
      QLog.i("SPLASH_ConfigServlet", 2, "handleWebcgiWhiteListConfig, new version : " + j);
    }
    if ((paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
    {
      QLog.i("SPLASH_ConfigServlet", 1, "handleWebcgiWhiteListConfig, content_list.size : " + paramConfig.msg_content_list.size());
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if ((paramConfig != null) && (paramConfig.content.has()))
      {
        if (paramConfig.compress.get() != 1) {
          break label362;
        }
        paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (paramConfig == null) {
          break label406;
        }
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (paramConfig != null) {}
        try
        {
          if (QLog.isColorLevel()) {
            QLog.i("SPLASH_ConfigServlet", 2, "receive WebcgiWhiteList: " + paramConfig);
          }
          SharedPreferences.Editor localEditor = paramQQAppInterface.getApp().getSharedPreferences("sp_cgi_whitelist", 4).edit();
          paramConfig = new JSONObject(paramConfig);
          JSONArray localJSONArray = paramConfig.optJSONArray("whiteList");
          if (localJSONArray != null) {
            localEditor.putString("whitelist_config_json", localJSONArray.toString());
          }
          paramConfig = paramConfig.optJSONObject("jumpLimit");
          if (paramConfig != null) {
            localEditor.putString("max_verify_times", paramConfig.toString());
          }
          localEditor.commit();
        }
        catch (Exception paramConfig)
        {
          QLog.e("SPLASH_ConfigServlet", 1, "handleWebcgiWhiteListConfig failed" + paramConfig);
          continue;
        }
        SharedPreUtils.U(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
        return;
      }
      catch (Exception paramConfig)
      {
        QLog.e("SPLASH_ConfigServlet", 1, "handleWebcgiWhiteListConfig|uncompress failed" + paramConfig);
        paramConfig = null;
        continue;
      }
      label362:
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label406:
      paramConfig = null;
    }
  }
  
  public void onReceive(Intent paramIntent, FromServiceMsg paramFromServiceMsg)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    int[] arrayOfInt = paramIntent.getIntArrayExtra("k_cmd_type");
    boolean bool = paramFromServiceMsg.isSuccess();
    if ((arrayOfInt == null) || (arrayOfInt.length == 0)) {}
    for (;;)
    {
      return;
      if (QLog.isColorLevel())
      {
        int i = 0;
        while (i < arrayOfInt.length)
        {
          QLog.i("SPLASH_ConfigServlet", 2, "onReceive|shouldReceive cmd: " + arrayOfInt[i] + ",length: " + arrayOfInt.length);
          i += 1;
        }
      }
      Object localObject = paramFromServiceMsg.getWupBuffer();
      if ((localObject == null) || (localObject.length < 4))
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "wup buf is null!!!");
        }
      }
      else
      {
        paramFromServiceMsg.putWupBuffer(a((byte[])localObject));
        localObject = new ConfigurationService.RespGetConfig();
        try
        {
          ((ConfigurationService.RespGetConfig)localObject).mergeFrom(paramFromServiceMsg.getWupBuffer());
          try
          {
            a((ConfigurationService.RespGetConfig)localObject, localQQAppInterface, paramIntent, arrayOfInt, bool);
            return;
          }
          catch (Exception paramIntent) {}
          if (QLog.isColorLevel())
          {
            QLog.w("SPLASH_ConfigServlet", 2, paramIntent.toString());
            return;
          }
        }
        catch (InvalidProtocolBufferMicroException paramIntent)
        {
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "error: " + paramIntent.toString());
          }
          paramIntent.printStackTrace();
        }
      }
    }
  }
  
  public void onSend(Intent paramIntent, Packet paramPacket)
  {
    QQAppInterface localQQAppInterface = (QQAppInterface)getAppRuntime();
    int[] arrayOfInt = paramIntent.getIntArrayExtra("k_cmd_type");
    if ((arrayOfInt == null) || (arrayOfInt.length == 0)) {
      return;
    }
    if (QLog.isColorLevel())
    {
      int i = 0;
      while (i < arrayOfInt.length)
      {
        QLog.i("SPLASH_ConfigServlet", 2, "onSend. cmd: " + arrayOfInt[i] + ",length: " + arrayOfInt.length);
        i += 1;
      }
    }
    a(localQQAppInterface, paramIntent, arrayOfInt, paramPacket);
  }
  
  /* Error */
  void p(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    // Byte code:
    //   0: aload_2
    //   1: getfield 192	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:type	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   4: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   7: sipush 191
    //   10: if_icmpeq +4 -> 14
    //   13: return
    //   14: aload_1
    //   15: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   18: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   21: invokestatic 2283	com/tencent/mobileqq/utils/SharedPreUtils:aL	(Landroid/content/Context;Ljava/lang/String;)I
    //   24: istore_3
    //   25: aload_2
    //   26: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   29: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   32: istore 4
    //   34: iload 4
    //   36: iload_3
    //   37: if_icmpeq -24 -> 13
    //   40: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   43: ifeq +30 -> 73
    //   46: ldc 90
    //   48: iconst_2
    //   49: new 92	java/lang/StringBuilder
    //   52: dup
    //   53: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   56: ldc_w 7106
    //   59: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   62: iload 4
    //   64: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   67: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   70: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   73: aload_2
    //   74: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   77: ifnull -64 -> 13
    //   80: aload_2
    //   81: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   84: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   87: ifle -74 -> 13
    //   90: aload_2
    //   91: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   94: iconst_0
    //   95: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   98: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   101: astore_2
    //   102: aload_2
    //   103: ifnull -90 -> 13
    //   106: aload_2
    //   107: getfield 912	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:compress	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   110: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   113: iconst_1
    //   114: if_icmpne +349 -> 463
    //   117: aload_2
    //   118: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   121: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   124: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   127: invokestatic 932	com/tencent/mobileqq/olympic/utils/OlympicUtil:a	([B)[B
    //   130: astore_2
    //   131: aload_2
    //   132: ifnull +442 -> 574
    //   135: new 139	java/lang/String
    //   138: dup
    //   139: aload_2
    //   140: ldc_w 934
    //   143: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   146: astore_2
    //   147: aload_2
    //   148: ifnull -135 -> 13
    //   151: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   154: ifeq +29 -> 183
    //   157: ldc 90
    //   159: iconst_2
    //   160: new 92	java/lang/StringBuilder
    //   163: dup
    //   164: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   167: ldc_w 7108
    //   170: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   173: aload_2
    //   174: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   177: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   180: invokestatic 226	com/tencent/qphone/base/util/QLog:d	(Ljava/lang/String;ILjava/lang/String;)V
    //   183: new 141	org/json/JSONObject
    //   186: dup
    //   187: aload_2
    //   188: invokespecial 144	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   191: astore 5
    //   193: aload 5
    //   195: ifnull -182 -> 13
    //   198: aload 5
    //   200: invokevirtual 7109	org/json/JSONObject:length	()I
    //   203: ifle -190 -> 13
    //   206: new 215	java/util/ArrayList
    //   209: dup
    //   210: invokespecial 216	java/util/ArrayList:<init>	()V
    //   213: astore_2
    //   214: aload 5
    //   216: invokevirtual 7112	org/json/JSONObject:keys	()Ljava/util/Iterator;
    //   219: astore 6
    //   221: aload 6
    //   223: invokeinterface 133 1 0
    //   228: ifeq +310 -> 538
    //   231: aload 6
    //   233: invokeinterface 137 1 0
    //   238: checkcast 139	java/lang/String
    //   241: astore 7
    //   243: aload 5
    //   245: aload 7
    //   247: invokevirtual 1096	org/json/JSONObject:optJSONObject	(Ljava/lang/String;)Lorg/json/JSONObject;
    //   250: astore 8
    //   252: new 5960	com/tencent/mobileqq/data/AppGuideTipsConfig
    //   255: dup
    //   256: invokespecial 5961	com/tencent/mobileqq/data/AppGuideTipsConfig:<init>	()V
    //   259: astore 9
    //   261: aload 9
    //   263: aload 7
    //   265: putfield 7115	com/tencent/mobileqq/data/AppGuideTipsConfig:tipsType	Ljava/lang/String;
    //   268: aload 9
    //   270: aload 8
    //   272: ldc_w 939
    //   275: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   278: putfield 5970	com/tencent/mobileqq/data/AppGuideTipsConfig:switchKey	Ljava/lang/String;
    //   281: aload 9
    //   283: aload 8
    //   285: ldc_w 5972
    //   288: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   291: invokestatic 487	java/lang/Integer:valueOf	(Ljava/lang/String;)Ljava/lang/Integer;
    //   294: invokevirtual 490	java/lang/Integer:intValue	()I
    //   297: putfield 5975	com/tencent/mobileqq/data/AppGuideTipsConfig:maxCount	I
    //   300: aload 9
    //   302: aload 8
    //   304: ldc_w 5977
    //   307: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   310: invokestatic 746	java/lang/Long:valueOf	(Ljava/lang/String;)Ljava/lang/Long;
    //   313: invokevirtual 750	java/lang/Long:longValue	()J
    //   316: putfield 5979	com/tencent/mobileqq/data/AppGuideTipsConfig:duration	J
    //   319: aload 9
    //   321: aload 8
    //   323: ldc_w 1314
    //   326: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   329: putfield 5982	com/tencent/mobileqq/data/AppGuideTipsConfig:tipsUrl	Ljava/lang/String;
    //   332: aload 9
    //   334: aload 8
    //   336: ldc_w 7117
    //   339: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   342: putfield 7119	com/tencent/mobileqq/data/AppGuideTipsConfig:opkey	Ljava/lang/String;
    //   345: aload 9
    //   347: aload 8
    //   349: ldc_w 5987
    //   352: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   355: putfield 5990	com/tencent/mobileqq/data/AppGuideTipsConfig:msgTypeStr	Ljava/lang/String;
    //   358: ldc_w 989
    //   361: aload 7
    //   363: invokevirtual 503	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   366: ifeq +143 -> 509
    //   369: aload 8
    //   371: ldc_w 1290
    //   374: invokevirtual 150	org/json/JSONObject:has	(Ljava/lang/String;)Z
    //   377: ifeq +100 -> 477
    //   380: aload 9
    //   382: aload 8
    //   384: ldc_w 1290
    //   387: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   390: putfield 5985	com/tencent/mobileqq/data/AppGuideTipsConfig:tipsMsg	Ljava/lang/String;
    //   393: aload 8
    //   395: ldc_w 1098
    //   398: invokevirtual 150	org/json/JSONObject:has	(Ljava/lang/String;)Z
    //   401: ifeq +92 -> 493
    //   404: aload 9
    //   406: aload 8
    //   408: ldc_w 1098
    //   411: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   414: putfield 7122	com/tencent/mobileqq/data/AppGuideTipsConfig:tipsHighLight	Ljava/lang/String;
    //   417: aload_2
    //   418: aload 9
    //   420: invokeinterface 252 2 0
    //   425: pop
    //   426: goto -205 -> 221
    //   429: astore_1
    //   430: ldc 90
    //   432: iconst_1
    //   433: new 92	java/lang/StringBuilder
    //   436: dup
    //   437: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   440: ldc_w 7124
    //   443: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   446: aload_1
    //   447: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   450: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   453: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   456: return
    //   457: astore_2
    //   458: aconst_null
    //   459: astore_2
    //   460: goto -313 -> 147
    //   463: aload_2
    //   464: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   467: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   470: invokevirtual 971	com/tencent/mobileqq/pb/ByteStringMicro:toStringUtf8	()Ljava/lang/String;
    //   473: astore_2
    //   474: goto -327 -> 147
    //   477: aload 9
    //   479: aload 8
    //   481: ldc_w 7126
    //   484: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   487: putfield 5985	com/tencent/mobileqq/data/AppGuideTipsConfig:tipsMsg	Ljava/lang/String;
    //   490: goto -97 -> 393
    //   493: aload 9
    //   495: aload 8
    //   497: ldc_w 7128
    //   500: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   503: putfield 7122	com/tencent/mobileqq/data/AppGuideTipsConfig:tipsHighLight	Ljava/lang/String;
    //   506: goto -89 -> 417
    //   509: aload 9
    //   511: aload 8
    //   513: ldc_w 7126
    //   516: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   519: putfield 5985	com/tencent/mobileqq/data/AppGuideTipsConfig:tipsMsg	Ljava/lang/String;
    //   522: aload 9
    //   524: aload 8
    //   526: ldc_w 7128
    //   529: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   532: putfield 7122	com/tencent/mobileqq/data/AppGuideTipsConfig:tipsHighLight	Ljava/lang/String;
    //   535: goto -118 -> 417
    //   538: aload_1
    //   539: sipush 217
    //   542: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   545: checkcast 3797	com/tencent/mobileqq/activity/aio/AppGuideTipsManager
    //   548: astore 5
    //   550: aload 5
    //   552: aload_2
    //   553: invokevirtual 7129	com/tencent/mobileqq/activity/aio/AppGuideTipsManager:a	(Ljava/util/List;)V
    //   556: aload 5
    //   558: invokevirtual 3798	com/tencent/mobileqq/activity/aio/AppGuideTipsManager:a	()V
    //   561: aload_1
    //   562: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   565: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   568: iload 4
    //   570: invokestatic 7131	com/tencent/mobileqq/utils/SharedPreUtils:ab	(Landroid/content/Context;Ljava/lang/String;I)V
    //   573: return
    //   574: aconst_null
    //   575: astore_2
    //   576: goto -429 -> 147
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	579	0	this	ConfigServlet
    //   0	579	1	paramQQAppInterface	QQAppInterface
    //   0	579	2	paramConfig	ConfigurationService.Config
    //   24	14	3	i	int
    //   32	537	4	j	int
    //   191	366	5	localObject	Object
    //   219	13	6	localIterator	Iterator
    //   241	121	7	str	String
    //   250	275	8	localJSONObject	JSONObject
    //   259	264	9	localAppGuideTipsConfig	AppGuideTipsConfig
    // Exception table:
    //   from	to	target	type
    //   183	193	429	java/lang/Exception
    //   198	221	429	java/lang/Exception
    //   221	393	429	java/lang/Exception
    //   393	417	429	java/lang/Exception
    //   417	426	429	java/lang/Exception
    //   477	490	429	java/lang/Exception
    //   493	506	429	java/lang/Exception
    //   509	535	429	java/lang/Exception
    //   538	573	429	java/lang/Exception
    //   135	147	457	java/lang/Exception
  }
  
  void q(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig.type.get() != 194) {
      return;
    }
    int i = SharedPreUtils.av(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
    int j = paramConfig.version.get();
    if (QLog.isColorLevel()) {
      QLog.d("PobingSPLASH_ConfigServlet", 2, "handleTroopPobingConfig reqVersion=" + i + "version=" + j);
    }
    if ((i != j) && (paramConfig.msg_content_list != null) && (paramConfig.msg_content_list.size() > 0))
    {
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
      if (paramConfig != null)
      {
        if (paramConfig.compress.get() != 1) {
          break label359;
        }
        paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
        if (paramConfig == null) {
          break label403;
        }
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (paramConfig != null)
        {
          if (QLog.isColorLevel()) {
            QLog.d("Pobing", 1, "handleTroopPobingConfig content" + paramConfig);
          }
          if (paramConfig == null) {}
        }
        try
        {
          Object localObject = new JSONObject(paramConfig);
          JSONArray localJSONArray = ((JSONObject)localObject).getJSONArray("left");
          localObject = ((JSONObject)localObject).getJSONArray("right");
          if (QLog.isColorLevel())
          {
            QLog.d("SPLASH_ConfigServlet", 1, "handleTroopPobingConfig content" + paramConfig + " left: " + localJSONArray);
            QLog.d("SPLASH_ConfigServlet", 1, "handleTroopPobingConfig content" + paramConfig + " right: " + localObject);
          }
          TroopPobingItemBuilder.a(paramQQAppInterface, jdField_a_of_type_JavaLangString, localJSONArray, (JSONArray)localObject);
          TroopPobingItemBuilder.a(paramQQAppInterface);
        }
        catch (Exception paramConfig)
        {
          QLog.e("SPLASH_ConfigServlet", 1, "handleTroopPobingConfig failed" + paramConfig);
          continue;
        }
        SharedPreUtils.K(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
        return;
      }
      catch (Exception paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.d("PobingSPLASH_ConfigServlet", 2, "handleTroopPobingConfig|uncompress failed");
        }
        paramConfig = null;
        continue;
      }
      label359:
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label403:
      paramConfig = null;
    }
  }
  
  void r(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig.type.get() != 181) {}
    int i;
    int j;
    do
    {
      do
      {
        do
        {
          return;
          i = SharedPreUtils.aB(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
          j = paramConfig.version.get();
          if (QLog.isColorLevel()) {
            QLog.d("DoutuSPLASH_ConfigServlet", 2, "handleDoutuConfig reqVersion = " + i + ", version=" + j);
          }
        } while (i == j);
        SharedPreUtils.V(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
      } while ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0));
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
    } while (paramConfig == null);
    if (paramConfig.compress.get() == 1)
    {
      paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
      if (paramConfig == null) {
        break label945;
      }
    }
    for (;;)
    {
      int k;
      try
      {
        for (;;)
        {
          paramConfig = new String(paramConfig, "UTF-8");
          if (paramConfig == null) {
            break label838;
          }
          if (QLog.isColorLevel()) {
            QLog.d("Doutu", 1, "handleDoutuConfig content" + paramConfig);
          }
          try
          {
            Object localObject = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(paramConfig.getBytes("utf-8")));
            paramConfig = ((Document)localObject).getElementsByTagName("doutu_config");
            if ((paramConfig == null) || (paramConfig.getLength() <= 0)) {
              break;
            }
            i = Integer.parseInt(((Document)localObject).getElementsByTagName("entry").item(0).getFirstChild().getNodeValue());
            l1 = Long.parseLong(((Document)localObject).getElementsByTagName("timeGap").item(0).getFirstChild().getNodeValue());
            j = Integer.parseInt(((Document)localObject).getElementsByTagName("entryCombo").item(0).getFirstChild().getNodeValue());
            paramConfig = ((Document)localObject).getElementsByTagName("resUrl").item(0).getFirstChild().getNodeValue();
            String str1 = ((Document)localObject).getElementsByTagName("resMd5").item(0).getFirstChild().getNodeValue();
            l2 = Long.parseLong(((Document)localObject).getElementsByTagName("comboDuration").item(0).getFirstChild().getNodeValue());
            l3 = Long.parseLong(((Document)localObject).getElementsByTagName("comboKeep").item(0).getFirstChild().getNodeValue());
            k = Integer.parseInt(((Document)localObject).getElementsByTagName("smartSwitch").item(0).getFirstChild().getNodeValue());
            m = Integer.parseInt(((Document)localObject).getElementsByTagName("smartHeadPicCount").item(0).getFirstChild().getNodeValue());
            localObject = paramQQAppInterface.getApp();
            String str2 = jdField_a_of_type_JavaLangString;
            if (i != 1) {
              break label802;
            }
            bool1 = true;
            SharedPreUtils.m((Context)localObject, str2, bool1);
            SharedPreUtils.c(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, l1);
            localObject = paramQQAppInterface.getApp();
            str2 = jdField_a_of_type_JavaLangString;
            if (j != 1) {
              break label808;
            }
            bool1 = true;
            SharedPreUtils.o((Context)localObject, str2, bool1);
            localObject = paramQQAppInterface.getApp();
            str2 = jdField_a_of_type_JavaLangString;
            if (k != 1) {
              break label814;
            }
            bool1 = true;
            SharedPreUtils.p((Context)localObject, str2, bool1);
            SharedPreUtils.o(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramConfig);
            SharedPreUtils.p(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, str1);
            SharedPreUtils.d(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, l2);
            SharedPreUtils.e(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, l3);
            SharedPreUtils.X(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, m);
            paramQQAppInterface = (DoutuManager)getAppRuntime().getManager(213);
            if (paramQQAppInterface == null) {
              break;
            }
            if (i != 1) {
              break label820;
            }
            bool1 = true;
          }
          catch (Exception paramQQAppInterface)
          {
            long l1;
            long l2;
            long l3;
            int m;
            label713:
            QLog.e("HotPicManager", 1, "handleDoutuConfig failed" + paramQQAppInterface);
            return;
          }
        }
        paramQQAppInterface.a(bool1, bool2, l1, l2, l3, bool3, m);
        paramQQAppInterface.b(true);
        return;
      }
      catch (Exception paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.d("DoutuSPLASH_ConfigServlet", 2, "handleDoutuConfig|uncompress failed");
        }
        paramConfig = null;
        continue;
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label802:
      boolean bool1 = false;
      continue;
      label808:
      bool1 = false;
      continue;
      label814:
      bool1 = false;
      continue;
      label820:
      bool1 = false;
      label826:
      for (boolean bool2 = false; k != 1; bool2 = true)
      {
        bool3 = false;
        break label713;
        label838:
        if (QLog.isColorLevel()) {
          QLog.d("Doutu", 1, "handleDoutuConfig content is null");
        }
        SharedPreUtils.m(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        SharedPreUtils.v(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        SharedPreUtils.n(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        SharedPreUtils.o(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        SharedPreUtils.q(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        SharedPreUtils.r(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        SharedPreUtils.w(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        SharedPreUtils.x(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        SharedPreUtils.p(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
        return;
        paramConfig = null;
        break;
        if (j != 1) {
          break label826;
        }
      }
      label945:
      boolean bool3 = true;
    }
  }
  
  void s(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig.type.get() != 252) {}
    do
    {
      do
      {
        int i;
        int j;
        do
        {
          return;
          i = SharedPreUtils.aJ(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
          j = paramConfig.version.get();
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "handleVideoRedbagConfig reqVersion = " + i + ", version=" + j);
          }
        } while (i == j);
        SharedPreUtils.aa(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
      } while ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0));
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
    } while (paramConfig == null);
    if (paramConfig.compress.get() == 1)
    {
      paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
      if (paramConfig == null) {
        break label431;
      }
    }
    for (;;)
    {
      try
      {
        for (;;)
        {
          paramConfig = new String(paramConfig, "UTF-8");
          if (paramConfig == null) {
            break label395;
          }
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "handleVideoRedbagConfig content" + paramConfig);
          }
          try
          {
            paramConfig = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(paramConfig.getBytes("utf-8")));
            Object localObject = paramConfig.getElementsByTagName("video_redbag_config");
            if ((localObject == null) || (((NodeList)localObject).getLength() <= 0)) {
              break;
            }
            localObject = paramConfig.getElementsByTagName("resUrl").item(0).getFirstChild().getNodeValue();
            paramConfig = paramConfig.getElementsByTagName("resMd5").item(0).getFirstChild().getNodeValue();
            SharedPreUtils.r(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, (String)localObject);
            SharedPreUtils.q(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, paramConfig);
            return;
          }
          catch (Exception paramQQAppInterface)
          {
            QLog.e("SPLASH_ConfigServlet", 1, "handleVideoRedbagConfig failed" + paramQQAppInterface);
            return;
          }
        }
      }
      catch (Exception paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "handleVideoRedbagConfig|uncompress failed");
        }
        paramConfig = null;
        continue;
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label395:
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "handleVideoRedbagConfig content is null");
      }
      SharedPreUtils.t(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      SharedPreUtils.s(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      return;
      label431:
      paramConfig = null;
    }
  }
  
  void t(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig.type.get() != 247) {}
    do
    {
      do
      {
        int i;
        int j;
        do
        {
          return;
          i = SharedPreUtils.A(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
          j = paramConfig.version.get();
          if (QLog.isColorLevel()) {
            QLog.d("GreenVideoSPLASH_ConfigServlet", 2, "handleGreenVideoConfig reqVersion = " + i + ", version=" + j);
          }
        } while (i == j);
        SharedPreUtils.f(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
      } while ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0));
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
    } while (paramConfig == null);
    if (paramConfig.compress.get() == 1)
    {
      paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
      if (paramConfig == null) {
        break label276;
      }
    }
    for (;;)
    {
      try
      {
        paramConfig = new String(paramConfig, "UTF-8");
        if (paramConfig == null) {
          break label252;
        }
        if (QLog.isColorLevel()) {
          QLog.d("GreenVideo", 1, "handleGreenVideoConfig content : " + paramConfig);
        }
        SharedPreUtils.e(paramQQAppInterface.getApp(), paramConfig);
        return;
      }
      catch (Exception paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.d("GreenVideoSPLASH_ConfigServlet", 2, "handleGreenVideoConfig|uncompress failed");
        }
        paramConfig = null;
        continue;
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label252:
      if (QLog.isColorLevel()) {
        QLog.d("GreenVideo", 1, "handleGreenVideoConfig content is null");
      }
      SharedPreUtils.a(paramQQAppInterface.getApp());
      return;
      label276:
      paramConfig = null;
    }
  }
  
  void u(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    if (paramConfig.type.get() != 272) {}
    do
    {
      do
      {
        int i;
        int j;
        do
        {
          return;
          i = SharedPreUtils.C(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
          j = paramConfig.version.get();
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "handleVideoCompressConfig reqVersion = " + i + ", version=" + j);
          }
        } while (i == j);
        SharedPreUtils.h(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, j);
      } while ((paramConfig.msg_content_list == null) || (paramConfig.msg_content_list.size() <= 0));
      paramConfig = (ConfigurationService.Content)paramConfig.msg_content_list.get(0);
    } while (paramConfig == null);
    if (paramConfig.compress.get() == 1)
    {
      paramConfig = OlympicUtil.a(paramConfig.content.get().toByteArray());
      if (paramConfig == null) {
        break label616;
      }
    }
    for (;;)
    {
      try
      {
        for (;;)
        {
          paramConfig = new String(paramConfig, "UTF-8");
          if (paramConfig == null) {
            break label590;
          }
          if (QLog.isColorLevel()) {
            QLog.d("SPLASH_ConfigServlet", 2, "handleVideoCompressConfig content" + paramConfig);
          }
          try
          {
            paramConfig = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(paramConfig.getBytes("utf-8")));
            Object localObject = paramConfig.getElementsByTagName("video_config");
            if ((localObject == null) || (((NodeList)localObject).getLength() <= 0)) {
              break;
            }
            localObject = new StringBuilder();
            if (paramConfig.getElementsByTagName("maxLength") != null)
            {
              ((StringBuilder)localObject).append(paramConfig.getElementsByTagName("maxLength").item(0).getFirstChild().getNodeValue());
              ((StringBuilder)localObject).append('|');
            }
            if (paramConfig.getElementsByTagName("maxFPS") != null)
            {
              ((StringBuilder)localObject).append(paramConfig.getElementsByTagName("maxFPS").item(0).getFirstChild().getNodeValue());
              ((StringBuilder)localObject).append('|');
            }
            if (paramConfig.getElementsByTagName("density") != null)
            {
              ((StringBuilder)localObject).append(paramConfig.getElementsByTagName("density").item(0).getFirstChild().getNodeValue());
              ((StringBuilder)localObject).append('|');
            }
            if (paramConfig.getElementsByTagName("minDensity") != null)
            {
              ((StringBuilder)localObject).append(paramConfig.getElementsByTagName("minDensity").item(0).getFirstChild().getNodeValue());
              ((StringBuilder)localObject).append('|');
            }
            if (paramConfig.getElementsByTagName("maxSize") != null) {
              ((StringBuilder)localObject).append(paramConfig.getElementsByTagName("maxSize").item(0).getFirstChild().getNodeValue());
            }
            SharedPreUtils.s(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString, ((StringBuilder)localObject).toString());
            return;
          }
          catch (Exception paramQQAppInterface)
          {
            QLog.e("SPLASH_ConfigServlet", 1, "handleVideoCompressConfig failed" + paramQQAppInterface);
            return;
          }
        }
      }
      catch (Exception paramConfig)
      {
        if (QLog.isColorLevel()) {
          QLog.d("SPLASH_ConfigServlet", 2, "handleVideoCompressConfig|uncompress failed");
        }
        paramConfig = null;
        continue;
      }
      paramConfig = paramConfig.content.get().toStringUtf8();
      continue;
      label590:
      if (QLog.isColorLevel()) {
        QLog.d("SPLASH_ConfigServlet", 2, "handleVideoCompressConfig content is null");
      }
      SharedPreUtils.u(paramQQAppInterface.getApp(), jdField_a_of_type_JavaLangString);
      return;
      label616:
      paramConfig = null;
    }
  }
  
  /* Error */
  void v(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    // Byte code:
    //   0: aload_1
    //   1: invokestatic 2259	com/tencent/mobileqq/stt/SttManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)I
    //   4: istore 4
    //   6: aload_2
    //   7: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   10: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   13: istore_3
    //   14: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   17: ifeq +40 -> 57
    //   20: ldc 90
    //   22: iconst_2
    //   23: new 92	java/lang/StringBuilder
    //   26: dup
    //   27: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   30: ldc_w 7295
    //   33: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36: iload 4
    //   38: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   41: ldc_w 6975
    //   44: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   47: iload_3
    //   48: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   51: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   54: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   57: iload 4
    //   59: iload_3
    //   60: if_icmpeq +157 -> 217
    //   63: aload_1
    //   64: bipush 16
    //   66: invokevirtual 264	com/tencent/mobileqq/app/QQAppInterface:getManager	(I)Lmqq/manager/Manager;
    //   69: checkcast 2258	com/tencent/mobileqq/stt/SttManager
    //   72: astore 5
    //   74: aload_2
    //   75: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   78: ifnull +216 -> 294
    //   81: aload_2
    //   82: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   85: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   88: ifle +206 -> 294
    //   91: aload_2
    //   92: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   95: iconst_0
    //   96: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   99: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   102: astore_2
    //   103: aload_2
    //   104: ifnull +108 -> 212
    //   107: aload_2
    //   108: getfield 912	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:compress	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   111: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   114: iconst_1
    //   115: if_icmpne +135 -> 250
    //   118: aload_2
    //   119: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   122: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   125: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   128: invokestatic 932	com/tencent/mobileqq/olympic/utils/OlympicUtil:a	([B)[B
    //   131: astore_2
    //   132: aload_2
    //   133: ifnull +179 -> 312
    //   136: new 139	java/lang/String
    //   139: dup
    //   140: aload_2
    //   141: ldc_w 934
    //   144: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   147: astore_2
    //   148: aload_2
    //   149: ifnull +63 -> 212
    //   152: new 141	org/json/JSONObject
    //   155: dup
    //   156: aload_2
    //   157: invokespecial 144	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   160: ldc_w 7297
    //   163: invokevirtual 154	org/json/JSONObject:getInt	(Ljava/lang/String;)I
    //   166: istore 4
    //   168: aload 5
    //   170: iload 4
    //   172: invokevirtual 7298	com/tencent/mobileqq/stt/SttManager:a	(I)V
    //   175: ldc 90
    //   177: iconst_1
    //   178: new 92	java/lang/StringBuilder
    //   181: dup
    //   182: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   185: ldc_w 7300
    //   188: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   191: aload_2
    //   192: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   195: ldc_w 7302
    //   198: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   201: iload 4
    //   203: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   206: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   209: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   212: aload_1
    //   213: iload_3
    //   214: invokestatic 7303	com/tencent/mobileqq/stt/SttManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;I)V
    //   217: return
    //   218: astore_2
    //   219: ldc 90
    //   221: iconst_1
    //   222: new 92	java/lang/StringBuilder
    //   225: dup
    //   226: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   229: ldc_w 6990
    //   232: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   235: aload_2
    //   236: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   239: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   242: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   245: aconst_null
    //   246: astore_2
    //   247: goto -99 -> 148
    //   250: aload_2
    //   251: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   254: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   257: invokevirtual 971	com/tencent/mobileqq/pb/ByteStringMicro:toStringUtf8	()Ljava/lang/String;
    //   260: astore_2
    //   261: goto -113 -> 148
    //   264: astore_2
    //   265: ldc 90
    //   267: iconst_1
    //   268: new 92	java/lang/StringBuilder
    //   271: dup
    //   272: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   275: ldc_w 7305
    //   278: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   281: aload_2
    //   282: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   285: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   288: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   291: goto -79 -> 212
    //   294: ldc 90
    //   296: iconst_1
    //   297: ldc_w 7307
    //   300: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   303: aload 5
    //   305: iconst_0
    //   306: invokevirtual 7298	com/tencent/mobileqq/stt/SttManager:a	(I)V
    //   309: goto -97 -> 212
    //   312: aconst_null
    //   313: astore_2
    //   314: goto -166 -> 148
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	317	0	this	ConfigServlet
    //   0	317	1	paramQQAppInterface	QQAppInterface
    //   0	317	2	paramConfig	ConfigurationService.Config
    //   13	201	3	i	int
    //   4	198	4	j	int
    //   72	232	5	localSttManager	SttManager
    // Exception table:
    //   from	to	target	type
    //   136	148	218	java/lang/Exception
    //   152	212	264	java/lang/Exception
  }
  
  /* Error */
  protected void w(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    // Byte code:
    //   0: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   3: ldc_w 2247
    //   6: iconst_0
    //   7: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   10: invokestatic 2245	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
    //   13: checkcast 183	java/lang/Integer
    //   16: invokevirtual 490	java/lang/Integer:intValue	()I
    //   19: istore_3
    //   20: aload_2
    //   21: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   24: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   27: istore 4
    //   29: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   32: ifeq +74 -> 106
    //   35: ldc_w 7309
    //   38: iconst_2
    //   39: new 92	java/lang/StringBuilder
    //   42: dup
    //   43: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   46: ldc_w 7311
    //   49: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   52: iload_3
    //   53: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   56: ldc_w 6975
    //   59: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   62: iload 4
    //   64: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   67: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   70: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   73: ldc_w 7309
    //   76: iconst_2
    //   77: new 92	java/lang/StringBuilder
    //   80: dup
    //   81: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   84: ldc_w 7313
    //   87: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   90: aload_2
    //   91: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   94: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   97: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   100: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   103: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   106: iload_3
    //   107: iload 4
    //   109: if_icmpeq +608 -> 717
    //   112: aload_2
    //   113: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   116: ifnull +601 -> 717
    //   119: aload_2
    //   120: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   123: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   126: ifle +591 -> 717
    //   129: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   132: ifeq +66 -> 198
    //   135: iconst_0
    //   136: istore_3
    //   137: iload_3
    //   138: aload_2
    //   139: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   142: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   145: if_icmpge +53 -> 198
    //   148: ldc_w 7309
    //   151: iconst_2
    //   152: new 92	java/lang/StringBuilder
    //   155: dup
    //   156: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   159: ldc_w 7315
    //   162: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   165: aload_2
    //   166: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   169: iload_3
    //   170: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   173: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   176: getfield 235	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:task_id	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   179: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   182: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   185: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   188: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   191: iload_3
    //   192: iconst_1
    //   193: iadd
    //   194: istore_3
    //   195: goto -58 -> 137
    //   198: aload_2
    //   199: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   202: iconst_0
    //   203: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   206: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   209: astore 7
    //   211: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   214: ifeq +37 -> 251
    //   217: ldc_w 7309
    //   220: iconst_2
    //   221: new 92	java/lang/StringBuilder
    //   224: dup
    //   225: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   228: ldc_w 7317
    //   231: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   234: aload 7
    //   236: getfield 235	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:task_id	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   239: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   242: invokevirtual 102	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   245: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   248: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   251: aload 7
    //   253: ifnull +464 -> 717
    //   256: aload 7
    //   258: getfield 912	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:compress	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   261: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   264: iconst_1
    //   265: if_icmpne +489 -> 754
    //   268: aload 7
    //   270: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   273: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   276: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   279: invokestatic 932	com/tencent/mobileqq/olympic/utils/OlympicUtil:a	([B)[B
    //   282: astore 7
    //   284: aload 7
    //   286: ifnull +528 -> 814
    //   289: new 139	java/lang/String
    //   292: dup
    //   293: aload 7
    //   295: ldc_w 934
    //   298: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   301: astore 7
    //   303: aload 7
    //   305: ifnull +412 -> 717
    //   308: invokestatic 88	com/tencent/qphone/base/util/QLog:isColorLevel	()Z
    //   311: ifeq +31 -> 342
    //   314: ldc_w 7309
    //   317: iconst_1
    //   318: new 92	java/lang/StringBuilder
    //   321: dup
    //   322: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   325: ldc_w 7319
    //   328: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   331: aload 7
    //   333: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   336: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   339: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   342: new 141	org/json/JSONObject
    //   345: dup
    //   346: aload 7
    //   348: invokespecial 144	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   351: astore 7
    //   353: aload 7
    //   355: ldc_w 7321
    //   358: invokevirtual 7052	org/json/JSONObject:optJSONArray	(Ljava/lang/String;)Lorg/json/JSONArray;
    //   361: astore 8
    //   363: aload 8
    //   365: invokevirtual 1029	org/json/JSONArray:length	()I
    //   368: ifle +18 -> 386
    //   371: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   374: ldc_w 7323
    //   377: aload 8
    //   379: invokevirtual 5793	org/json/JSONArray:toString	()Ljava/lang/String;
    //   382: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   385: pop
    //   386: aload 7
    //   388: ldc_w 7325
    //   391: invokevirtual 1096	org/json/JSONObject:optJSONObject	(Ljava/lang/String;)Lorg/json/JSONObject;
    //   394: astore 8
    //   396: aload 8
    //   398: ifnull +18 -> 416
    //   401: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   404: ldc_w 7327
    //   407: aload 8
    //   409: invokevirtual 7059	org/json/JSONObject:toString	()Ljava/lang/String;
    //   412: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   415: pop
    //   416: aload 7
    //   418: ldc_w 7329
    //   421: invokevirtual 737	org/json/JSONObject:optInt	(Ljava/lang/String;)I
    //   424: istore_3
    //   425: aload 8
    //   427: ifnull +17 -> 444
    //   430: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   433: ldc_w 7331
    //   436: iload_3
    //   437: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   440: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   443: pop
    //   444: aload 7
    //   446: ldc_w 7333
    //   449: invokevirtual 1096	org/json/JSONObject:optJSONObject	(Ljava/lang/String;)Lorg/json/JSONObject;
    //   452: astore 8
    //   454: aload 8
    //   456: ifnull +76 -> 532
    //   459: aload 8
    //   461: ldc_w 7335
    //   464: invokevirtual 737	org/json/JSONObject:optInt	(Ljava/lang/String;)I
    //   467: istore_3
    //   468: aload 8
    //   470: ldc_w 7337
    //   473: invokevirtual 737	org/json/JSONObject:optInt	(Ljava/lang/String;)I
    //   476: istore 4
    //   478: aload 8
    //   480: ldc_w 7339
    //   483: invokevirtual 737	org/json/JSONObject:optInt	(Ljava/lang/String;)I
    //   486: istore 5
    //   488: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   491: ldc_w 7341
    //   494: iload_3
    //   495: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   498: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   501: pop
    //   502: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   505: ldc_w 7343
    //   508: iload 4
    //   510: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   513: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   516: pop
    //   517: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   520: ldc_w 7345
    //   523: iload 5
    //   525: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   528: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   531: pop
    //   532: aload 7
    //   534: ldc_w 7347
    //   537: invokevirtual 7052	org/json/JSONObject:optJSONArray	(Ljava/lang/String;)Lorg/json/JSONArray;
    //   540: astore 8
    //   542: aload 8
    //   544: ifnull +226 -> 770
    //   547: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   550: ldc_w 7349
    //   553: aload 8
    //   555: invokevirtual 5793	org/json/JSONArray:toString	()Ljava/lang/String;
    //   558: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   561: pop
    //   562: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   565: ldc_w 2247
    //   568: aload_2
    //   569: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   572: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   575: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   578: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   581: pop
    //   582: aload 7
    //   584: ldc_w 7351
    //   587: iconst_0
    //   588: invokevirtual 942	org/json/JSONObject:optInt	(Ljava/lang/String;I)I
    //   591: istore_3
    //   592: aload 7
    //   594: ldc_w 7353
    //   597: iconst_m1
    //   598: invokevirtual 942	org/json/JSONObject:optInt	(Ljava/lang/String;I)I
    //   601: istore 4
    //   603: aload 7
    //   605: ldc_w 7355
    //   608: iconst_0
    //   609: invokevirtual 942	org/json/JSONObject:optInt	(Ljava/lang/String;I)I
    //   612: istore 5
    //   614: aload 7
    //   616: ldc_w 7357
    //   619: iconst_0
    //   620: invokevirtual 942	org/json/JSONObject:optInt	(Ljava/lang/String;I)I
    //   623: istore 6
    //   625: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   628: ldc_w 7351
    //   631: iload_3
    //   632: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   635: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   638: pop
    //   639: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   642: ldc_w 7353
    //   645: iload 4
    //   647: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   650: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   653: pop
    //   654: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   657: ldc_w 7355
    //   660: iload 5
    //   662: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   665: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   668: pop
    //   669: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   672: ldc_w 7357
    //   675: iload 6
    //   677: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   680: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   683: pop
    //   684: aload 7
    //   686: ldc_w 7359
    //   689: invokevirtual 737	org/json/JSONObject:optInt	(Ljava/lang/String;)I
    //   692: istore_3
    //   693: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   696: ldc_w 7359
    //   699: iload_3
    //   700: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   703: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   706: pop
    //   707: aload_1
    //   708: ldc_w 7361
    //   711: iconst_1
    //   712: iconst_1
    //   713: aconst_null
    //   714: invokevirtual 7365	com/tencent/mobileqq/app/QQAppInterface:notifyObservers	(Ljava/lang/Class;IZLandroid/os/Bundle;)V
    //   717: return
    //   718: astore 7
    //   720: ldc_w 7309
    //   723: iconst_1
    //   724: new 92	java/lang/StringBuilder
    //   727: dup
    //   728: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   731: ldc_w 7367
    //   734: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   737: aload 7
    //   739: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   742: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   745: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   748: aconst_null
    //   749: astore 7
    //   751: goto -448 -> 303
    //   754: aload 7
    //   756: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   759: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   762: invokevirtual 971	com/tencent/mobileqq/pb/ByteStringMicro:toStringUtf8	()Ljava/lang/String;
    //   765: astore 7
    //   767: goto -464 -> 303
    //   770: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   773: ldc_w 7349
    //   776: ldc 13
    //   778: invokestatic 2250	com/tencent/mobileqq/nearby/NearbySPUtil:a	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Z
    //   781: pop
    //   782: goto -220 -> 562
    //   785: astore_1
    //   786: ldc_w 7309
    //   789: iconst_1
    //   790: new 92	java/lang/StringBuilder
    //   793: dup
    //   794: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   797: ldc_w 7369
    //   800: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   803: aload_1
    //   804: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   807: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   810: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   813: return
    //   814: aconst_null
    //   815: astore 7
    //   817: goto -514 -> 303
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	820	0	this	ConfigServlet
    //   0	820	1	paramQQAppInterface	QQAppInterface
    //   0	820	2	paramConfig	ConfigurationService.Config
    //   19	681	3	i	int
    //   27	619	4	j	int
    //   486	175	5	k	int
    //   623	53	6	m	int
    //   209	476	7	localObject1	Object
    //   718	20	7	localException	Exception
    //   749	67	7	str	String
    //   361	193	8	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   289	303	718	java/lang/Exception
    //   342	386	785	java/lang/Exception
    //   386	396	785	java/lang/Exception
    //   401	416	785	java/lang/Exception
    //   416	425	785	java/lang/Exception
    //   430	444	785	java/lang/Exception
    //   444	454	785	java/lang/Exception
    //   459	532	785	java/lang/Exception
    //   532	542	785	java/lang/Exception
    //   547	562	785	java/lang/Exception
    //   562	717	785	java/lang/Exception
    //   770	782	785	java/lang/Exception
  }
  
  /* Error */
  void x(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    // Byte code:
    //   0: ldc_w 7371
    //   3: iconst_1
    //   4: ldc_w 7373
    //   7: iconst_0
    //   8: anewarray 179	java/lang/Object
    //   11: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   14: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   17: aload_2
    //   18: getfield 192	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:type	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   21: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   24: sipush 178
    //   27: if_icmpeq +4 -> 31
    //   30: return
    //   31: aload_1
    //   32: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   35: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   38: invokestatic 2262	com/tencent/mobileqq/utils/SharedPreUtils:aA	(Landroid/content/Context;Ljava/lang/String;)I
    //   41: istore_3
    //   42: aload_2
    //   43: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   46: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   49: istore 4
    //   51: iload_3
    //   52: iload 4
    //   54: if_icmpne +28 -> 82
    //   57: ldc_w 7371
    //   60: iconst_1
    //   61: ldc_w 7375
    //   64: iconst_1
    //   65: anewarray 179	java/lang/Object
    //   68: dup
    //   69: iconst_0
    //   70: iload_3
    //   71: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   74: aastore
    //   75: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   78: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   81: return
    //   82: aload_2
    //   83: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   86: ifnull +13 -> 99
    //   89: aload_2
    //   90: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   93: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   96: ifne +44 -> 140
    //   99: ldc_w 7371
    //   102: iconst_1
    //   103: ldc_w 7377
    //   106: iconst_0
    //   107: anewarray 179	java/lang/Object
    //   110: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   113: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   116: aload_1
    //   117: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   120: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   123: aconst_null
    //   124: invokestatic 7379	com/tencent/mobileqq/utils/SharedPreUtils:n	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
    //   127: aload_1
    //   128: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   131: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   134: iload 4
    //   136: invokestatic 7381	com/tencent/mobileqq/utils/SharedPreUtils:Q	(Landroid/content/Context;Ljava/lang/String;I)V
    //   139: return
    //   140: aload_2
    //   141: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   144: iconst_0
    //   145: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   148: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   151: astore_2
    //   152: aload_2
    //   153: ifnonnull +21 -> 174
    //   156: ldc_w 7371
    //   159: iconst_1
    //   160: ldc_w 7383
    //   163: iconst_0
    //   164: anewarray 179	java/lang/Object
    //   167: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   170: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   173: return
    //   174: aload_2
    //   175: getfield 912	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:compress	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   178: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   181: iconst_1
    //   182: if_icmpne +174 -> 356
    //   185: aload_2
    //   186: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   189: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   192: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   195: invokestatic 932	com/tencent/mobileqq/olympic/utils/OlympicUtil:a	([B)[B
    //   198: astore 5
    //   200: aload 5
    //   202: ifnull +196 -> 398
    //   205: new 139	java/lang/String
    //   208: dup
    //   209: aload 5
    //   211: ldc_w 934
    //   214: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   217: astore_2
    //   218: aload_2
    //   219: ifnull -189 -> 30
    //   222: new 141	org/json/JSONObject
    //   225: dup
    //   226: aload_2
    //   227: invokespecial 144	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   230: pop
    //   231: aload_1
    //   232: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   235: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   238: aload_2
    //   239: invokestatic 7379	com/tencent/mobileqq/utils/SharedPreUtils:n	(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V
    //   242: aload_1
    //   243: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   246: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   249: iload 4
    //   251: invokestatic 7381	com/tencent/mobileqq/utils/SharedPreUtils:Q	(Landroid/content/Context;Ljava/lang/String;I)V
    //   254: new 7385	com/tencent/mobileqq/activity/contacts/base/CardConfigManager
    //   257: dup
    //   258: aload_1
    //   259: invokespecial 7387	com/tencent/mobileqq/activity/contacts/base/CardConfigManager:<init>	(Lcom/tencent/mobileqq/app/QQAppInterface;)V
    //   262: invokevirtual 7390	com/tencent/mobileqq/activity/contacts/base/CardConfigManager:a	()Lcom/tencent/mobileqq/activity/contacts/base/CardConfigManager$CardConfigs;
    //   265: astore_2
    //   266: aload_2
    //   267: ifnull -237 -> 30
    //   270: aload_2
    //   271: getfield 7393	com/tencent/mobileqq/activity/contacts/base/CardConfigManager$CardConfigs:jdField_a_of_type_Boolean	Z
    //   274: ifeq -244 -> 30
    //   277: aload_1
    //   278: iconst_2
    //   279: invokevirtual 707	com/tencent/mobileqq/app/QQAppInterface:a	(I)Lcom/tencent/mobileqq/app/BusinessHandler;
    //   282: checkcast 7395	com/tencent/mobileqq/app/CardHandler
    //   285: iconst_1
    //   286: newarray short
    //   288: dup
    //   289: iconst_0
    //   290: sipush -23447
    //   293: sastore
    //   294: invokevirtual 7398	com/tencent/mobileqq/app/CardHandler:a	([S)V
    //   297: return
    //   298: astore_1
    //   299: ldc_w 7371
    //   302: iconst_1
    //   303: ldc_w 7400
    //   306: iconst_1
    //   307: anewarray 179	java/lang/Object
    //   310: dup
    //   311: iconst_0
    //   312: aload_1
    //   313: invokevirtual 612	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   316: aastore
    //   317: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   320: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   323: return
    //   324: astore_2
    //   325: ldc_w 7371
    //   328: iconst_1
    //   329: ldc_w 7402
    //   332: iconst_1
    //   333: anewarray 179	java/lang/Object
    //   336: dup
    //   337: iconst_0
    //   338: aload 5
    //   340: arraylength
    //   341: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   344: aastore
    //   345: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   348: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   351: aconst_null
    //   352: astore_2
    //   353: goto -135 -> 218
    //   356: aload_2
    //   357: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   360: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   363: invokevirtual 971	com/tencent/mobileqq/pb/ByteStringMicro:toStringUtf8	()Ljava/lang/String;
    //   366: astore_2
    //   367: goto -149 -> 218
    //   370: astore_2
    //   371: ldc_w 7371
    //   374: iconst_1
    //   375: ldc_w 7404
    //   378: iconst_1
    //   379: anewarray 179	java/lang/Object
    //   382: dup
    //   383: iconst_0
    //   384: aload_2
    //   385: invokevirtual 612	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   388: aastore
    //   389: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   392: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   395: goto -141 -> 254
    //   398: aconst_null
    //   399: astore_2
    //   400: goto -182 -> 218
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	403	0	this	ConfigServlet
    //   0	403	1	paramQQAppInterface	QQAppInterface
    //   0	403	2	paramConfig	ConfigurationService.Config
    //   41	30	3	i	int
    //   49	201	4	j	int
    //   198	141	5	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   254	266	298	java/lang/Exception
    //   270	297	298	java/lang/Exception
    //   205	218	324	java/lang/Exception
    //   222	254	370	java/lang/Exception
  }
  
  /* Error */
  void y(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 7
    //   3: aconst_null
    //   4: astore 8
    //   6: iconst_0
    //   7: istore 5
    //   9: ldc_w 7406
    //   12: iconst_1
    //   13: ldc_w 7408
    //   16: iconst_0
    //   17: anewarray 179	java/lang/Object
    //   20: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   23: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   26: aload_1
    //   27: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   30: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   33: invokestatic 2272	com/tencent/mobileqq/activity/aio/photo/PhotoListConfigManager:a	(Landroid/content/Context;Ljava/lang/String;)I
    //   36: istore_3
    //   37: aload_2
    //   38: getfield 64	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:version	Lcom/tencent/mobileqq/pb/PBInt32Field;
    //   41: invokevirtual 70	com/tencent/mobileqq/pb/PBInt32Field:get	()I
    //   44: istore 6
    //   46: iload_3
    //   47: iload 6
    //   49: if_icmpeq +396 -> 445
    //   52: aload_2
    //   53: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   56: ifnull +365 -> 421
    //   59: aload_2
    //   60: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   63: invokevirtual 217	com/tencent/mobileqq/pb/PBRepeatMessageField:size	()I
    //   66: ifle +355 -> 421
    //   69: aload_2
    //   70: getfield 198	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Config:msg_content_list	Lcom/tencent/mobileqq/pb/PBRepeatMessageField;
    //   73: iconst_0
    //   74: invokevirtual 229	com/tencent/mobileqq/pb/PBRepeatMessageField:get	(I)Lcom/tencent/mobileqq/pb/MessageMicro;
    //   77: checkcast 231	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content
    //   80: astore_2
    //   81: aload_2
    //   82: ifnull +326 -> 408
    //   85: aload_2
    //   86: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   89: invokevirtual 1385	com/tencent/mobileqq/pb/PBBytesField:has	()Z
    //   92: ifeq +316 -> 408
    //   95: aload_2
    //   96: getfield 912	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:compress	Lcom/tencent/mobileqq/pb/PBUInt32Field;
    //   99: invokevirtual 238	com/tencent/mobileqq/pb/PBUInt32Field:get	()I
    //   102: iconst_1
    //   103: if_icmpne +217 -> 320
    //   106: aload_2
    //   107: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   110: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   113: invokevirtual 927	com/tencent/mobileqq/pb/ByteStringMicro:toByteArray	()[B
    //   116: invokestatic 932	com/tencent/mobileqq/olympic/utils/OlympicUtil:a	([B)[B
    //   119: astore_2
    //   120: aload_2
    //   121: ifnull +393 -> 514
    //   124: new 139	java/lang/String
    //   127: dup
    //   128: aload_2
    //   129: ldc_w 934
    //   132: invokespecial 937	java/lang/String:<init>	([BLjava/lang/String;)V
    //   135: astore_2
    //   136: aload_2
    //   137: ifnull +215 -> 352
    //   140: new 141	org/json/JSONObject
    //   143: dup
    //   144: aload_2
    //   145: invokespecial 144	org/json/JSONObject:<init>	(Ljava/lang/String;)V
    //   148: astore 9
    //   150: ldc_w 7406
    //   153: iconst_1
    //   154: new 92	java/lang/StringBuilder
    //   157: dup
    //   158: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   161: ldc_w 7410
    //   164: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   167: aload_2
    //   168: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   171: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   174: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   177: aload 9
    //   179: ldc_w 7412
    //   182: invokevirtual 154	org/json/JSONObject:getInt	(Ljava/lang/String;)I
    //   185: istore_3
    //   186: aload 9
    //   188: ldc_w 7414
    //   191: invokevirtual 154	org/json/JSONObject:getInt	(Ljava/lang/String;)I
    //   194: istore 4
    //   196: aload 9
    //   198: ldc_w 7416
    //   201: invokevirtual 4396	org/json/JSONObject:getJSONArray	(Ljava/lang/String;)Lorg/json/JSONArray;
    //   204: astore 9
    //   206: aload 8
    //   208: astore_2
    //   209: aload 9
    //   211: ifnull +123 -> 334
    //   214: aload 8
    //   216: astore_2
    //   217: aload 9
    //   219: invokevirtual 1029	org/json/JSONArray:length	()I
    //   222: ifle +112 -> 334
    //   225: new 7418	java/util/HashSet
    //   228: dup
    //   229: invokespecial 7419	java/util/HashSet:<init>	()V
    //   232: astore_2
    //   233: iload 5
    //   235: aload 9
    //   237: invokevirtual 1029	org/json/JSONArray:length	()I
    //   240: if_icmpge +94 -> 334
    //   243: aload 9
    //   245: iload 5
    //   247: invokevirtual 7420	org/json/JSONArray:get	(I)Ljava/lang/Object;
    //   250: checkcast 141	org/json/JSONObject
    //   253: ldc_w 7422
    //   256: invokevirtual 541	org/json/JSONObject:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   259: astore 7
    //   261: aload 7
    //   263: invokestatic 419	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   266: ifne +12 -> 278
    //   269: aload_2
    //   270: aload 7
    //   272: invokeinterface 7423 2 0
    //   277: pop
    //   278: iload 5
    //   280: iconst_1
    //   281: iadd
    //   282: istore 5
    //   284: goto -51 -> 233
    //   287: astore_2
    //   288: ldc_w 7406
    //   291: iconst_1
    //   292: new 92	java/lang/StringBuilder
    //   295: dup
    //   296: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   299: ldc_w 7425
    //   302: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   305: aload_2
    //   306: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   309: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   312: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   315: aconst_null
    //   316: astore_2
    //   317: goto -181 -> 136
    //   320: aload_2
    //   321: getfield 916	com/tencent/mobileqq/config/struct/splashproto/ConfigurationService$Content:content	Lcom/tencent/mobileqq/pb/PBBytesField;
    //   324: invokevirtual 921	com/tencent/mobileqq/pb/PBBytesField:get	()Lcom/tencent/mobileqq/pb/ByteStringMicro;
    //   327: invokevirtual 971	com/tencent/mobileqq/pb/ByteStringMicro:toStringUtf8	()Ljava/lang/String;
    //   330: astore_2
    //   331: goto -195 -> 136
    //   334: iload_3
    //   335: istore 5
    //   337: iload 4
    //   339: istore_3
    //   340: aload_1
    //   341: invokestatic 7428	com/tencent/mobileqq/activity/aio/photo/PhotoListConfigManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)Lcom/tencent/mobileqq/activity/aio/photo/PhotoListConfigManager;
    //   344: aload_1
    //   345: iload 5
    //   347: iload_3
    //   348: aload_2
    //   349: invokevirtual 7431	com/tencent/mobileqq/activity/aio/photo/PhotoListConfigManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;IILjava/util/Set;)V
    //   352: aload_1
    //   353: invokevirtual 257	com/tencent/mobileqq/app/QQAppInterface:getApp	()Lcom/tencent/qphone/base/util/BaseApplication;
    //   356: getstatic 15	com/tencent/mobileqq/config/splashlogo/ConfigServlet:jdField_a_of_type_JavaLangString	Ljava/lang/String;
    //   359: iload 6
    //   361: invokestatic 7432	com/tencent/mobileqq/activity/aio/photo/PhotoListConfigManager:a	(Landroid/content/Context;Ljava/lang/String;I)V
    //   364: return
    //   365: astore_2
    //   366: iconst_0
    //   367: istore 4
    //   369: iconst_0
    //   370: istore_3
    //   371: ldc_w 7406
    //   374: iconst_1
    //   375: new 92	java/lang/StringBuilder
    //   378: dup
    //   379: invokespecial 93	java/lang/StringBuilder:<init>	()V
    //   382: ldc_w 7305
    //   385: invokevirtual 99	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   388: aload_2
    //   389: invokevirtual 224	java/lang/StringBuilder:append	(Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   392: invokevirtual 108	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   395: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   398: aload 7
    //   400: astore_2
    //   401: iload 4
    //   403: istore 5
    //   405: goto -65 -> 340
    //   408: ldc_w 7406
    //   411: iconst_1
    //   412: ldc_w 7434
    //   415: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   418: goto -66 -> 352
    //   421: ldc_w 7406
    //   424: iconst_1
    //   425: ldc_w 7436
    //   428: invokestatic 112	com/tencent/qphone/base/util/QLog:i	(Ljava/lang/String;ILjava/lang/String;)V
    //   431: aload_1
    //   432: invokestatic 7428	com/tencent/mobileqq/activity/aio/photo/PhotoListConfigManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;)Lcom/tencent/mobileqq/activity/aio/photo/PhotoListConfigManager;
    //   435: aload_1
    //   436: iconst_0
    //   437: iconst_0
    //   438: aconst_null
    //   439: invokevirtual 7431	com/tencent/mobileqq/activity/aio/photo/PhotoListConfigManager:a	(Lcom/tencent/mobileqq/app/QQAppInterface;IILjava/util/Set;)V
    //   442: goto -90 -> 352
    //   445: ldc_w 7406
    //   448: iconst_1
    //   449: ldc_w 7438
    //   452: iconst_1
    //   453: anewarray 179	java/lang/Object
    //   456: dup
    //   457: iconst_0
    //   458: iload_3
    //   459: invokestatic 187	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   462: aastore
    //   463: invokestatic 405	java/lang/String:format	(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    //   466: invokestatic 615	com/tencent/qphone/base/util/QLog:e	(Ljava/lang/String;ILjava/lang/String;)V
    //   469: return
    //   470: astore_2
    //   471: iload_3
    //   472: istore 4
    //   474: iconst_0
    //   475: istore_3
    //   476: goto -105 -> 371
    //   479: astore_2
    //   480: iload_3
    //   481: istore 5
    //   483: iload 4
    //   485: istore_3
    //   486: iload 5
    //   488: istore 4
    //   490: goto -119 -> 371
    //   493: astore 8
    //   495: iload_3
    //   496: istore 5
    //   498: iload 4
    //   500: istore_3
    //   501: aload_2
    //   502: astore 7
    //   504: iload 5
    //   506: istore 4
    //   508: aload 8
    //   510: astore_2
    //   511: goto -140 -> 371
    //   514: aconst_null
    //   515: astore_2
    //   516: goto -380 -> 136
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	519	0	this	ConfigServlet
    //   0	519	1	paramQQAppInterface	QQAppInterface
    //   0	519	2	paramConfig	ConfigurationService.Config
    //   36	465	3	i	int
    //   194	313	4	j	int
    //   7	498	5	k	int
    //   44	316	6	m	int
    //   1	502	7	localObject1	Object
    //   4	211	8	localObject2	Object
    //   493	16	8	localException	Exception
    //   148	96	9	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   124	136	287	java/lang/Exception
    //   140	186	365	java/lang/Exception
    //   186	196	470	java/lang/Exception
    //   196	206	479	java/lang/Exception
    //   217	233	479	java/lang/Exception
    //   233	278	493	java/lang/Exception
  }
  
  void z(QQAppInterface paramQQAppInterface, ConfigurationService.Config paramConfig)
  {
    ScribbleResMgr localScribbleResMgr = ScribbleResMgr.a(paramQQAppInterface);
    int k = paramConfig.version.get();
    int j = SharedPreUtils.A(((QQAppInterface)getAppRuntime()).getApp());
    if (paramConfig.msg_content_list != null) {}
    for (int i = paramConfig.msg_content_list.size();; i = -1)
    {
      if (QLog.isColorLevel()) {
        QLog.d("handleScribbleConfigSPLASH_ConfigServlet", 2, String.format("scribble回包, serverVersion[%s], localVersion[%s], size[%s]", new Object[] { Integer.valueOf(k), Integer.valueOf(j), Integer.valueOf(i) }));
      }
      if (k != j) {
        break;
      }
      return;
    }
    if (i > 0)
    {
      boolean bool1 = false;
      boolean bool2 = false;
      j = 0;
      if (j < i)
      {
        Object localObject1 = (ConfigurationService.Content)paramConfig.msg_content_list.get(j);
        int m;
        byte[] arrayOfByte;
        label198:
        boolean bool3;
        if (localObject1 != null)
        {
          m = ((ConfigurationService.Content)localObject1).task_id.get();
          if (((ConfigurationService.Content)localObject1).compress.get() == 1)
          {
            arrayOfByte = OlympicUtil.a(((ConfigurationService.Content)localObject1).content.get().toByteArray());
            if (arrayOfByte == null)
            {
              QLog.d("handleScribbleConfigSPLASH_ConfigServlet", 2, "解压错误");
              localObject1 = null;
              if (TextUtils.isEmpty((CharSequence)localObject1)) {
                break label422;
              }
              if ((m != 2599) && (m != 3802)) {
                break label357;
              }
              bool3 = localScribbleResMgr.a((String)localObject1, paramQQAppInterface, 2599);
              bool2 = bool1;
              bool1 = bool3;
            }
          }
        }
        label422:
        for (;;)
        {
          for (;;)
          {
            j += 1;
            bool3 = bool2;
            bool2 = bool1;
            bool1 = bool3;
            break;
            try
            {
              localObject1 = new String(arrayOfByte, "UTF-8");
            }
            catch (UnsupportedEncodingException localUnsupportedEncodingException)
            {
              if (QLog.isColorLevel()) {
                localUnsupportedEncodingException.printStackTrace();
              }
              Object localObject2 = null;
            }
            catch (OutOfMemoryError localOutOfMemoryError)
            {
              for (;;)
              {
                if (QLog.isColorLevel()) {
                  localOutOfMemoryError.printStackTrace();
                }
                System.gc();
                try
                {
                  String str1 = new String(arrayOfByte, "UTF-8");
                }
                catch (Throwable localThrowable)
                {
                  str2 = null;
                }
              }
            }
          }
          break label198;
          String str2 = str2.content.get().toStringUtf8();
          break label198;
          label357:
          if ((m == 2598) || (m == 3768))
          {
            bool3 = localScribbleResMgr.a(str2, paramQQAppInterface, 2598);
            bool1 = bool2;
            bool2 = bool3;
          }
          else
          {
            if ((m == 2957) || (m == 3876)) {
              localScribbleResMgr.a(str2, paramQQAppInterface);
            }
            bool3 = bool1;
            bool1 = bool2;
            bool2 = bool3;
          }
        }
      }
      if ((bool2) && (bool1)) {
        SharedPreUtils.t(paramQQAppInterface.getApp().getBaseContext(), k);
      }
    }
    for (;;)
    {
      localScribbleResMgr.a();
      return;
      if (QLog.isColorLevel()) {
        QLog.d("handleScribbleConfigSPLASH_ConfigServlet", 2, "回包为空");
      }
    }
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.mobileqq\classes.jar
 * Qualified Name:     com.tencent.mobileqq.config.splashlogo.ConfigServlet
 * JD-Core Version:    0.7.0.1
 */