package com.tencent.mm.ui.tools;

import android.app.Dialog;
import android.app.TimePickerDialog;
import android.app.TimePickerDialog.OnTimeSetListener;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.text.Editable;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import com.tencent.mm.R.h;
import com.tencent.mm.R.i;
import com.tencent.mm.R.l;
import com.tencent.mm.hardcoder.WXHardCoderJNI;
import com.tencent.mm.plugin.hardcoder.a;
import com.tencent.mm.pluginsdk.f.h;
import com.tencent.mm.sdk.platformtools.ae;
import com.tencent.mm.sdk.platformtools.bk;
import com.tencent.mm.sdk.platformtools.x;
import com.tencent.mm.sdk.platformtools.y;
import com.tencent.mm.ui.MMActivity;
import com.tencent.mm.ui.s;
import java.sql.Time;
import java.text.DateFormat;

public class HardCoderSettingUI
  extends MMActivity
{
  private boolean nTM = false;
  private final TimePickerDialog.OnTimeSetListener nTN = new HardCoderSettingUI.5(this);
  private CheckBox vZP;
  private EditText vZQ;
  private CheckBox vZR;
  private CheckBox vZS;
  private CheckBox vZT;
  private TextView vZU;
  private TextView vZV;
  private CheckBox vZW;
  private EditText vZX;
  private EditText vZY;
  private EditText vZZ;
  private EditText waA;
  private EditText waB;
  private Spinner waC;
  private Spinner waD;
  private CheckBox waE;
  private CheckBox waF;
  private EditText waG;
  private EditText waH;
  private EditText waI;
  private Spinner waJ;
  private Spinner waK;
  private CheckBox waL;
  private CheckBox waM;
  private EditText waN;
  private EditText waO;
  private EditText waP;
  private Spinner waQ;
  private Spinner waR;
  private CheckBox waS;
  private EditText waT;
  private CheckBox waU;
  private EditText waV;
  private EditText waW;
  private EditText waX;
  private EditText waY;
  private EditText waZ;
  private Spinner waa;
  private Spinner wab;
  private CheckBox wac;
  private CheckBox wad;
  private EditText wae;
  private EditText waf;
  private EditText wag;
  private Spinner wah;
  private Spinner wai;
  private CheckBox waj;
  private CheckBox wak;
  private EditText wal;
  private EditText wam;
  private EditText wan;
  private Spinner wao;
  private Spinner wap;
  private CheckBox waq;
  private CheckBox war;
  private EditText was;
  private EditText wat;
  private EditText wau;
  private Spinner wav;
  private Spinner waw;
  private CheckBox wax;
  private CheckBox way;
  private EditText waz;
  private EditText wbA;
  private EditText wbB;
  private EditText wbC;
  private Spinner wbD;
  private Spinner wbE;
  private CheckBox wbF;
  private CheckBox wbG;
  private EditText wbH;
  private EditText wbI;
  private EditText wbJ;
  private Spinner wbK;
  private Spinner wbL;
  private CheckBox wbM;
  private CheckBox wbN;
  private EditText wbO;
  private EditText wbP;
  private EditText wbQ;
  private Spinner wbR;
  private Spinner wbS;
  private CheckBox wbT;
  private CheckBox wbU;
  private EditText wbV;
  private EditText wbW;
  private EditText wbX;
  private Spinner wbY;
  private Spinner wbZ;
  private EditText wba;
  private Spinner wbb;
  private Spinner wbc;
  private CheckBox wbd;
  private CheckBox wbe;
  private EditText wbf;
  private EditText wbg;
  private EditText wbh;
  private Spinner wbi;
  private Spinner wbj;
  private CheckBox wbk;
  private CheckBox wbl;
  private EditText wbm;
  private EditText wbn;
  private EditText wbo;
  private Spinner wbp;
  private Spinner wbq;
  private CheckBox wbr;
  private CheckBox wbs;
  private EditText wbt;
  private EditText wbu;
  private EditText wbv;
  private Spinner wbw;
  private Spinner wbx;
  private CheckBox wby;
  private CheckBox wbz;
  private CheckBox wca;
  private CheckBox wcb;
  private EditText wcc;
  private EditText wcd;
  private EditText wce;
  private Spinner wcf;
  private Spinner wcg;
  private CheckBox wch;
  private CheckBox wci;
  private EditText wcj;
  private EditText wck;
  private EditText wcl;
  private Spinner wcm;
  private Spinner wcn;
  private CheckBox wco;
  
  private static void a(SharedPreferences.Editor paramEditor)
  {
    paramEditor.putBoolean("KEY_HC_ENABLE", WXHardCoderJNI.getEnable());
    paramEditor.putBoolean("KEY_HC_DEBUG", WXHardCoderJNI.getDebug());
    paramEditor.putInt("KEY_HC_RETRY_INTERVAL", WXHardCoderJNI.hcRetryInterval);
    paramEditor.putBoolean("KEY_HC_SWITCH_ENABLE", WXHardCoderJNI.hcSwitchEnable);
    paramEditor.putBoolean("KEY_HC_TIME_LIMIT", WXHardCoderJNI.hcTimeLimit);
    paramEditor.putInt("KEY_HC_BEGIN_TIME_HOUR", WXHardCoderJNI.hcBeginTimeHour);
    paramEditor.putInt("KEY_HC_BEGIN_TIME_MIN", WXHardCoderJNI.hcBeginTimeMin);
    paramEditor.putInt("KEY_HC_END_TIME_HOUR", WXHardCoderJNI.hcEndTimeHour);
    paramEditor.putInt("KEY_HC_END_TIME_MIN", WXHardCoderJNI.hcEndTimeMin);
    paramEditor.putBoolean("KEY_HC_BOOT_ENABLE", WXHardCoderJNI.hcBootEnable);
    paramEditor.putInt("KEY_HC_BOOT_DELEY", WXHardCoderJNI.hcBootDelay);
    paramEditor.putInt("KEY_HC_BOOT_CPU", WXHardCoderJNI.hcBootCPU);
    paramEditor.putInt("KEY_HC_BOOT_IO", WXHardCoderJNI.hcBootIO);
    paramEditor.putBoolean("KEY_HC_BOOT_THR", WXHardCoderJNI.hcBootThr);
    paramEditor.putInt("KEY_HC_BOOT_TIMEOUT", WXHardCoderJNI.hcBootTimeout);
    paramEditor.putLong("KEY_HC_BOOT_ACTION", WXHardCoderJNI.hcBootAction);
    paramEditor.putBoolean("KEY_HC_ENTER_CHATTING_ENABLE", WXHardCoderJNI.hcEnterChattingEnable);
    paramEditor.putInt("KEY_HC_ENTER_CHATTING_DELEY", WXHardCoderJNI.hcEnterChattingDelay);
    paramEditor.putInt("KEY_HC_ENTER_CHATTING_CPU", WXHardCoderJNI.hcEnterChattingCPU);
    paramEditor.putInt("KEY_HC_ENTER_CHATTING_IO", WXHardCoderJNI.hcEnterChattingIO);
    paramEditor.putBoolean("KEY_HC_ENTER_CHATTING_THR", WXHardCoderJNI.hcEnterChattingThr);
    paramEditor.putInt("KEY_HC_ENTER_CHATTING_TIMEOUT", WXHardCoderJNI.hcEnterChattingTimeout);
    paramEditor.putLong("KEY_HC_ENTER_CHATTING_ACTION", WXHardCoderJNI.hcEnterChattingAction);
    paramEditor.putBoolean("KEY_HC_QUIT_CHATTING_ENABLE", WXHardCoderJNI.hcQuitChattingEnable);
    paramEditor.putInt("KEY_HC_QUIT_CHATTING_DELEY", WXHardCoderJNI.hcQuitChattingDelay);
    paramEditor.putInt("KEY_HC_QUIT_CHATTING_CPU", WXHardCoderJNI.hcQuitChattingCPU);
    paramEditor.putInt("KEY_HC_QUIT_CHATTING_IO", WXHardCoderJNI.hcQuitChattingIO);
    paramEditor.putBoolean("KEY_HC_QUIT_CHATTING_THR", WXHardCoderJNI.hcQuitChattingThr);
    paramEditor.putInt("KEY_HC_QUIT_CHATTING_TIMEOUT", WXHardCoderJNI.hcQuitChattingTimeout);
    paramEditor.putLong("KEY_HC_QUIT_CHATTING_ACTION", WXHardCoderJNI.hcQuitChattingAction);
    paramEditor.putBoolean("KEY_HC_SEND_MSG_ENABLE", WXHardCoderJNI.hcSendMsgEnable);
    paramEditor.putInt("KEY_HC_SEND_MSG_DELEY", WXHardCoderJNI.hcSendMsgDelay);
    paramEditor.putInt("KEY_HC_SEND_MSG_CPU", WXHardCoderJNI.hcSendMsgCPU);
    paramEditor.putInt("KEY_HC_SEND_MSG_IO", WXHardCoderJNI.hcSendMsgIO);
    paramEditor.putBoolean("KEY_HC_SEND_MSG_THR", WXHardCoderJNI.hcSendMsgThr);
    paramEditor.putInt("KEY_HC_SEND_MSG_TIMEOUT", WXHardCoderJNI.hcSendMsgTimeout);
    paramEditor.putLong("KEY_HC_SEND_MSG_ACTION", WXHardCoderJNI.hcSendMsgAction);
    paramEditor.putBoolean("KEY_HC_SEND_PIC_MSG_ENABLE", WXHardCoderJNI.hcSendPicMsgEnable);
    paramEditor.putInt("KEY_HC_SEND_PIC_MSG_DELEY", WXHardCoderJNI.hcSendPicMsgDelay);
    paramEditor.putInt("KEY_HC_SEND_PIC_MSG_CPU", WXHardCoderJNI.hcSendPicMsgCPU);
    paramEditor.putInt("KEY_HC_SEND_PIC_MSG_IO", WXHardCoderJNI.hcSendPicMsgIO);
    paramEditor.putBoolean("KEY_HC_SEND_PIC_MSG_THR", WXHardCoderJNI.hcSendPicMsgThr);
    paramEditor.putInt("KEY_HC_SEND_PIC_MSG_TIMEOUT", WXHardCoderJNI.hcSendPicMsgTimeout);
    paramEditor.putLong("KEY_HC_SEND_PIC_MSG_ACTION", WXHardCoderJNI.hcSendPicMsgAction);
    paramEditor.putBoolean("KEY_HC_RECEIVE_MSG_ENABLE", WXHardCoderJNI.hcReceiveMsgEnable);
    paramEditor.putInt("KEY_HC_RECEIVE_MSG_DELEY", WXHardCoderJNI.hcReceiveMsgDelay);
    paramEditor.putInt("KEY_HC_RECEIVE_MSG_CPU", WXHardCoderJNI.hcReceiveMsgCPU);
    paramEditor.putInt("KEY_HC_RECEIVE_MSG_IO", WXHardCoderJNI.hcReceiveMsgIO);
    paramEditor.putBoolean("KEY_HC_RECEIVE_MSG_THR", WXHardCoderJNI.hcReceiveMsgThr);
    paramEditor.putInt("KEY_HC_RECEIVE_MSG_TIMEOUT", WXHardCoderJNI.hcReceiveMsgTimeout);
    paramEditor.putLong("KEY_HC_RECEIVE_MSG_ACTION", WXHardCoderJNI.hcReceiveMsgAction);
    paramEditor.putBoolean("KEY_HC_UPDATE_CHATROOM_ENABLE", WXHardCoderJNI.hcUpdateChatroomEnable);
    paramEditor.putInt("KEY_HC_UPDATE_CHATROOM_DELEY", WXHardCoderJNI.hcUpdateChatroomDelay);
    paramEditor.putInt("KEY_HC_UPDATE_CHATROOM_CPU", WXHardCoderJNI.hcUpdateChatroomCPU);
    paramEditor.putInt("KEY_HC_UPDATE_CHATROOM_IO", WXHardCoderJNI.hcUpdateChatroomIO);
    paramEditor.putBoolean("KEY_HC_UPDATE_CHATROOM_THR", WXHardCoderJNI.hcUpdateChatroomThr);
    paramEditor.putInt("KEY_HC_UPDATE_CHATROOM_TIMEOUT", WXHardCoderJNI.hcUpdateChatroomTimeout);
    paramEditor.putLong("KEY_HC_UPDATE_CHATROOM_ACTION", WXHardCoderJNI.hcUpdateChatroomAction);
    paramEditor.putLong("KEY_HC_UPDATE_CHATROOM_MEMBER_COUNT", WXHardCoderJNI.hcUpdateChatroomMemberCount);
    paramEditor.putBoolean("KEY_HC_DB_ENABLE", WXHardCoderJNI.hcDBEnable);
    paramEditor.putInt("KEY_HC_DB_DELEY_QUERY", WXHardCoderJNI.hcDBDelayQuery);
    paramEditor.putInt("KEY_HC_DB_DELEY_WRITE", WXHardCoderJNI.hcDBDelayWrite);
    paramEditor.putInt("KEY_HC_DB_CPU", WXHardCoderJNI.hcDBCPU);
    paramEditor.putInt("KEY_HC_DB_IO", WXHardCoderJNI.hcDBIO);
    paramEditor.putBoolean("KEY_HC_DB_THR", WXHardCoderJNI.hcDBThr);
    paramEditor.putInt("KEY_HC_DB_TIMEOUT", WXHardCoderJNI.hcDBTimeout);
    paramEditor.putInt("KEY_HC_DB_TIMEOUT", WXHardCoderJNI.hcDBTimeoutBusy);
    paramEditor.putLong("KEY_HC_DB_ACTION_QUERY", WXHardCoderJNI.hcDBActionQuery);
    paramEditor.putLong("KEY_HC_DB_ACTION_WRITE", WXHardCoderJNI.hcDBActionWrite);
    paramEditor.putBoolean("KEY_HC_ENCODE_VIDEO_ENABLE", WXHardCoderJNI.hcEncodeVideoEnable);
    paramEditor.putInt("KEY_HC_ENCODE_VIDEO_DELEY", WXHardCoderJNI.hcEncodeVideoDelay);
    paramEditor.putInt("KEY_HC_ENCODE_VIDEO_CPU", WXHardCoderJNI.hcEncodeVideoCPU);
    paramEditor.putInt("KEY_HC_ENCODE_VIDEO_IO", WXHardCoderJNI.hcEncodeVideoIO);
    paramEditor.putBoolean("KEY_HC_ENCODE_VIDEO_THR", WXHardCoderJNI.hcEncodeVideoThr);
    paramEditor.putInt("KEY_HC_ENCODE_VIDEO_TIMEOUT", WXHardCoderJNI.hcEncodeVideoTimeout);
    paramEditor.putLong("KEY_HC_ENCODE_VIDEO_ACTION", WXHardCoderJNI.hcEncodeVideoAction);
    paramEditor.putBoolean("KEY_HC_DECODE_PIC_ENABLE", WXHardCoderJNI.hcDecodePicEnable);
    paramEditor.putInt("KEY_HC_DECODE_PIC_DELEY", WXHardCoderJNI.hcDecodePicDelay);
    paramEditor.putInt("KEY_HC_DECODE_PIC_CPU", WXHardCoderJNI.hcDecodePicCPU);
    paramEditor.putInt("KEY_HC_DECODE_PIC_IO", WXHardCoderJNI.hcDecodePicIO);
    paramEditor.putBoolean("KEY_HC_DECODE_PIC_THR", WXHardCoderJNI.hcDecodePicThr);
    paramEditor.putInt("KEY_HC_DECODE_PIC_TIMEOUT", WXHardCoderJNI.hcDecodePicTimeout);
    paramEditor.putLong("KEY_HC_DECODE_PIC_ACTION", WXHardCoderJNI.hcDecodePicAction);
    paramEditor.putBoolean("KEY_HC_GIF_ENABLE", WXHardCoderJNI.hcGifEnable);
    paramEditor.putInt("KEY_HC_GIF_DELEY", WXHardCoderJNI.hcGifDelay);
    paramEditor.putInt("KEY_HC_GIF_CPU", WXHardCoderJNI.hcGifCPU);
    paramEditor.putInt("KEY_HC_GIF_IO", WXHardCoderJNI.hcGifIO);
    paramEditor.putBoolean("KEY_HC_GIF_THR", WXHardCoderJNI.hcGifThr);
    paramEditor.putInt("KEY_HC_GIF_TIMEOUT", WXHardCoderJNI.hcGifTimeout);
    paramEditor.putLong("KEY_HC_GIF_ACTION", WXHardCoderJNI.hcGifAction);
    paramEditor.putBoolean("KEY_HC_GIF_FRAME_ENABLE", WXHardCoderJNI.hcGifFrameEnable);
    paramEditor.putInt("KEY_HC_GIF_FRAME_DELEY", WXHardCoderJNI.hcGifFrameDelay);
    paramEditor.putInt("KEY_HC_GIF_FRAME_CPU", WXHardCoderJNI.hcGifFrameCPU);
    paramEditor.putInt("KEY_HC_GIF_FRAME_IO", WXHardCoderJNI.hcGifFrameIO);
    paramEditor.putBoolean("KEY_HC_GIF_FRAME_THR", WXHardCoderJNI.hcGifFrameThr);
    paramEditor.putInt("KEY_HC_GIF_FRAME_TIMEOUT", WXHardCoderJNI.hcGifFrameTimeout);
    paramEditor.putLong("KEY_HC_GIF_FRAME_ACTION", WXHardCoderJNI.hcGifFrameAction);
    paramEditor.putBoolean("KEY_HC_SNS_SCROLL_ENABLE", WXHardCoderJNI.hcSNSScrollEnable);
    paramEditor.putInt("KEY_HC_SNS_SCROLL_DELEY", WXHardCoderJNI.hcSNSScrollDelay);
    paramEditor.putInt("KEY_HC_SNS_SCROLL_CPU", WXHardCoderJNI.hcSNSScrollCPU);
    paramEditor.putInt("KEY_HC_SNS_SCROLL_IO", WXHardCoderJNI.hcSNSScrollIO);
    paramEditor.putBoolean("KEY_HC_SNS_SCROLL_THR", WXHardCoderJNI.hcSNSScrollThr);
    paramEditor.putInt("KEY_HC_SNS_SCROLL_TIMEOUT", WXHardCoderJNI.hcSNSScrollTimeout);
    paramEditor.putLong("KEY_HC_SNS_SCROLL_ACTION", WXHardCoderJNI.hcSNSScrollAction);
    paramEditor.putBoolean("KEY_HC_SNS_USER_SCROLL_ENABLE", WXHardCoderJNI.hcSNSUserScrollEnable);
    paramEditor.putInt("KEY_HC_SNS_USER_SCROLL_DELEY", WXHardCoderJNI.hcSNSUserScrollDelay);
    paramEditor.putInt("KEY_HC_SNS_USER_SCROLL_CPU", WXHardCoderJNI.hcSNSUserScrollCPU);
    paramEditor.putInt("KEY_HC_SNS_USER_SCROLL_IO", WXHardCoderJNI.hcSNSUserScrollIO);
    paramEditor.putBoolean("KEY_HC_SNS_USER_SCROLL_THR", WXHardCoderJNI.hcSNSUserScrollThr);
    paramEditor.putInt("KEY_HC_SNS_USER_SCROLL_TIMEOUT", WXHardCoderJNI.hcSNSUserScrollTimeout);
    paramEditor.putLong("KEY_HC_SNS_USER_SCROLL_ACTION", WXHardCoderJNI.hcSNSUserScrollAction);
    paramEditor.putBoolean("KEY_HC_SNS_MSG_SCROLL_ENABLE", WXHardCoderJNI.hcSNSMsgScrollEnable);
    paramEditor.putInt("KEY_HC_SNS_MSG_SCROLL_DELEY", WXHardCoderJNI.hcSNSMsgScrollDelay);
    paramEditor.putInt("KEY_HC_SNS_MSG_SCROLL_CPU", WXHardCoderJNI.hcSNSMsgScrollCPU);
    paramEditor.putInt("KEY_HC_SNS_MSG_SCROLL_IO", WXHardCoderJNI.hcSNSMsgScrollIO);
    paramEditor.putBoolean("KEY_HC_SNS_MSG_SCROLL_THR", WXHardCoderJNI.hcSNSMsgScrollThr);
    paramEditor.putInt("KEY_HC_SNS_MSG_SCROLL_TIMEOUT", WXHardCoderJNI.hcSNSMsgScrollTimeout);
    paramEditor.putLong("KEY_HC_SNS_MSG_SCROLL_ACTION", WXHardCoderJNI.hcSNSMsgScrollAction);
    paramEditor.putBoolean("KEY_HC_MEDIA_GALLERY_SCROLL_ENABLE", WXHardCoderJNI.hcMediaGalleryScrollEnable);
    paramEditor.putInt("KEY_HC_MEDIA_GALLERY_SCROLL_DELEY", WXHardCoderJNI.hcMediaGalleryScrollDelay);
    paramEditor.putInt("KEY_HC_MEDIA_GALLERY_SCROLL_CPU", WXHardCoderJNI.hcMediaGalleryScrollCPU);
    paramEditor.putInt("KEY_HC_MEDIA_GALLERY_SCROLL_IO", WXHardCoderJNI.hcMediaGalleryScrollIO);
    paramEditor.putBoolean("KEY_HC_MEDIA_GALLERY_SCROLL_THR", WXHardCoderJNI.hcMediaGalleryScrollThr);
    paramEditor.putInt("KEY_HC_MEDIA_GALLERY_SCROLL_TIMEOUT", WXHardCoderJNI.hcMediaGalleryScrollTimeout);
    paramEditor.putLong("KEY_HC_MEDIA_GALLERY_SCROLL_ACTION", WXHardCoderJNI.hcMediaGalleryScrollAction);
    paramEditor.putBoolean("KEY_HCALBUM_SCROLL_ENABLE", WXHardCoderJNI.hcAlbumScrollEnable);
    paramEditor.putInt("KEY_HC_ALBUM_SCROLL_DELEY", WXHardCoderJNI.hcAlbumScrollDelay);
    paramEditor.putInt("KEY_HC_ALBUM_SCROLL_CPU", WXHardCoderJNI.hcAlbumScrollCPU);
    paramEditor.putInt("KEY_HC_ALBUM_SCROLL_IO", WXHardCoderJNI.hcAlbumScrollIO);
    paramEditor.putBoolean("KEY_HC_ALBUM_SCROLL_THR", WXHardCoderJNI.hcAlbumScrollThr);
    paramEditor.putInt("KEY_HC_ALBUM_SCROLL_TIMEOUT", WXHardCoderJNI.hcAlbumScrollTimeout);
    paramEditor.putLong("KEY_HC_ALBUM_SCROLL_ACTION", WXHardCoderJNI.hcAlbumScrollAction);
    paramEditor.apply();
  }
  
  private static String c(Context paramContext, int paramInt1, int paramInt2)
  {
    String str1 = x.e(paramContext.getSharedPreferences(ae.cqR(), 0));
    String str2 = x.cqJ();
    if ((!str1.equalsIgnoreCase("zh_CN")) && ((!str1.equalsIgnoreCase("language_default")) || (!"zh_CN".equalsIgnoreCase(str2)))) {
      return DateFormat.getTimeInstance(3, x.Zi(str1)).format(new Time(paramInt1, paramInt2, 0));
    }
    if (paramInt1 > 12) {}
    for (int i = paramInt1 - 12;; i = paramInt1) {
      return h.p(paramContext, paramInt1 * 3600000L + paramInt2 * 60000L) + String.format("%02d:%02d", new Object[] { Integer.valueOf(i), Integer.valueOf(paramInt2) });
    }
  }
  
  protected final int getLayoutId()
  {
    return R.i.hardcoder_setting;
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setMMTitle(R.l.settings_hardcoder);
    setBackBtn(new HardCoderSettingUI.1(this));
    paramBundle = this.mController.uMN.getSharedPreferences("hardcoder_setting", 0);
    if (!paramBundle.contains("KEY_HC_ENABLE")) {
      a(paramBundle.edit().putBoolean("KEY_HC_ENABLE", true));
    }
    this.vZR = ((CheckBox)findViewById(R.h.check_debug));
    this.vZR.setChecked(WXHardCoderJNI.getDebug());
    this.vZP = ((CheckBox)findViewById(R.h.check_hc));
    this.vZP.setChecked(WXHardCoderJNI.getEnable());
    this.vZQ = ((EditText)findViewById(R.h.retry_connect_interval));
    this.vZQ.setText(WXHardCoderJNI.hcRetryInterval);
    this.vZS = ((CheckBox)findViewById(R.h.check_day_switch));
    this.vZS.setChecked(WXHardCoderJNI.hcSwitchEnable);
    this.vZT = ((CheckBox)findViewById(R.h.check_enable_time_limit));
    this.vZT.setChecked(WXHardCoderJNI.hcTimeLimit);
    this.vZU = ((TextView)findViewById(R.h.begin_time));
    this.vZV = ((TextView)findViewById(R.h.end_time));
    this.vZU.setText(c(this, WXHardCoderJNI.hcBeginTimeHour, WXHardCoderJNI.hcBeginTimeMin));
    this.vZV.setText(c(this, WXHardCoderJNI.hcEndTimeHour, WXHardCoderJNI.hcEndTimeMin));
    this.vZU.setOnClickListener(new HardCoderSettingUI.2(this));
    this.vZV.setOnClickListener(new HardCoderSettingUI.3(this));
    this.vZW = ((CheckBox)findViewById(R.h.check_boot));
    this.vZW.setChecked(WXHardCoderJNI.hcBootEnable);
    this.vZX = ((EditText)findViewById(R.h.delay_boot));
    this.vZX.setText(WXHardCoderJNI.hcBootDelay);
    this.vZY = ((EditText)findViewById(R.h.timeout_boot));
    this.vZY.setText(WXHardCoderJNI.hcBootTimeout);
    this.vZY.setSelection(this.vZY.getText().length());
    this.vZZ = ((EditText)findViewById(R.h.action_boot));
    this.vZZ.setText(WXHardCoderJNI.hcBootAction);
    this.waa = ((Spinner)findViewById(R.h.cpu_boot));
    this.waa.setSelection(WXHardCoderJNI.hcBootCPU);
    this.wab = ((Spinner)findViewById(R.h.io_boot));
    this.wab.setSelection(WXHardCoderJNI.hcBootIO);
    this.wac = ((CheckBox)findViewById(R.h.thr_boot));
    this.wac.setChecked(WXHardCoderJNI.hcBootThr);
    this.wad = ((CheckBox)findViewById(R.h.check_enter_chatting));
    this.wad.setChecked(WXHardCoderJNI.hcEnterChattingEnable);
    this.wae = ((EditText)findViewById(R.h.delay_enter_chatting));
    this.wae.setText(WXHardCoderJNI.hcEnterChattingDelay);
    this.waf = ((EditText)findViewById(R.h.timeout_enter_chatting));
    this.waf.setText(WXHardCoderJNI.hcEnterChattingTimeout);
    this.waf.setSelection(this.waf.getText().length());
    this.wag = ((EditText)findViewById(R.h.action_enter_chatting));
    this.wag.setText(WXHardCoderJNI.hcEnterChattingAction);
    this.wah = ((Spinner)findViewById(R.h.cpu_enter_chatting));
    this.wah.setSelection(WXHardCoderJNI.hcEnterChattingCPU);
    this.wai = ((Spinner)findViewById(R.h.io_enter_chatting));
    this.wai.setSelection(WXHardCoderJNI.hcEnterChattingIO);
    this.waj = ((CheckBox)findViewById(R.h.thr_enter_chatting));
    this.waj.setChecked(WXHardCoderJNI.hcEnterChattingThr);
    this.wak = ((CheckBox)findViewById(R.h.check_quit_chatting));
    this.wak.setChecked(WXHardCoderJNI.hcQuitChattingEnable);
    this.wal = ((EditText)findViewById(R.h.delay_quit_chatting));
    this.wal.setText(WXHardCoderJNI.hcQuitChattingDelay);
    this.wam = ((EditText)findViewById(R.h.timeout_quit_chatting));
    this.wam.setText(WXHardCoderJNI.hcQuitChattingTimeout);
    this.wam.setSelection(this.wam.getText().length());
    this.wan = ((EditText)findViewById(R.h.action_quit_chatting));
    this.wan.setText(WXHardCoderJNI.hcQuitChattingAction);
    this.wao = ((Spinner)findViewById(R.h.cpu_quit_chatting));
    this.wao.setSelection(WXHardCoderJNI.hcQuitChattingCPU);
    this.wap = ((Spinner)findViewById(R.h.io_quit_chatting));
    this.wap.setSelection(WXHardCoderJNI.hcQuitChattingIO);
    this.waq = ((CheckBox)findViewById(R.h.thr_quit_chatting));
    this.waq.setChecked(WXHardCoderJNI.hcQuitChattingThr);
    this.war = ((CheckBox)findViewById(R.h.check_send_msg));
    this.war.setChecked(WXHardCoderJNI.hcSendMsgEnable);
    this.was = ((EditText)findViewById(R.h.delay_send_msg));
    this.was.setText(WXHardCoderJNI.hcSendMsgDelay);
    this.wat = ((EditText)findViewById(R.h.timeout_send_msg));
    this.wat.setText(WXHardCoderJNI.hcSendMsgTimeout);
    this.wat.setSelection(this.wat.getText().length());
    this.wau = ((EditText)findViewById(R.h.action_send_msg));
    this.wau.setText(WXHardCoderJNI.hcSendMsgAction);
    this.wav = ((Spinner)findViewById(R.h.cpu_send_msg));
    this.wav.setSelection(WXHardCoderJNI.hcSendMsgCPU);
    this.waw = ((Spinner)findViewById(R.h.io_send_msg));
    this.waw.setSelection(WXHardCoderJNI.hcSendMsgIO);
    this.wax = ((CheckBox)findViewById(R.h.thr_send_msg));
    this.wax.setChecked(WXHardCoderJNI.hcSendMsgThr);
    this.way = ((CheckBox)findViewById(R.h.check_send_pic_msg));
    this.way.setChecked(WXHardCoderJNI.hcSendPicMsgEnable);
    this.waz = ((EditText)findViewById(R.h.delay_send_pic_msg));
    this.waz.setText(WXHardCoderJNI.hcSendPicMsgDelay);
    this.waA = ((EditText)findViewById(R.h.timeout_send_pic_msg));
    this.waA.setText(WXHardCoderJNI.hcSendPicMsgTimeout);
    this.waA.setSelection(this.waA.getText().length());
    this.waB = ((EditText)findViewById(R.h.action_send_pic_msg));
    this.waB.setText(WXHardCoderJNI.hcSendPicMsgAction);
    this.waC = ((Spinner)findViewById(R.h.cpu_send_pic_msg));
    this.waC.setSelection(WXHardCoderJNI.hcSendPicMsgCPU);
    this.waD = ((Spinner)findViewById(R.h.io_send_pic_msg));
    this.waD.setSelection(WXHardCoderJNI.hcSendPicMsgIO);
    this.waE = ((CheckBox)findViewById(R.h.thr_send_pic_msg));
    this.waE.setChecked(WXHardCoderJNI.hcSendPicMsgThr);
    this.waF = ((CheckBox)findViewById(R.h.check_receive_msg));
    this.waF.setChecked(WXHardCoderJNI.hcReceiveMsgEnable);
    this.waG = ((EditText)findViewById(R.h.delay_receive_msg));
    this.waG.setText(WXHardCoderJNI.hcReceiveMsgDelay);
    this.waH = ((EditText)findViewById(R.h.timeout_receive_msg));
    this.waH.setText(WXHardCoderJNI.hcReceiveMsgTimeout);
    this.waH.setSelection(this.waH.getText().length());
    this.waI = ((EditText)findViewById(R.h.action_receive_msg));
    this.waI.setText(WXHardCoderJNI.hcReceiveMsgAction);
    this.waJ = ((Spinner)findViewById(R.h.cpu_receive_msg));
    this.waJ.setSelection(WXHardCoderJNI.hcReceiveMsgCPU);
    this.waK = ((Spinner)findViewById(R.h.io_receive_msg));
    this.waK.setSelection(WXHardCoderJNI.hcReceiveMsgIO);
    this.waL = ((CheckBox)findViewById(R.h.thr_receive_msg));
    this.waL.setChecked(WXHardCoderJNI.hcReceiveMsgThr);
    this.waM = ((CheckBox)findViewById(R.h.check_update_chatroom));
    this.waM.setChecked(WXHardCoderJNI.hcUpdateChatroomEnable);
    this.waN = ((EditText)findViewById(R.h.delay_update_chatroom));
    this.waN.setText(WXHardCoderJNI.hcUpdateChatroomDelay);
    this.waO = ((EditText)findViewById(R.h.timeout_update_chatroom));
    this.waO.setText(WXHardCoderJNI.hcUpdateChatroomTimeout);
    this.waO.setSelection(this.waO.getText().length());
    this.waP = ((EditText)findViewById(R.h.action_update_chatroom));
    this.waP.setText(WXHardCoderJNI.hcUpdateChatroomAction);
    this.waQ = ((Spinner)findViewById(R.h.cpu_update_chatroom));
    this.waQ.setSelection(WXHardCoderJNI.hcUpdateChatroomCPU);
    this.waR = ((Spinner)findViewById(R.h.io_update_chatroom));
    this.waR.setSelection(WXHardCoderJNI.hcUpdateChatroomIO);
    this.waS = ((CheckBox)findViewById(R.h.thr_update_chatroom));
    this.waS.setChecked(WXHardCoderJNI.hcUpdateChatroomThr);
    this.waT = ((EditText)findViewById(R.h.update_chatroom_member_count));
    this.waT.setText(WXHardCoderJNI.hcUpdateChatroomMemberCount);
    this.waU = ((CheckBox)findViewById(R.h.check_db));
    this.waU.setChecked(WXHardCoderJNI.hcDBEnable);
    this.waV = ((EditText)findViewById(R.h.delay_db_q));
    this.waV.setText(WXHardCoderJNI.hcDBDelayQuery);
    this.waW = ((EditText)findViewById(R.h.delay_db_w));
    this.waW.setText(WXHardCoderJNI.hcDBDelayWrite);
    this.waX = ((EditText)findViewById(R.h.timeout_db));
    this.waX.setText(WXHardCoderJNI.hcDBTimeout);
    this.waY = ((EditText)findViewById(R.h.timeout_db_busy));
    this.waY.setText(WXHardCoderJNI.hcDBTimeoutBusy);
    this.waZ = ((EditText)findViewById(R.h.action_db_q));
    this.waZ.setText(WXHardCoderJNI.hcDBActionQuery);
    this.wba = ((EditText)findViewById(R.h.action_db_w));
    this.wba.setText(WXHardCoderJNI.hcDBActionWrite);
    this.wbb = ((Spinner)findViewById(R.h.cpu_db));
    this.wbb.setSelection(WXHardCoderJNI.hcDBCPU);
    this.wbc = ((Spinner)findViewById(R.h.io_db));
    this.wbc.setSelection(WXHardCoderJNI.hcDBIO);
    this.wbd = ((CheckBox)findViewById(R.h.thr_db));
    this.wbd.setChecked(WXHardCoderJNI.hcDBThr);
    this.wbe = ((CheckBox)findViewById(R.h.check_video));
    this.wbe.setChecked(WXHardCoderJNI.hcEncodeVideoEnable);
    this.wbf = ((EditText)findViewById(R.h.delay_video));
    this.wbf.setText(WXHardCoderJNI.hcEncodeVideoDelay);
    this.wbg = ((EditText)findViewById(R.h.timeout_video));
    this.wbg.setText(WXHardCoderJNI.hcEncodeVideoTimeout);
    this.wbh = ((EditText)findViewById(R.h.action_video));
    this.wbh.setText(WXHardCoderJNI.hcEncodeVideoAction);
    this.wbi = ((Spinner)findViewById(R.h.cpu_video));
    this.wbi.setSelection(WXHardCoderJNI.hcEncodeVideoCPU);
    this.wbj = ((Spinner)findViewById(R.h.io_video));
    this.wbj.setSelection(WXHardCoderJNI.hcEncodeVideoIO);
    this.wbk = ((CheckBox)findViewById(R.h.thr_video));
    this.wbk.setChecked(WXHardCoderJNI.hcEncodeVideoThr);
    this.wbl = ((CheckBox)findViewById(R.h.check_decode_pic));
    this.wbl.setChecked(WXHardCoderJNI.hcDecodePicEnable);
    this.wbm = ((EditText)findViewById(R.h.delay_decode_pic));
    this.wbm.setText(WXHardCoderJNI.hcDecodePicDelay);
    this.wbn = ((EditText)findViewById(R.h.timeout_decode_pic));
    this.wbn.setText(WXHardCoderJNI.hcDecodePicTimeout);
    this.wbo = ((EditText)findViewById(R.h.action_decode_pic));
    this.wbo.setText(WXHardCoderJNI.hcDecodePicAction);
    this.wbp = ((Spinner)findViewById(R.h.cpu_decode_pic));
    this.wbp.setSelection(WXHardCoderJNI.hcDecodePicCPU);
    this.wbq = ((Spinner)findViewById(R.h.io_decode_pic));
    this.wbq.setSelection(WXHardCoderJNI.hcDecodePicIO);
    this.wbr = ((CheckBox)findViewById(R.h.thr_decode_pic));
    this.wbr.setChecked(WXHardCoderJNI.hcDecodePicThr);
    this.wbs = ((CheckBox)findViewById(R.h.check_gif));
    this.wbs.setChecked(WXHardCoderJNI.hcGifEnable);
    this.wbt = ((EditText)findViewById(R.h.delay_gif));
    this.wbt.setText(WXHardCoderJNI.hcGifDelay);
    this.wbu = ((EditText)findViewById(R.h.timeout_gif));
    this.wbu.setText(WXHardCoderJNI.hcGifTimeout);
    this.wbv = ((EditText)findViewById(R.h.action_gif));
    this.wbv.setText(WXHardCoderJNI.hcGifAction);
    this.wbw = ((Spinner)findViewById(R.h.cpu_gif));
    this.wbw.setSelection(WXHardCoderJNI.hcGifCPU);
    this.wbx = ((Spinner)findViewById(R.h.io_gif));
    this.wbx.setSelection(WXHardCoderJNI.hcGifIO);
    this.wby = ((CheckBox)findViewById(R.h.thr_gif));
    this.wby.setChecked(WXHardCoderJNI.hcGifThr);
    this.wbz = ((CheckBox)findViewById(R.h.check_gif_frame));
    this.wbz.setChecked(WXHardCoderJNI.hcGifFrameEnable);
    this.wbA = ((EditText)findViewById(R.h.delay_gif_frame));
    this.wbA.setText(WXHardCoderJNI.hcGifFrameDelay);
    this.wbB = ((EditText)findViewById(R.h.timeout_gif_frame));
    this.wbB.setText(WXHardCoderJNI.hcGifFrameTimeout);
    this.wbC = ((EditText)findViewById(R.h.action_gif_frame));
    this.wbC.setText(WXHardCoderJNI.hcGifFrameAction);
    this.wbD = ((Spinner)findViewById(R.h.cpu_gif_frame));
    this.wbD.setSelection(WXHardCoderJNI.hcGifFrameCPU);
    this.wbE = ((Spinner)findViewById(R.h.io_gif_frame));
    this.wbE.setSelection(WXHardCoderJNI.hcGifFrameIO);
    this.wbF = ((CheckBox)findViewById(R.h.thr_gif_frame));
    this.wbF.setChecked(WXHardCoderJNI.hcGifFrameThr);
    this.wbG = ((CheckBox)findViewById(R.h.check_sns_scroll));
    this.wbG.setChecked(WXHardCoderJNI.hcSNSScrollEnable);
    this.wbH = ((EditText)findViewById(R.h.delay_sns_scroll));
    this.wbH.setText(WXHardCoderJNI.hcSNSScrollDelay);
    this.wbI = ((EditText)findViewById(R.h.timeout_sns_scroll));
    this.wbI.setText(WXHardCoderJNI.hcSNSScrollTimeout);
    this.wbJ = ((EditText)findViewById(R.h.action_sns_scroll));
    this.wbJ.setText(WXHardCoderJNI.hcSNSScrollAction);
    this.wbK = ((Spinner)findViewById(R.h.cpu_sns_scroll));
    this.wbK.setSelection(WXHardCoderJNI.hcSNSScrollCPU);
    this.wbL = ((Spinner)findViewById(R.h.io_sns_scroll));
    this.wbL.setSelection(WXHardCoderJNI.hcSNSScrollIO);
    this.wbM = ((CheckBox)findViewById(R.h.thr_sns_scroll));
    this.wbM.setChecked(WXHardCoderJNI.hcSNSScrollThr);
    this.wbN = ((CheckBox)findViewById(R.h.check_sns_user_scroll));
    this.wbN.setChecked(WXHardCoderJNI.hcSNSUserScrollEnable);
    this.wbO = ((EditText)findViewById(R.h.delay_sns_user_scroll));
    this.wbO.setText(WXHardCoderJNI.hcSNSUserScrollDelay);
    this.wbP = ((EditText)findViewById(R.h.timeout_sns_user_scroll));
    this.wbP.setText(WXHardCoderJNI.hcSNSUserScrollTimeout);
    this.wbQ = ((EditText)findViewById(R.h.action_sns_user_scroll));
    this.wbQ.setText(WXHardCoderJNI.hcSNSUserScrollAction);
    this.wbR = ((Spinner)findViewById(R.h.cpu_sns_user_scroll));
    this.wbR.setSelection(WXHardCoderJNI.hcSNSUserScrollCPU);
    this.wbS = ((Spinner)findViewById(R.h.io_sns_user_scroll));
    this.wbS.setSelection(WXHardCoderJNI.hcSNSUserScrollIO);
    this.wbT = ((CheckBox)findViewById(R.h.thr_sns_user_scroll));
    this.wbT.setChecked(WXHardCoderJNI.hcSNSUserScrollThr);
    this.wbU = ((CheckBox)findViewById(R.h.check_sns_msg_scroll));
    this.wbU.setChecked(WXHardCoderJNI.hcSNSMsgScrollEnable);
    this.wbV = ((EditText)findViewById(R.h.delay_sns_msg_scroll));
    this.wbV.setText(WXHardCoderJNI.hcSNSMsgScrollDelay);
    this.wbW = ((EditText)findViewById(R.h.timeout_sns_msg_scroll));
    this.wbW.setText(WXHardCoderJNI.hcSNSMsgScrollTimeout);
    this.wbX = ((EditText)findViewById(R.h.action_sns_msg_scroll));
    this.wbX.setText(WXHardCoderJNI.hcSNSMsgScrollAction);
    this.wbY = ((Spinner)findViewById(R.h.cpu_sns_msg_scroll));
    this.wbY.setSelection(WXHardCoderJNI.hcSNSMsgScrollCPU);
    this.wbZ = ((Spinner)findViewById(R.h.io_sns_msg_scroll));
    this.wbZ.setSelection(WXHardCoderJNI.hcSNSMsgScrollIO);
    this.wca = ((CheckBox)findViewById(R.h.thr_sns_msg_scroll));
    this.wca.setChecked(WXHardCoderJNI.hcSNSMsgScrollThr);
    this.wcb = ((CheckBox)findViewById(R.h.check_media_gallery_scroll));
    this.wcb.setChecked(WXHardCoderJNI.hcMediaGalleryScrollEnable);
    this.wcc = ((EditText)findViewById(R.h.delay_media_gallery_scroll));
    this.wcc.setText(WXHardCoderJNI.hcMediaGalleryScrollDelay);
    this.wcd = ((EditText)findViewById(R.h.timeout_media_gallery_scroll));
    this.wcd.setText(WXHardCoderJNI.hcMediaGalleryScrollTimeout);
    this.wce = ((EditText)findViewById(R.h.action_media_gallery_scroll));
    this.wce.setText(WXHardCoderJNI.hcMediaGalleryScrollAction);
    this.wcf = ((Spinner)findViewById(R.h.cpu_media_gallery_scroll));
    this.wcf.setSelection(WXHardCoderJNI.hcMediaGalleryScrollCPU);
    this.wcg = ((Spinner)findViewById(R.h.io_media_gallery_scroll));
    this.wcg.setSelection(WXHardCoderJNI.hcMediaGalleryScrollIO);
    this.wch = ((CheckBox)findViewById(R.h.thr_media_gallery_scroll));
    this.wch.setChecked(WXHardCoderJNI.hcMediaGalleryScrollThr);
    this.wci = ((CheckBox)findViewById(R.h.check_album_scroll));
    this.wci.setChecked(WXHardCoderJNI.hcAlbumScrollEnable);
    this.wcj = ((EditText)findViewById(R.h.delay_album_scroll));
    this.wcj.setText(WXHardCoderJNI.hcAlbumScrollDelay);
    this.wck = ((EditText)findViewById(R.h.timeout_album_scroll));
    this.wck.setText(WXHardCoderJNI.hcAlbumScrollTimeout);
    this.wcl = ((EditText)findViewById(R.h.action_album_scroll));
    this.wcl.setText(WXHardCoderJNI.hcAlbumScrollAction);
    this.wcm = ((Spinner)findViewById(R.h.cpu_album_scroll));
    this.wcm.setSelection(WXHardCoderJNI.hcAlbumScrollCPU);
    this.wcn = ((Spinner)findViewById(R.h.io_album_scroll));
    this.wcn.setSelection(WXHardCoderJNI.hcAlbumScrollIO);
    this.wco = ((CheckBox)findViewById(R.h.thr_album_scroll));
    this.wco.setChecked(WXHardCoderJNI.hcAlbumScrollThr);
    this.vZP.setOnClickListener(new HardCoderSettingUI.4(this));
  }
  
  protected Dialog onCreateDialog(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return null;
    }
    if (this.nTM) {
      return new TimePickerDialog(this.mController.uMN, this.nTN, WXHardCoderJNI.hcBeginTimeHour, WXHardCoderJNI.hcBeginTimeMin, false);
    }
    return new TimePickerDialog(this.mController.uMN, this.nTN, WXHardCoderJNI.hcEndTimeHour, WXHardCoderJNI.hcBeginTimeMin, false);
  }
  
  protected void onDestroy()
  {
    y.i("HardCoderSettingUI", "save");
    if ((this.vZP.isChecked()) && (!WXHardCoderJNI.getEnable()))
    {
      WXHardCoderJNI.setEnable(this.vZP.isChecked());
      WXHardCoderJNI.initHardCoderParams(new a());
      WXHardCoderJNI.initHardCoder();
    }
    WXHardCoderJNI.setDebug(this.vZR.isChecked());
    WXHardCoderJNI.setEnable(this.vZP.isChecked());
    WXHardCoderJNI.hcRetryInterval = bk.getInt(this.vZQ.getText().toString(), WXHardCoderJNI.hcRetryInterval);
    if (WXHardCoderJNI.getCheckEnv())
    {
      WXHardCoderJNI.setHCNativeDebug(WXHardCoderJNI.getDebug());
      WXHardCoderJNI.setHCNativeEnable(WXHardCoderJNI.getEnable());
      WXHardCoderJNI.setRetryConnectInterval(WXHardCoderJNI.hcRetryInterval);
    }
    WXHardCoderJNI.hcSwitchEnable = this.vZS.isChecked();
    WXHardCoderJNI.hcTimeLimit = this.vZT.isChecked();
    WXHardCoderJNI.hcBootEnable = this.vZW.isChecked();
    WXHardCoderJNI.hcBootDelay = bk.getInt(this.vZX.getText().toString(), WXHardCoderJNI.hcBootDelay);
    WXHardCoderJNI.hcBootCPU = this.waa.getSelectedItemPosition();
    WXHardCoderJNI.hcBootIO = this.wab.getSelectedItemPosition();
    WXHardCoderJNI.hcBootThr = this.wac.isChecked();
    WXHardCoderJNI.hcBootTimeout = bk.getInt(this.vZY.getText().toString(), WXHardCoderJNI.hcBootTimeout);
    WXHardCoderJNI.hcBootAction = bk.getLong(this.vZZ.getText().toString(), WXHardCoderJNI.hcBootAction);
    WXHardCoderJNI.hcEnterChattingEnable = this.wad.isChecked();
    WXHardCoderJNI.hcEnterChattingDelay = bk.getInt(this.wae.getText().toString(), WXHardCoderJNI.hcEnterChattingDelay);
    WXHardCoderJNI.hcEnterChattingCPU = this.wah.getSelectedItemPosition();
    WXHardCoderJNI.hcEnterChattingIO = this.wai.getSelectedItemPosition();
    WXHardCoderJNI.hcEnterChattingThr = this.waj.isChecked();
    WXHardCoderJNI.hcEnterChattingTimeout = bk.getInt(this.waf.getText().toString(), WXHardCoderJNI.hcEnterChattingTimeout);
    WXHardCoderJNI.hcEnterChattingAction = bk.getLong(this.wag.getText().toString(), WXHardCoderJNI.hcEnterChattingAction);
    WXHardCoderJNI.hcQuitChattingEnable = this.wak.isChecked();
    WXHardCoderJNI.hcQuitChattingDelay = bk.getInt(this.wal.getText().toString(), WXHardCoderJNI.hcQuitChattingDelay);
    WXHardCoderJNI.hcQuitChattingCPU = this.wao.getSelectedItemPosition();
    WXHardCoderJNI.hcQuitChattingIO = this.wap.getSelectedItemPosition();
    WXHardCoderJNI.hcQuitChattingThr = this.waq.isChecked();
    WXHardCoderJNI.hcQuitChattingTimeout = bk.getInt(this.wam.getText().toString(), WXHardCoderJNI.hcQuitChattingTimeout);
    WXHardCoderJNI.hcQuitChattingAction = bk.getLong(this.wan.getText().toString(), WXHardCoderJNI.hcQuitChattingAction);
    WXHardCoderJNI.hcSendMsgEnable = this.war.isChecked();
    WXHardCoderJNI.hcSendMsgDelay = bk.getInt(this.was.getText().toString(), WXHardCoderJNI.hcSendMsgDelay);
    WXHardCoderJNI.hcSendMsgCPU = this.wav.getSelectedItemPosition();
    WXHardCoderJNI.hcSendMsgIO = this.waw.getSelectedItemPosition();
    WXHardCoderJNI.hcSendMsgThr = this.wax.isChecked();
    WXHardCoderJNI.hcSendMsgTimeout = bk.getInt(this.wat.getText().toString(), WXHardCoderJNI.hcSendMsgTimeout);
    WXHardCoderJNI.hcSendMsgAction = bk.getLong(this.wau.getText().toString(), WXHardCoderJNI.hcSendMsgAction);
    WXHardCoderJNI.hcSendPicMsgEnable = this.way.isChecked();
    WXHardCoderJNI.hcSendPicMsgDelay = bk.getInt(this.waz.getText().toString(), WXHardCoderJNI.hcSendPicMsgDelay);
    WXHardCoderJNI.hcSendPicMsgCPU = this.waC.getSelectedItemPosition();
    WXHardCoderJNI.hcSendPicMsgIO = this.waD.getSelectedItemPosition();
    WXHardCoderJNI.hcSendPicMsgThr = this.waE.isChecked();
    WXHardCoderJNI.hcSendPicMsgTimeout = bk.getInt(this.waA.getText().toString(), WXHardCoderJNI.hcSendPicMsgTimeout);
    WXHardCoderJNI.hcSendPicMsgAction = bk.getLong(this.waB.getText().toString(), WXHardCoderJNI.hcSendPicMsgAction);
    WXHardCoderJNI.hcReceiveMsgEnable = this.waF.isChecked();
    WXHardCoderJNI.hcReceiveMsgDelay = bk.getInt(this.waG.getText().toString(), WXHardCoderJNI.hcReceiveMsgDelay);
    WXHardCoderJNI.hcReceiveMsgCPU = this.waJ.getSelectedItemPosition();
    WXHardCoderJNI.hcReceiveMsgIO = this.waK.getSelectedItemPosition();
    WXHardCoderJNI.hcReceiveMsgThr = this.waL.isChecked();
    WXHardCoderJNI.hcReceiveMsgTimeout = bk.getInt(this.waH.getText().toString(), WXHardCoderJNI.hcReceiveMsgTimeout);
    WXHardCoderJNI.hcReceiveMsgAction = bk.getLong(this.waI.getText().toString(), WXHardCoderJNI.hcReceiveMsgAction);
    WXHardCoderJNI.hcUpdateChatroomEnable = this.waM.isChecked();
    WXHardCoderJNI.hcUpdateChatroomDelay = bk.getInt(this.waN.getText().toString(), WXHardCoderJNI.hcUpdateChatroomDelay);
    WXHardCoderJNI.hcUpdateChatroomCPU = this.waQ.getSelectedItemPosition();
    WXHardCoderJNI.hcUpdateChatroomIO = this.waR.getSelectedItemPosition();
    WXHardCoderJNI.hcUpdateChatroomThr = this.waS.isChecked();
    WXHardCoderJNI.hcUpdateChatroomTimeout = bk.getInt(this.waO.getText().toString(), WXHardCoderJNI.hcUpdateChatroomTimeout);
    WXHardCoderJNI.hcUpdateChatroomAction = bk.getLong(this.waP.getText().toString(), WXHardCoderJNI.hcUpdateChatroomAction);
    WXHardCoderJNI.hcUpdateChatroomMemberCount = bk.getLong(this.waT.getText().toString(), WXHardCoderJNI.hcUpdateChatroomMemberCount);
    WXHardCoderJNI.hcDBEnable = this.waU.isChecked();
    WXHardCoderJNI.hcDBDelayQuery = bk.getInt(this.waV.getText().toString(), WXHardCoderJNI.hcDBDelayQuery);
    WXHardCoderJNI.hcDBDelayWrite = bk.getInt(this.waW.getText().toString(), WXHardCoderJNI.hcDBDelayWrite);
    WXHardCoderJNI.hcDBCPU = this.waa.getSelectedItemPosition();
    WXHardCoderJNI.hcDBIO = this.wab.getSelectedItemPosition();
    WXHardCoderJNI.hcDBThr = this.wac.isChecked();
    WXHardCoderJNI.hcDBTimeout = bk.getInt(this.waX.getText().toString(), WXHardCoderJNI.hcDBTimeout);
    WXHardCoderJNI.hcDBTimeoutBusy = bk.getInt(this.waY.getText().toString(), WXHardCoderJNI.hcDBTimeoutBusy);
    WXHardCoderJNI.hcDBActionQuery = bk.getLong(this.waZ.getText().toString(), WXHardCoderJNI.hcDBActionQuery);
    WXHardCoderJNI.hcDBActionWrite = bk.getLong(this.wba.getText().toString(), WXHardCoderJNI.hcDBActionWrite);
    WXHardCoderJNI.hcEncodeVideoEnable = this.wbe.isChecked();
    WXHardCoderJNI.hcEncodeVideoDelay = bk.getInt(this.wbf.getText().toString(), WXHardCoderJNI.hcEncodeVideoDelay);
    WXHardCoderJNI.hcEncodeVideoCPU = this.wbi.getSelectedItemPosition();
    WXHardCoderJNI.hcEncodeVideoIO = this.wbj.getSelectedItemPosition();
    WXHardCoderJNI.hcEncodeVideoThr = this.wbk.isChecked();
    WXHardCoderJNI.hcEncodeVideoTimeout = bk.getInt(this.wbg.getText().toString(), WXHardCoderJNI.hcEncodeVideoTimeout);
    WXHardCoderJNI.hcEncodeVideoAction = bk.getLong(this.wbh.getText().toString(), WXHardCoderJNI.hcEncodeVideoAction);
    WXHardCoderJNI.hcDecodePicEnable = this.wbl.isChecked();
    WXHardCoderJNI.hcDecodePicDelay = bk.getInt(this.wbm.getText().toString(), WXHardCoderJNI.hcDecodePicDelay);
    WXHardCoderJNI.hcDecodePicCPU = this.wbp.getSelectedItemPosition();
    WXHardCoderJNI.hcDecodePicIO = this.wbq.getSelectedItemPosition();
    WXHardCoderJNI.hcDecodePicThr = this.wbr.isChecked();
    WXHardCoderJNI.hcDecodePicTimeout = bk.getInt(this.wbn.getText().toString(), WXHardCoderJNI.hcDecodePicTimeout);
    WXHardCoderJNI.hcDecodePicAction = bk.getLong(this.wbo.getText().toString(), WXHardCoderJNI.hcDecodePicAction);
    WXHardCoderJNI.hcGifEnable = this.wbs.isChecked();
    WXHardCoderJNI.hcGifDelay = bk.getInt(this.wbt.getText().toString(), WXHardCoderJNI.hcGifDelay);
    WXHardCoderJNI.hcGifCPU = this.wbw.getSelectedItemPosition();
    WXHardCoderJNI.hcGifIO = this.wbx.getSelectedItemPosition();
    WXHardCoderJNI.hcGifThr = this.wby.isChecked();
    WXHardCoderJNI.hcGifTimeout = bk.getInt(this.wbu.getText().toString(), WXHardCoderJNI.hcGifTimeout);
    WXHardCoderJNI.hcGifAction = bk.getLong(this.wbv.getText().toString(), WXHardCoderJNI.hcGifAction);
    WXHardCoderJNI.hcGifFrameEnable = this.wbz.isChecked();
    WXHardCoderJNI.hcGifFrameDelay = bk.getInt(this.wbA.getText().toString(), WXHardCoderJNI.hcGifFrameDelay);
    WXHardCoderJNI.hcGifFrameCPU = this.wbD.getSelectedItemPosition();
    WXHardCoderJNI.hcGifFrameIO = this.wbE.getSelectedItemPosition();
    WXHardCoderJNI.hcGifFrameThr = this.wbF.isChecked();
    WXHardCoderJNI.hcGifFrameTimeout = bk.getInt(this.wbB.getText().toString(), WXHardCoderJNI.hcGifFrameTimeout);
    WXHardCoderJNI.hcGifFrameAction = bk.getLong(this.wbC.getText().toString(), WXHardCoderJNI.hcGifFrameAction);
    WXHardCoderJNI.hcSNSScrollEnable = this.wbG.isChecked();
    WXHardCoderJNI.hcSNSScrollDelay = bk.getInt(this.wbH.getText().toString(), WXHardCoderJNI.hcSNSScrollDelay);
    WXHardCoderJNI.hcSNSScrollCPU = this.wbK.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSScrollIO = this.wbL.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSScrollThr = this.wbM.isChecked();
    WXHardCoderJNI.hcSNSScrollTimeout = bk.getInt(this.wbI.getText().toString(), WXHardCoderJNI.hcSNSScrollTimeout);
    WXHardCoderJNI.hcSNSScrollAction = bk.getLong(this.wbJ.getText().toString(), WXHardCoderJNI.hcSNSScrollAction);
    WXHardCoderJNI.hcSNSUserScrollEnable = this.wbN.isChecked();
    WXHardCoderJNI.hcSNSUserScrollDelay = bk.getInt(this.wbO.getText().toString(), WXHardCoderJNI.hcSNSUserScrollDelay);
    WXHardCoderJNI.hcSNSUserScrollCPU = this.wbR.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSUserScrollIO = this.wbS.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSUserScrollThr = this.wbT.isChecked();
    WXHardCoderJNI.hcSNSUserScrollTimeout = bk.getInt(this.wbP.getText().toString(), WXHardCoderJNI.hcSNSUserScrollTimeout);
    WXHardCoderJNI.hcSNSUserScrollAction = bk.getLong(this.wbQ.getText().toString(), WXHardCoderJNI.hcSNSUserScrollAction);
    WXHardCoderJNI.hcSNSMsgScrollEnable = this.wbU.isChecked();
    WXHardCoderJNI.hcSNSMsgScrollDelay = bk.getInt(this.wbV.getText().toString(), WXHardCoderJNI.hcSNSMsgScrollDelay);
    WXHardCoderJNI.hcSNSMsgScrollCPU = this.wbY.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSMsgScrollIO = this.wbZ.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSMsgScrollThr = this.wca.isChecked();
    WXHardCoderJNI.hcSNSMsgScrollTimeout = bk.getInt(this.wbW.getText().toString(), WXHardCoderJNI.hcSNSMsgScrollTimeout);
    WXHardCoderJNI.hcSNSMsgScrollAction = bk.getLong(this.wbX.getText().toString(), WXHardCoderJNI.hcSNSMsgScrollAction);
    WXHardCoderJNI.hcMediaGalleryScrollEnable = this.wcb.isChecked();
    WXHardCoderJNI.hcMediaGalleryScrollDelay = bk.getInt(this.wcc.getText().toString(), WXHardCoderJNI.hcMediaGalleryScrollDelay);
    WXHardCoderJNI.hcMediaGalleryScrollCPU = this.wcf.getSelectedItemPosition();
    WXHardCoderJNI.hcMediaGalleryScrollIO = this.wcg.getSelectedItemPosition();
    WXHardCoderJNI.hcMediaGalleryScrollThr = this.wch.isChecked();
    WXHardCoderJNI.hcMediaGalleryScrollTimeout = bk.getInt(this.wcd.getText().toString(), WXHardCoderJNI.hcMediaGalleryScrollTimeout);
    WXHardCoderJNI.hcMediaGalleryScrollAction = bk.getLong(this.wce.getText().toString(), WXHardCoderJNI.hcMediaGalleryScrollAction);
    WXHardCoderJNI.hcAlbumScrollEnable = this.wci.isChecked();
    WXHardCoderJNI.hcAlbumScrollDelay = bk.getInt(this.wcj.getText().toString(), WXHardCoderJNI.hcAlbumScrollDelay);
    WXHardCoderJNI.hcAlbumScrollCPU = this.wcm.getSelectedItemPosition();
    WXHardCoderJNI.hcAlbumScrollIO = this.wcn.getSelectedItemPosition();
    WXHardCoderJNI.hcAlbumScrollThr = this.wco.isChecked();
    WXHardCoderJNI.hcAlbumScrollTimeout = bk.getInt(this.wck.getText().toString(), WXHardCoderJNI.hcAlbumScrollTimeout);
    WXHardCoderJNI.hcAlbumScrollAction = bk.getLong(this.wcl.getText().toString(), WXHardCoderJNI.hcAlbumScrollAction);
    a(this.mController.uMN.getSharedPreferences("hardcoder_setting", 0).edit());
    WXHardCoderJNI.reloadSPConfig(WXHardCoderJNI.RELOAD_SCENE_SETTING);
    super.onDestroy();
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.mm\classes8.jar
 * Qualified Name:     com.tencent.mm.ui.tools.HardCoderSettingUI
 * JD-Core Version:    0.7.0.1
 */